{"version":3,"file":"environment.js","sourceRoot":"","sources":["../../src/features/environment.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;;;;;;;AAEH,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG3C,OAA+B,EAAC,YAAY,EAAE,YAAY,EAAE,gBAAgB,EAAE,SAAS,EAAE,MAAM,EAAE,qBAAqB,EAAC,MAAM,yBAAyB,CAAC;AAGvJ,OAAO,EAAc,cAAc,EAAC,MAAM,iBAAiB,CAAC;AAE5D,MAAM,CAAC,MAAM,YAAY,GAAG,GAAG,CAAC;AAChC,MAAM,wBAAwB,GAAG,GAAG,CAAC;AACrC,MAAM,uBAAuB,GAAG,GAAG,CAAC;AACpC,MAAM,gBAAgB,GAAG,GAAG,CAAC;AAE7B,MAAM,sBAAsB,GAAG,MAAM,CAAC,uBAAuB,CAAC,CAAC;AAC/D,MAAM,oBAAoB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;AAC3D,MAAM,CAAC,MAAM,kBAAkB,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;AAC9D,MAAM,wBAAwB,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;AACnE,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAWvC,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC5B,kBAAqB,EAAuC,EAAE;;IAChE,MAAM,6BAA8B,SAAQ,kBAAkB;QAA9D;;YAEE,qBAAgB,GAAgB,IAAI,CAAC;YAGrC,gBAAW,GAAgB,IAAI,CAAC;YAGhC,oBAAe,GAAW,wBAAwB,CAAC;YAGnD,mBAAc,GAAW,uBAAuB,CAAC;YAKjD,aAAQ,GAAW,gBAAgB,CAAC;YAE7B,QAAwB,GAAiB,IAAI,CAAC;YAE9C,QAA0B,GAAmC,IAAI,CAAC;YAElE,QAAY,GAAG,CAAC,KAAiB,EAAE,EAAE;gBAC1C,IAAK,KAAsB,CAAC,OAAO,KAAK,IAAI,EAAE;oBAC5C,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;iBAC5B;YACH,CAAC,CAAC;QA6GJ,CAAC;QA3GC,iBAAiB;YACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QACvE,CAAC;QAED,oBAAoB;YAClB,KAAK,CAAC,oBAAoB,EAAE,CAAC;YAC7B,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAC1E,CAAC;QAED,OAAO,CAAC,iBAAqD;YAC3D,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;YAEjC,IAAI,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;gBAC5C,IAAI,CAAC,MAAM,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,CAAC;gBACrE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;aACtB;YAED,IAAI,iBAAiB,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE;gBAC3C,IAAI,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACpD,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;aACtB;YAED,IAAI,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;aACtB;YAED,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,kBAAkB,CAAC;gBACzC,iBAAiB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBACtC,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE;gBACjC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;aAC5B;QACH,CAAC;QAED,cAAc;YACZ,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,CAAC;QAC5C,CAAC;QAED,OAjDQ,sBAAsB,OAEtB,wBAAwB,OAExB,UAAU,EA6CjB,YAAY,EAAC;YACZ,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC;YAEtB,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,IAAI,EAAE;gBACxC,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;aAC1D;QACH,CAAC;QAED,KAAK,CAAA,CAAC,kBAAkB,CAAC;YACvB,MAAM,EAAC,WAAW,EAAE,gBAAgB,EAAC,GAAG,IAAI,CAAC;YAE7C,IAAI,IAAI,CAAC,wBAAwB,CAAC,IAAI,IAAI,EAAE;gBAC1C,IAAI,CAAC,wBAAwB,CAAE,EAAE,CAAC;gBAClC,IAAI,CAAC,wBAAwB,CAAC,GAAG,IAAI,CAAC;aACvC;YAED,MAAM,EAAC,YAAY,EAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YAEvC,IAAI,YAAY,IAAI,IAAI,EAAE;gBACxB,OAAO;aACR;YAED,IAAI;gBACF,MAAM,EAAC,cAAc,EAAE,MAAM,EAAC,GAC1B,MAAM,IAAI,OAAO,CACb,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;oBACxB,MAAM,YAAY,GACd,YAAY,CAAC,+BAA+B,CACxC,cAAc,CAAC,WAAW,CAAC,EAC3B,gBAAgB,EAChB,EAAC,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,EAAC,CAAC,CAAC;oBACnD,IAAI,CAAC,wBAAwB,CAAC,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBAC5D,OAAO,CAAC,MAAM,YAAY,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBAEX,IAAI,MAAM,IAAI,IAAI,EAAE;oBAClB,qEAAqE;oBACrE,0BAA0B;oBAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU;wBACnB,MAAM,CAAC,IAAI,KAAK,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC;iBACnE;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;iBAChC;gBAED,IAAI,CAAC,oBAAoB,CAAC,CAAC,cAAc,CAAC,CAAC;gBAC3C,IAAI,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,EAAC,IAAI,EAAE,eAAe,EAAC,CAAC,CAAC;aACrD;YAAC,OAAO,cAAc,EAAE;gBACvB,IAAI,cAAc,YAAY,KAAK,EAAE;oBACnC,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC;oBACjC,MAAM,cAAc,CAAC;iBACtB;aACF;QACH,CAAC;QAED;;;WAGG;QACI,CAAC,oBAAoB,CAAC,CAAC,cAA4B;YACxD,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,KAAK,cAAc,EAAE;gBAC/C,OAAO;aACR;YACD,IAAI,CAAC,sBAAsB,CAAC,GAAG,cAAc,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC;YACxD,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAE1D,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;QACvB,CAAC;KACF;IArIC;QADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,mBAAmB,EAAC,CAAC;2EACpB;IAGrC;QADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,cAAc,EAAC,CAAC;sEACpB;IAGhC;QADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kBAAkB,EAAC,CAAC;0EACL;IAGnD;QADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,iBAAiB,EAAC,CAAC;yEACN;IAKjD;QAHC,QAAQ,CAAC;YACR,IAAI,EAAE,MAAM;SACb,CAAC;mEACkC;IAyHtC,OAAO,6BAA6B,CAAC;AACvC,CAAC,CAAC","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {property} from 'lit/decorators.js';\nimport {Event as ThreeEvent, Texture} from 'three';\n\nimport ModelViewerElementBase, {$needsRender, $onModelLoad, $progressTracker, $renderer, $scene, $shouldAttemptPreload} from '../model-viewer-base.js';\nimport {PreloadEvent} from '../three-components/CachingGLTFLoader.js';\nimport {EnvironmentMapAndSkybox} from '../three-components/TextureUtils.js';\nimport {Constructor, deserializeUrl} from '../utilities.js';\n\nexport const BASE_OPACITY = 0.5;\nconst DEFAULT_SHADOW_INTENSITY = 0.0;\nconst DEFAULT_SHADOW_SOFTNESS = 1.0;\nconst DEFAULT_EXPOSURE = 1.0;\n\nconst $currentEnvironmentMap = Symbol('currentEnvironmentMap');\nconst $applyEnvironmentMap = Symbol('applyEnvironmentMap');\nexport const $updateEnvironment = Symbol('updateEnvironment');\nconst $cancelEnvironmentUpdate = Symbol('cancelEnvironmentUpdate');\nconst $onPreload = Symbol('onPreload');\n\nexport declare interface EnvironmentInterface {\n  environmentImage: string|null;\n  skyboxImage: string|null;\n  shadowIntensity: number;\n  shadowSoftness: number;\n  exposure: number;\n  hasBakedShadow(): boolean;\n}\n\nexport const EnvironmentMixin = <T extends Constructor<ModelViewerElementBase>>(\n    ModelViewerElement: T): Constructor<EnvironmentInterface>&T => {\n  class EnvironmentModelViewerElement extends ModelViewerElement {\n    @property({type: String, attribute: 'environment-image'})\n    environmentImage: string|null = null;\n\n    @property({type: String, attribute: 'skybox-image'})\n    skyboxImage: string|null = null;\n\n    @property({type: Number, attribute: 'shadow-intensity'})\n    shadowIntensity: number = DEFAULT_SHADOW_INTENSITY;\n\n    @property({type: Number, attribute: 'shadow-softness'})\n    shadowSoftness: number = DEFAULT_SHADOW_SOFTNESS;\n\n    @property({\n      type: Number,\n    })\n    exposure: number = DEFAULT_EXPOSURE;\n\n    private[$currentEnvironmentMap]: Texture|null = null;\n\n    private[$cancelEnvironmentUpdate]: ((...args: any[]) => any)|null = null;\n\n    private[$onPreload] = (event: ThreeEvent) => {\n      if ((event as PreloadEvent).element === this) {\n        this[$updateEnvironment]();\n      }\n    };\n\n    connectedCallback() {\n      super.connectedCallback();\n      this[$renderer].loader.addEventListener('preload', this[$onPreload]);\n    }\n\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this[$renderer].loader.removeEventListener('preload', this[$onPreload]);\n    }\n\n    updated(changedProperties: Map<string|number|symbol, unknown>) {\n      super.updated(changedProperties);\n\n      if (changedProperties.has('shadowIntensity')) {\n        this[$scene].setShadowIntensity(this.shadowIntensity * BASE_OPACITY);\n        this[$needsRender]();\n      }\n\n      if (changedProperties.has('shadowSoftness')) {\n        this[$scene].setShadowSoftness(this.shadowSoftness);\n        this[$needsRender]();\n      }\n\n      if (changedProperties.has('exposure')) {\n        this[$scene].exposure = this.exposure;\n        this[$needsRender]();\n      }\n\n      if ((changedProperties.has('environmentImage') ||\n           changedProperties.has('skyboxImage')) &&\n          this[$shouldAttemptPreload]()) {\n        this[$updateEnvironment]();\n      }\n    }\n\n    hasBakedShadow(): boolean {\n      return this[$scene].bakedShadows.size > 0;\n    }\n\n    [$onModelLoad]() {\n      super[$onModelLoad]();\n\n      if (this[$currentEnvironmentMap] != null) {\n        this[$applyEnvironmentMap](this[$currentEnvironmentMap]);\n      }\n    }\n\n    async[$updateEnvironment]() {\n      const {skyboxImage, environmentImage} = this;\n\n      if (this[$cancelEnvironmentUpdate] != null) {\n        this[$cancelEnvironmentUpdate]!();\n        this[$cancelEnvironmentUpdate] = null;\n      }\n\n      const {textureUtils} = this[$renderer];\n\n      if (textureUtils == null) {\n        return;\n      }\n\n      try {\n        const {environmentMap, skybox} =\n            await new Promise<EnvironmentMapAndSkybox>(\n                async (resolve, reject) => {\n                  const texturesLoad =\n                      textureUtils.generateEnvironmentMapAndSkybox(\n                          deserializeUrl(skyboxImage),\n                          environmentImage,\n                          {progressTracker: this[$progressTracker]});\n                  this[$cancelEnvironmentUpdate] = () => reject(texturesLoad);\n                  resolve(await texturesLoad);\n                });\n\n        if (skybox != null) {\n          // When using the same environment and skybox, use the environment as\n          // it gives HDR filtering.\n          this[$scene].background =\n              skybox.name === environmentMap.name ? environmentMap : skybox;\n        } else {\n          this[$scene].background = null;\n        }\n\n        this[$applyEnvironmentMap](environmentMap);\n        this[$scene].dispatchEvent({type: 'envmap-update'});\n      } catch (errorOrPromise) {\n        if (errorOrPromise instanceof Error) {\n          this[$applyEnvironmentMap](null);\n          throw errorOrPromise;\n        }\n      }\n    }\n\n    /**\n     * Sets the Model to use the provided environment map,\n     * or `null` if the Model should remove its' environment map.\n     */\n    private[$applyEnvironmentMap](environmentMap: Texture|null) {\n      if (this[$scene].environment === environmentMap) {\n        return;\n      }\n      this[$currentEnvironmentMap] = environmentMap;\n      this[$scene].environment = this[$currentEnvironmentMap];\n      this.dispatchEvent(new CustomEvent('environment-change'));\n\n      this[$needsRender]();\n    }\n  }\n\n  return EnvironmentModelViewerElement;\n};\n"]}