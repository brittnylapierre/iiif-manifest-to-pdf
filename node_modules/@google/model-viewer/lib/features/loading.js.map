{"version":3,"file":"loading.js","sourceRoot":"","sources":["../../src/features/loading.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {property} from 'lit/decorators.js';\n\nimport ModelViewerElementBase, {$altDefaulted, $announceModelVisibility, $getModelIsVisible, $hasTransitioned, $isElementInViewport, $progressTracker, $scene, $sceneIsReady, $shouldAttemptPreload, $updateSource, $updateStatus, $userInputElement, toVector3D, Vector3D} from '../model-viewer-base.js';\nimport {$loader, CachingGLTFLoader} from '../three-components/CachingGLTFLoader.js';\nimport {Renderer} from '../three-components/Renderer.js';\nimport {Constructor, throttle} from '../utilities.js';\n\nexport type RevealAttributeValue = 'auto'|'interaction'|'manual';\nexport type LoadingAttributeValue = 'auto'|'lazy'|'eager';\ntype DismissalSource = 'interaction';\n\nexport const POSTER_TRANSITION_TIME = 300;\nexport const PROGRESS_BAR_UPDATE_THRESHOLD = 100;\nconst PROGRESS_MASK_BASE_OPACITY = 0.2;\n\nconst DEFAULT_DRACO_DECODER_LOCATION =\n    'https://www.gstatic.com/draco/versioned/decoders/1.4.1/';\n\nconst DEFAULT_KTX2_TRANSCODER_LOCATION =\n    'https://www.gstatic.com/basis-universal/versioned/2021-04-15-ba1c3e4/';\n\nconst SPACE_KEY = 32;\nconst ENTER_KEY = 13;\n\nconst RevealStrategy: {[index: string]: RevealAttributeValue} = {\n  AUTO: 'auto',\n  INTERACTION: 'interaction',\n  MANUAL: 'manual'\n};\n\nconst LoadingStrategy: {[index: string]: LoadingAttributeValue} = {\n  AUTO: 'auto',\n  LAZY: 'lazy',\n  EAGER: 'eager'\n};\n\nconst PosterDismissalSource: {[index: string]: DismissalSource} = {\n  INTERACTION: 'interaction'\n};\n\nexport const $defaultProgressBarElement = Symbol('defaultProgressBarElement');\nexport const $defaultProgressMaskElement = Symbol('defaultProgressMaskElement');\n\nexport const $posterContainerElement = Symbol('posterContainerElement');\nexport const $defaultPosterElement = Symbol('defaultPosterElement');\n\nconst $posterDismissalSource = Symbol('posterDismissalSource');\nconst $hidePoster = Symbol('hidePoster');\nconst $modelIsRevealed = Symbol('modelIsRevealed');\nconst $updateProgressBar = Symbol('updateProgressBar');\nconst $lastReportedProgress = Symbol('lastReportedProgress');\nconst $transitioned = Symbol('transitioned');\nconst $onTransitionEnd = Symbol('onTransitionEnd');\n\nconst $ariaLabelCallToAction = Symbol('ariaLabelCallToAction');\n\nconst $onClick = Symbol('onClick');\nconst $onKeydown = Symbol('onKeydown');\nconst $onProgress = Symbol('onProgress');\n\nexport declare interface LoadingInterface {\n  poster: string|null;\n  reveal: RevealAttributeValue;\n  loading: LoadingAttributeValue;\n  generateSchema: boolean;\n  seamlessPoster: boolean;\n  readonly loaded: boolean;\n  readonly modelIsVisible: boolean;\n  dismissPoster(): void;\n  showPoster(): void;\n  getDimensions(): Vector3D;\n}\n\nexport declare interface LoadingStaticInterface {\n  dracoDecoderLocation: string;\n  ktx2TranscoderLocation: string;\n  meshoptDecoderLocation: string;\n  mapURLs(callback: (url: string) => string): void;\n}\n\nexport interface ModelViewerGlobalConfig {\n  dracoDecoderLocation?: string;\n  ktx2TranscoderLocation?: string;\n  meshoptDecoderLocation?: string;\n  powerPreference?: string;\n}\n\n/**\n * LoadingMixin implements features related to lazy loading, as well as\n * presentation details related to the pre-load / pre-render presentation of a\n * <model-viewer>\n *\n * This mixin implements support for models with DRACO-compressed meshes.\n * The DRACO decoder will be loaded on-demand if a glTF that uses the DRACO mesh\n * compression extension is encountered.\n *\n * By default, the DRACO decoder will be loaded from a Google CDN. It is\n * possible to customize where the decoder is loaded from by defining a global\n * configuration option for `<model-viewer>` like so:\n *\n * ```html\n * <script>\n * self.ModelViewerElement = self.ModelViewerElement || {};\n * self.ModelViewerElement.dracoDecoderLocation =\n *     'http://example.com/location/of/draco/decoder/files/';\n * </script>\n * ```\n *\n * Note that the above configuration strategy must be performed *before* the\n * first `<model-viewer>` element is created in the browser. The configuration\n * can be done anywhere, but the easiest way to ensure it is done at the right\n * time is to do it in the `<head>` of the HTML document. This is the\n * recommended way to set the location because it is most compatible with\n * scenarios where the `<model-viewer>` library is lazily loaded.\n *\n * If you absolutely have to set the DRACO decoder location *after* the first\n * `<model-viewer>` element is created, you can do it this way:\n *\n * ```html\n * <script>\n * const ModelViewerElement = customElements.get('model-viewer');\n * ModelViewerElement.dracoDecoderLocation =\n *     'http://example.com/location/of/draco/decoder/files/';\n * </script>\n * ```\n *\n * Note that the above configuration approach will not work until *after*\n * `<model-viewer>` is defined in the browser. Also note that this configuration\n * *must* be set *before* the first DRACO model is fully loaded.\n *\n * It is recommended that users who intend to take advantage of DRACO mesh\n * compression consider whether or not it is acceptable for their use case to\n * have code side-loaded from a Google CDN. If it is not acceptable, then the\n * location must be customized before loading any DRACO models in order to cause\n * the decoder to be loaded from an alternative, acceptable location.\n */\nexport const LoadingMixin = <T extends Constructor<ModelViewerElementBase>>(\n    ModelViewerElement:\n        T): Constructor<LoadingInterface, LoadingStaticInterface>&T => {\n  class LoadingModelViewerElement extends ModelViewerElement {\n    static set dracoDecoderLocation(value: string) {\n      CachingGLTFLoader.setDRACODecoderLocation(value);\n    }\n\n    static get dracoDecoderLocation() {\n      return CachingGLTFLoader.getDRACODecoderLocation();\n    }\n\n    static set ktx2TranscoderLocation(value: string) {\n      CachingGLTFLoader.setKTX2TranscoderLocation(value);\n    }\n\n    static get ktx2TranscoderLocation() {\n      return CachingGLTFLoader.getKTX2TranscoderLocation();\n    }\n\n    static set meshoptDecoderLocation(value: string) {\n      CachingGLTFLoader.setMeshoptDecoderLocation(value);\n    }\n\n    static get meshoptDecoderLocation() {\n      return CachingGLTFLoader.getMeshoptDecoderLocation();\n    }\n\n    /**\n     * If provided, the callback will be passed each resource URL before a\n     * request is sent. The callback may return the original URL, or a new URL\n     * to override loading behavior. This behavior can be used to load assets\n     * from .ZIP files, drag-and-drop APIs, and Data URIs.\n     */\n    static mapURLs(callback: (url: string) => string) {\n      Renderer.singleton.loader[$loader].manager.setURLModifier(callback);\n    }\n\n    /**\n     * A URL pointing to the image to use as a poster in scenarios where the\n     * <model-viewer> is not ready to reveal a rendered model to the viewer.\n     */\n    @property({type: String}) poster: string|null = null;\n\n    /**\n     * An enumerable attribute describing under what conditions the\n     * <model-viewer> should reveal a model to the viewer.\n     *\n     * The default value is \"auto\". The only supported alternative values are\n     * \"interaction\" and \"manual\".\n     */\n    @property({type: String})\n    reveal: RevealAttributeValue = RevealStrategy.AUTO;\n\n    /**\n     * An enumerable attribute describing under what conditions the\n     * <model-viewer> should preload a model.\n     *\n     * The default value is \"auto\". The only supported alternative values are\n     * \"lazy\" and \"eager\". Auto is equivalent to lazy, which loads the model\n     * when it is near the viewport for reveal = \"auto\", and when interacted\n     * with for reveal = \"interaction\". Eager loads the model immediately.\n     */\n    @property({type: String})\n    loading: LoadingAttributeValue = LoadingStrategy.AUTO;\n\n    /**\n     * Generates a 3D model schema https://schema.org/3DModel associated with\n     * the loaded src and inserts it into the header of the page for search\n     * engines to crawl.\n     */\n    @property({type: Boolean, attribute: 'generate-schema'})\n    generateSchema = false;\n\n    /**\n     * If you're using a seamless poster as generated by toBlob({idealAspect:\n     * true}) with --poster-color transparent (which is recommended), then set\n     * this attribute to true to turn off the poster's transition. This keeps\n     * the shadow from blinking and the transition is no longer necessary since\n     * the poster matches the rendering.\n     */\n    @property({type: Boolean, attribute: 'seamless-poster'})\n    seamlessPoster = false;\n\n    /**\n     * Dismisses the poster, causing the model to load and render if\n     * necessary. This is currently effectively the same as interacting with\n     * the poster via user input.\n     */\n    dismissPoster() {\n      if (this[$sceneIsReady]()) {\n        this[$hidePoster]();\n      } else {\n        this[$posterDismissalSource] = PosterDismissalSource.INTERACTION;\n        this[$updateSource]();\n      }\n    }\n\n    /**\n     * Displays the poster, hiding the 3D model. If this is called after the 3D\n     * model has been revealed, then it will behave as though\n     * reveal='interaction', being dismissed either by a user click or a call to\n     * dismissPoster().\n     */\n    showPoster() {\n      const posterContainerElement = this[$posterContainerElement];\n      const defaultPosterElement = this[$defaultPosterElement];\n\n      defaultPosterElement.removeAttribute('tabindex');\n      defaultPosterElement.removeAttribute('aria-hidden');\n      posterContainerElement.classList.add('show');\n\n      const oldVisibility = this.modelIsVisible;\n      this[$modelIsRevealed] = false;\n      this[$announceModelVisibility](oldVisibility);\n      this[$transitioned] = false;\n    }\n\n    /**\n     * Returns the model's bounding box dimensions in meters, independent of\n     * turntable rotation.\n     */\n    getDimensions(): Vector3D {\n      return toVector3D(this[$scene].size);\n    }\n\n    protected[$modelIsRevealed] = false;\n    protected[$transitioned] = false;\n\n    protected[$lastReportedProgress]: number = 0;\n\n    protected[$posterDismissalSource]: DismissalSource|null = null;\n\n    // TODO: Add this to the shadow root as part of this mixin's\n    // implementation:\n    protected[$posterContainerElement]: HTMLElement =\n        this.shadowRoot!.querySelector('.slot.poster') as HTMLElement;\n\n    protected[$defaultPosterElement]: HTMLElement =\n        this.shadowRoot!.querySelector('#default-poster') as HTMLElement;\n\n    protected[$defaultProgressBarElement]: HTMLElement =\n        this.shadowRoot!.querySelector('#default-progress-bar > .bar') as\n        HTMLElement;\n\n    protected[$defaultProgressMaskElement]: HTMLElement =\n        this.shadowRoot!.querySelector('#default-progress-bar > .mask') as\n        HTMLElement;\n\n    protected[$ariaLabelCallToAction] =\n        this[$defaultPosterElement].getAttribute('aria-label');\n\n    protected[$updateProgressBar] = throttle((progress: number) => {\n      const parentNode = this[$defaultProgressBarElement].parentNode as Element;\n\n      requestAnimationFrame(() => {\n        this[$defaultProgressMaskElement].style.opacity =\n            `${(1.0 - progress) * PROGRESS_MASK_BASE_OPACITY}`;\n\n        this[$defaultProgressBarElement].style.transform =\n            `scaleX(${progress})`;\n\n        if (progress === 0) {\n          // NOTE(cdata): We remove and re-append the progress bar in this\n          // condition so that the progress bar does not appear to\n          // transition backwards from the right when we reset to 0 (or\n          // otherwise <1) progress after having already reached 1 progress\n          // previously.\n          parentNode.removeChild(this[$defaultProgressBarElement]);\n          parentNode.appendChild(this[$defaultProgressBarElement]);\n        }\n\n        // NOTE(cdata): IE11 does not properly respect the second parameter\n        // of classList.toggle, which this implementation originally used.\n        // @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11865865/\n        if (progress === 1.0) {\n          this[$defaultProgressBarElement].classList.add('hide');\n        } else {\n          this[$defaultProgressBarElement].classList.remove('hide');\n        }\n      });\n    }, PROGRESS_BAR_UPDATE_THRESHOLD);\n\n    constructor(...args: Array<any>) {\n      super(...args);\n\n      const ModelViewerElement: ModelViewerGlobalConfig =\n          (self as any).ModelViewerElement || {};\n\n      const dracoDecoderLocation = ModelViewerElement.dracoDecoderLocation ||\n          DEFAULT_DRACO_DECODER_LOCATION;\n      CachingGLTFLoader.setDRACODecoderLocation(dracoDecoderLocation);\n\n      const ktx2TranscoderLocation =\n          ModelViewerElement.ktx2TranscoderLocation ||\n          DEFAULT_KTX2_TRANSCODER_LOCATION;\n      CachingGLTFLoader.setKTX2TranscoderLocation(ktx2TranscoderLocation);\n\n      if (ModelViewerElement.meshoptDecoderLocation) {\n        CachingGLTFLoader.setMeshoptDecoderLocation(\n            ModelViewerElement.meshoptDecoderLocation);\n      }\n    }\n\n    connectedCallback() {\n      super.connectedCallback();\n\n      // Fired when a user first clicks the model element. Used to\n      // change the visibility of a poster image, or start loading\n      // a model.\n      this[$posterContainerElement].addEventListener('click', this[$onClick]);\n      this[$posterContainerElement].addEventListener(\n          'keydown', this[$onKeydown]);\n      this[$progressTracker].addEventListener('progress', this[$onProgress]);\n    }\n\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      this[$posterContainerElement].removeEventListener(\n          'click', this[$onClick]);\n      this[$posterContainerElement].removeEventListener(\n          'keydown', this[$onKeydown]);\n      this[$progressTracker].removeEventListener('progress', this[$onProgress]);\n    }\n\n    async updated(changedProperties: Map<string, any>) {\n      super.updated(changedProperties);\n\n      if (changedProperties.has('poster') && this.poster != null) {\n        this[$defaultPosterElement].style.backgroundImage =\n            `url(${this.poster})`;\n      }\n\n      if (changedProperties.has('alt')) {\n        this[$defaultPosterElement].setAttribute(\n            'aria-label', this[$altDefaulted]);\n      }\n\n      if (changedProperties.has('reveal') || changedProperties.has('loading')) {\n        this[$updateSource]();\n      }\n\n      if (changedProperties.has('generateSchema')) {\n        if (this.generateSchema === true) {\n          this[$scene].updateSchema(this.src);\n        } else {\n          this[$scene].updateSchema(null);\n        }\n      }\n\n      if (changedProperties.has('seamlessPoster')) {\n        if (this.seamlessPoster === true) {\n          this[$posterContainerElement].classList.add('quick');\n        } else {\n          this[$posterContainerElement].classList.remove('quick');\n        }\n      }\n    }\n\n    [$onClick] = () => {\n      if (this.reveal === RevealStrategy.MANUAL ||\n          this.reveal === RevealStrategy.AUTO) {\n        return;\n      }\n      this.dismissPoster();\n    };\n\n    [$onKeydown] = (event: KeyboardEvent) => {\n      if (this.reveal === RevealStrategy.MANUAL) {\n        return;\n      }\n      switch (event.keyCode) {\n        // NOTE(cdata): Links and buttons can typically be activated with\n        // both spacebar and enter to produce a synthetic click action\n        case SPACE_KEY:\n        case ENTER_KEY:\n          this.dismissPoster();\n          break;\n        default:\n          break;\n      }\n    };\n\n    [$onProgress] = (event: Event) => {\n      const progress = (event as any).detail.totalProgress;\n      this[$lastReportedProgress] =\n          Math.max(progress, this[$lastReportedProgress]);\n\n      if (progress === 1.0) {\n        this[$updateProgressBar].flush();\n        if (this[$sceneIsReady]() &&\n            (this[$posterDismissalSource] != null ||\n             this.reveal === RevealStrategy.AUTO)) {\n          this[$hidePoster]();\n        }\n      }\n\n      this[$updateProgressBar](progress);\n\n      this.dispatchEvent(\n          new CustomEvent('progress', {detail: {totalProgress: progress}}));\n    };\n\n    [$shouldAttemptPreload](): boolean {\n      return !!this.src &&\n          (this[$posterDismissalSource] != null ||\n           this.loading === LoadingStrategy.EAGER ||\n           (this.reveal === RevealStrategy.AUTO && this[$isElementInViewport]));\n    }\n\n    [$sceneIsReady](): boolean {\n      const {src} = this;\n      return !!src && super[$sceneIsReady]() &&\n          this[$lastReportedProgress] === 1.0;\n    }\n\n    [$onTransitionEnd] = () => {\n      this[$transitioned] = true;\n      const root = this.getRootNode();\n\n      // If the <model-viewer> is still focused, forward the focus to\n      // the canvas that has just been revealed\n      if (root && (root as Document | ShadowRoot).activeElement === this) {\n        this[$userInputElement].focus();\n      }\n\n      // Ensure that the poster is no longer focusable or visible to\n      // screen readers\n      const defaultPosterElement = this[$defaultPosterElement];\n      defaultPosterElement.setAttribute('aria-hidden', 'true');\n      defaultPosterElement.tabIndex = -1;\n      this.dispatchEvent(new CustomEvent('poster-dismissed'));\n    };\n\n    [$hidePoster]() {\n      this[$posterDismissalSource] = null;\n      const posterContainerElement = this[$posterContainerElement];\n\n      if (posterContainerElement.classList.contains('show')) {\n        const oldVisibility = this.modelIsVisible;\n        this[$modelIsRevealed] = true;\n        this[$announceModelVisibility](oldVisibility);\n\n        requestAnimationFrame(() => {\n          posterContainerElement.classList.remove('show');\n          if (this.seamlessPoster === true) {\n            this[$onTransitionEnd]();\n          } else {\n            // We might need to forward focus to our internal canvas, but that\n            // cannot happen until the poster has completely transitioned away\n            posterContainerElement.addEventListener(\n                'transitionend', this[$onTransitionEnd], {once: true});\n          }\n        });\n      } else {\n        this[$transitioned] = true;\n      }\n    }\n\n    [$getModelIsVisible]() {\n      return super[$getModelIsVisible]() && this[$modelIsRevealed];\n    }\n\n    [$hasTransitioned](): boolean {\n      return super[$hasTransitioned]() && this[$transitioned];\n    }\n\n    async[$updateSource]() {\n      this[$lastReportedProgress] = 0;\n      if (this.generateSchema === true) {\n        this[$scene].updateSchema(this.src);\n      }\n      if (this[$scene].currentGLTF == null || this.src == null ||\n          !this[$shouldAttemptPreload]()) {\n        // Don't show the poster when switching models.\n        this.showPoster();\n      }\n      this[$updateStatus]('Loading');\n      await super[$updateSource]();\n    }\n  }\n\n  return LoadingModelViewerElement;\n};\n"]}