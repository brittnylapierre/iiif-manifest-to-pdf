{"version":3,"file":"ModelScene-spec.js","sourceRoot":"","sources":["../../../src/test/three-components/ModelScene-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Matrix4, Mesh, SphereBufferGeometry, Vector3} from 'three';\n\nimport ModelViewerElementBase, {$canvas} from '../../model-viewer-base.js';\nimport {ModelScene} from '../../three-components/ModelScene.js';\nimport {assetPath} from '../helpers.js';\n\n\nconst expect = chai.expect;\n\nsuite('ModelScene', () => {\n  let nextId = 0;\n  let tagName: string;\n  let ModelViewerElement: Constructor<ModelViewerElementBase>;\n\n  let element: ModelViewerElementBase;\n  let scene: ModelScene;\n  let dummyRadius: number;\n  let dummyMesh: Mesh;\n\n  setup(() => {\n    tagName = `model-viewer-modelscene-${nextId++}`;\n    ModelViewerElement = class extends ModelViewerElementBase {\n      static get is() {\n        return tagName;\n      }\n    };\n    customElements.define(tagName, ModelViewerElement);\n    // Set the radius of the sphere to 0.5 so that it's size is 1\n    // for testing scaling.\n    dummyRadius = 0.5;\n    dummyMesh = new Mesh(new SphereBufferGeometry(dummyRadius, 32, 32));\n    element = new ModelViewerElement();\n    scene = new ModelScene({\n      element: element,\n      canvas: element[$canvas],\n      width: 200,\n      height: 100,\n    });\n  });\n\n  suite('setModelSource', () => {\n    test('fires a model-load event when loaded', async function() {\n      let fired = false;\n      scene.addEventListener('model-load', () => fired = true);\n      await scene.setSource(assetPath('models/Astronaut.glb'));\n      expect(fired).to.be.ok;\n    });\n  });\n\n  suite('with a model', () => {\n    setup(async () => {\n      await scene.setSource(assetPath('models/Astronaut.glb'));\n    });\n\n    suite('setShadowIntensity', () => {\n      test('can increase intensity and reset it to zero', () => {\n        scene.setShadowIntensity(1);\n        const shadow = scene.shadow!;\n        expect(shadow).to.be.ok;\n        expect(shadow.getIntensity()).to.be.equal(1);\n        scene.setShadowIntensity(0);\n        expect(shadow.getIntensity()).to.be.equal(0);\n      });\n\n      test('shadow is only created when intensity is greater than zero', () => {\n        expect(scene.shadow).to.be.not.ok;\n        scene.setShadowIntensity(1);\n        expect(scene.shadow).to.be.ok;\n      });\n    });\n  });\n\n  suite('setSize', () => {\n    test('updates visual and buffer size', () => {\n      scene.setSize(500, 200);\n      expect(scene.width).to.be.equal(500);\n      expect(scene.height).to.be.equal(200);\n    });\n\n    test('model is not scaled', async () => {\n      dummyMesh.geometry.applyMatrix4(new Matrix4().makeScale(1, 3, 10));\n      await scene.setObject(dummyMesh);\n\n      scene.setSize(1000, 500);\n      expect(scene.scale).to.be.eql(new Vector3(1, 1, 1));\n    });\n\n    test('idealCameraDistance is set correctly', async () => {\n      await scene.setObject(dummyMesh);\n\n      scene.framedFoVDeg = 35;\n      const halfFov = (scene.framedFoVDeg / 2) * Math.PI / 180;\n      const expectedDistance = dummyRadius / Math.sin(halfFov);\n      expect(scene.idealCameraDistance())\n          .to.be.closeTo(expectedDistance, 0.0001);\n    });\n\n    test('idealAspect is set correctly', async () => {\n      scene.framedFoVDeg = 35;\n      await scene.setObject(dummyMesh);\n\n      expect(scene.idealAspect).to.be.closeTo(1, 0.0001);\n    });\n\n    test('cannot set the canvas smaller than 1x1', () => {\n      scene.setSize(0, 0);\n      expect(scene.width).to.be.equal(1);\n      expect(scene.height).to.be.equal(1);\n    });\n  });\n});\n"]}