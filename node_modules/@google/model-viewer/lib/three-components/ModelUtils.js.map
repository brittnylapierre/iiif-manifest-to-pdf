{"version":3,"file":"ModelUtils.js","sourceRoot":"","sources":["../../src/three-components/ModelUtils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AACH,OAAO,EAAwD,OAAO,EAAC,MAAM,OAAO,CAAC;AAIrF;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,2BAA2B,GACpC,CAAC,MAAkD,EAAE,EAAE;IACrD,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;QACtB,OAAO,CAAC,CAAC;KACV;IAED,MAAM,KAAK,GAAsB,MAAM,CAAC,KAAK,CAAC;IAC9C,IAAI,KAAK,YAAY,SAAS,EAAE;QAC9B,OAAO,CAAC,GAAG,GAAG,CAAC;KAChB;SAAM,IAAI,KAAK,YAAY,UAAU,EAAE;QACtC,OAAO,CAAC,GAAG,GAAG,CAAC;KAChB;SAAM,IAAI,KAAK,YAAY,UAAU,EAAE;QACtC,OAAO,CAAC,GAAG,KAAK,CAAC;KAClB;SAAM,IAAI,KAAK,YAAY,WAAW,EAAE;QACvC,OAAO,CAAC,GAAG,KAAK,CAAC;KAClB;IACD,OAAO,CAAC,CAAC;AACX,CAAC,CAAC;AACN;;GAEG;AACH,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,IAAc,EAAE,EAAY,EAAE,EAAE;IAC3D,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;QAC3B,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAG,CAAC,CAAC;KAChC;AACH,CAAC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,CAC1B,KAAe,EAAE,IAAsC,EAAE,YAAe,EACtE,EAAE;IACF,IAAI,KAAK,GAAG,YAAY,CAAC;IACzB,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;IAC7B,KAAK,CAAC,eAAe,CAAC,CAAC,MAAW,EAAE,EAAE;QACpC,IAAI,CAAC,EAAE,CAAC,CAAC;QAET,MAAM,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAEvC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEjC,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,IAAI,QAAQ,CAAC,UAAU,EAAE;gBACvB,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAEnC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC3C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,IAAI,MAAM,CAAC,aAAa,EAAE;wBACxB,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;qBACjC;yBAAM;wBACL,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;qBACzC;oBACD,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;iBAC7B;aAEF;iBAAM,IAAI,QAAQ,CAAC,gBAAgB,EAAE;gBACpC,MAAM,EAAC,QAAQ,EAAC,GAAG,QAAQ,CAAC,UAAU,CAAC;gBAEvC,IAAI,QAAQ,KAAK,SAAS,EAAE;oBAC1B,MAAM,KAAK,GAAG,2BAA2B,CAAC,QAAQ,CAAC,CAAC;oBAEpD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC1C,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBACxC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;wBAC7B,IAAI,MAAM,CAAC,aAAa,EAAE;4BACxB,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;yBACjC;6BAAM;4BACL,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;yBACzC;wBAED,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;qBAC7B;iBACF;aACF;SACF;IACH,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {BufferAttribute, InterleavedBufferAttribute, Object3D, Vector3} from 'three';\n\n\n\n/**\n * Gets a scale value to perform inverse quantization of a vertex value\n * Reference:\n * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization#encoding-quantized-data\n * @param buffer A gltf vertex buffer\n * @returns A scale value based on KHR_mesh_quantization or 1 if the buffer is\n *     not quantized.\n */\nexport const getNormalizedComponentScale =\n    (buffer: BufferAttribute|InterleavedBufferAttribute) => {\n      if (!buffer.normalized) {\n        return 1;\n      }\n\n      const array: ArrayLike<number> = buffer.array;\n      if (array instanceof Int8Array) {\n        return 1 / 127;\n      } else if (array instanceof Uint8Array) {\n        return 1 / 255;\n      } else if (array instanceof Int16Array) {\n        return 1 / 32767;\n      } else if (array instanceof Uint16Array) {\n        return 1 / 65535;\n      }\n      return 1;\n    };\n/**\n * Moves Three.js objects from one parent to another\n */\nexport const moveChildren = (from: Object3D, to: Object3D) => {\n  while (from.children.length) {\n    to.add(from.children.shift()!);\n  }\n};\n\n/**\n * Performs a reduction across all the vertices of the input model and all its\n * children. The supplied function takes the reduced value and a vertex and\n * returns the newly reduced value. The value is initialized as zero.\n *\n * Adapted from Three.js, @see https://github.com/mrdoob/three.js/blob/7e0a78beb9317e580d7fa4da9b5b12be051c6feb/src/math/Box3.js#L241\n */\nexport const reduceVertices = <T>(\n    model: Object3D, func: (value: T, vertex: Vector3) => T, initialValue: T):\n    T => {\n      let value = initialValue;\n      const vertex = new Vector3();\n      model.traverseVisible((object: any) => {\n        let i, l;\n\n        object.updateWorldMatrix(false, false);\n\n        const geometry = object.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.isGeometry) {\n            const vertices = geometry.vertices;\n\n            for (i = 0, l = vertices.length; i < l; i++) {\n              vertex.copy(vertices[i]);\n              if (object.isSkinnedMesh) {\n                object.boneTransform(i, vertex);\n              } else {\n                vertex.applyMatrix4(object.matrixWorld);\n              }\n              value = func(value, vertex);\n            }\n\n          } else if (geometry.isBufferGeometry) {\n            const {position} = geometry.attributes;\n\n            if (position !== undefined) {\n              const scale = getNormalizedComponentScale(position);\n\n              for (i = 0, l = position.count; i < l; i++) {\n                vertex.fromBufferAttribute(position, i);\n                vertex.multiplyScalar(scale);\n                if (object.isSkinnedMesh) {\n                  object.boneTransform(i, vertex);\n                } else {\n                  vertex.applyMatrix4(object.matrixWorld);\n                }\n\n                value = func(value, vertex);\n              }\n            }\n          }\n        }\n      });\n      return value;\n    };\n"]}