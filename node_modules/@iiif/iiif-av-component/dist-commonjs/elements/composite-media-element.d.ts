import { MediaElement } from './media-element';
import { AnnotationTime } from '../helpers/relative-time';
import { JQueryStatic } from 'jquery';
export declare class CompositeMediaElement {
    elements: MediaElement[];
    activeElement?: MediaElement;
    playing: boolean;
    canvasMap: {
        [id: string]: MediaElement[];
    };
    private _onPlay;
    private _onPause;
    constructor(mediaElements: MediaElement[]);
    syncClock(time: AnnotationTime): void;
    onPlay(func: (canvasId: string, time: number, el: HTMLMediaElement) => void): void;
    onPause(func: (canvasId: string, time: number, el: HTMLMediaElement) => void): void;
    findElementInRange(canvasId: string, time: number): MediaElement | undefined;
    appendTo($element: JQueryStatic): void;
    load(): Promise<void>;
    seekToMediaTime(realTime: AnnotationTime): Promise<void>;
    seekTo(canvasId: string, time: AnnotationTime): Promise<void>;
    play(canvasId?: string, time?: AnnotationTime): Promise<void>;
    pause(): void;
    setVolume(volume: number): void;
    isBuffering(): boolean;
}
