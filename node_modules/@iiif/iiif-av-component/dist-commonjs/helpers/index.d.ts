import { canPlayHls } from './can-play-hls';
import { createTimePlansFromManifest } from './create-time-plans-from-manifest';
import { debounce } from './debounce';
import { diffData } from './diff-data';
import { extractMediaFromAnnotationBodies } from './extract-media-from-annotation-bodies';
import { formatTime } from './format-time';
import { getFirstTargetedCanvasId } from './get-first-targeted-canvas-id';
import { getMediaSourceFromAnnotationBody } from './get-media-source-from-annotation-body';
import { getSpatialComponent } from './get-spatial-component';
import { getTimestamp } from './get-timestamp';
import { isHLSFormat } from './is-hls-format';
import { isIE } from './is-ie';
import { isMpegDashFormat } from './is-mpeg-dash-format';
import { isSafari } from './is-safari';
import { isVirtual } from './is-virtual';
import { normalise } from './normalise-number';
import { retargetTemporalComponent } from './retarget-temporal-component';
export declare const AVComponentUtils: {
    canPlayHls: typeof canPlayHls;
    createTimePlansFromManifest: typeof createTimePlansFromManifest;
    debounce: typeof debounce;
    diffData: typeof diffData;
    diff: typeof diffData;
    extractMediaFromAnnotationBodies: typeof extractMediaFromAnnotationBodies;
    formatTime: typeof formatTime;
    getFirstTargetedCanvasId: typeof getFirstTargetedCanvasId;
    getMediaSourceFromAnnotationBody: typeof getMediaSourceFromAnnotationBody;
    getSpatialComponent: typeof getSpatialComponent;
    getTimestamp: typeof getTimestamp;
    hlsMimeTypes: string[];
    hlsMediaTypes: string[];
    isHLSFormat: typeof isHLSFormat;
    isIE: typeof isIE;
    isMpegDashFormat: typeof isMpegDashFormat;
    isSafari: typeof isSafari;
    isVirtual: typeof isVirtual;
    normalise: typeof normalise;
    normalize: typeof normalise;
    normalizeNumber: typeof normalise;
    normaliseNumber: typeof normalise;
    retargetTemporalComponent: typeof retargetTemporalComponent;
};
