import { h } from "@stencil/core";
import { normaliseHref } from "../../utils/utils";
export class UvEbookToc {
    constructor() {
        this.toc = [];
        this.selected = null;
        this.disabled = false;
    }
    _itemClickedHandler(e) {
        const link = e.currentTarget;
        const href = link.getAttribute("href");
        this.selected = link.parentElement.id;
        this.itemClicked.emit(href);
        e.preventDefault();
    }
    render() {
        return (h("div", { id: "toc", class: {
                disabled: this.disabled
            } },
            h("ul", null, this.toc.map((item) => {
                return (h("li", { id: item.id, class: {
                        selected: this.selected === item.href ||
                            (this.selected &&
                                this.selected.indexOf(normaliseHref(item.href)) !== -1)
                    } },
                    h("a", { href: item.href, onClick: e => this._itemClickedHandler(e) }, item.label)));
            }))));
    }
    static get is() { return "uv-ebook-toc"; }
    static get originalStyleUrls() { return {
        "$": ["uv-ebook-toc.css"]
    }; }
    static get styleUrls() { return {
        "$": ["uv-ebook-toc.css"]
    }; }
    static get assetsDirs() { return ["assets"]; }
    static get properties() { return {
        "toc": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ITOCItem[]",
                "resolved": "ITOCItem[]",
                "references": {
                    "ITOCItem": {
                        "location": "import",
                        "path": "./ITOCItem"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "defaultValue": "[]"
        },
        "selected": {
            "type": "string",
            "mutable": true,
            "complexType": {
                "original": "string | null",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "selected",
            "reflect": false,
            "defaultValue": "null"
        },
        "disabled": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "disabled",
            "reflect": false,
            "defaultValue": "false"
        }
    }; }
    static get events() { return [{
            "method": "itemClicked",
            "name": "itemClicked",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
    static get elementRef() { return "el"; }
}
