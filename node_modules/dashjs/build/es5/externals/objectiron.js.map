{"version":3,"sources":["../../../externals/objectiron.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yEA6CA,SAAS,UAAU,CAAC,GAAG,CAAE,CAErB,IAAI,MAAM,CACN,GAAG,CACH,CAAC,CAAC;AAGN,MAAM,GAAG,EAAE,CAAC,AACZ,IAAK,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAE,CAAC,GAAG,GAAG,CAAE,CAAC,IAAI,CAAC,EAAE,CAC3C,GAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAE,CACf,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CACvB,KAAM,CACH,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAC5B,CACJ,AAED,IAAI,WAAW,CAAG,SAAd,WAAW,CAAa,UAAU,CAAE,SAAS,CAAE,CAC3C,IAAI,IAAI,CACJ,WAAW,CACX,UAAU,CAAC,AAEf,GAAI,UAAU,KAAK,IAAI,IAAI,SAAS,KAAK,IAAI,CAAE,CAC3C,OAAO,CACV,AAED,IAAK,IAAI,IAAI,UAAU,EAAE,CACrB,GAAI,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAE,CACjC,GAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAE,CACjC,SAAS,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CACtC,CACJ,CACJ,CACJ,CAED,aAAa,CAAG,SAAhB,aAAa,CAAa,UAAU,CAAE,MAAM,CAAE,KAAK,CAAE,CACjD,IAAI,CAAC,CACD,GAAG,CACH,QAAQ,CACR,WAAW,CACX,UAAU,CAAC,AAEf,GAAI,UAAU,KAAK,IAAI,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,CAAE,CAChD,OAAO,CACV,AAED,IAAK,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,UAAU,CAAC,MAAM,CAAE,CAAC,GAAG,GAAG,CAAE,CAAC,IAAI,CAAC,EAAE,CAClD,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,AAEzB,GAAI,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAE,CACtC,GAAI,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAE;AAErC,GAAI,QAAQ,CAAC,KAAK,CAAE,CACjB,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,AACpC,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAGjC,GAAI,OAAO,WAAW,KAAK,QAAQ,IAAI,OAAO,UAAU,KAAK,QAAQ,CAAE,CACnE,WAAW,CAAC,WAAW,CAAE,UAAU,CAAC,CAAC,CACxC;KAEI,CACD,GAAI,QAAQ,CAAC,aAAa,IAAI,IAAI,CAAE,CAChC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAE,UAAU,CAAC,CAAC,CAC1E,KAAM,CACH,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,WAAW,GAAG,UAAU,CAAC,CACnD,CACJ,CACJ,CACJ,KAAM;AAEH,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAChD,CACJ,CACJ,CACJ,CAED,OAAO,CAAG,SAAV,OAAO,CAAa,GAAG,CAAE,IAAI,CAAE,CAC3B,IAAI,IAAI,CAAG,GAAG,CACV,CAAC,CACD,GAAG,CACH,CAAC,CACD,IAAI,CACJ,KAAK,CACL,SAAS,CACT,SAAS,CACT,QAAQ,CAAC,AAEb,GAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAE,CACtD,OAAO,CACV,AAED,IAAK,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAE,CAAC,GAAG,GAAG,CAAE,CAAC,IAAI,CAAC,EAAE,CACrD,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,AAE7B,GAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,CAAE,CACrC,GAAI,SAAS,CAAC,OAAO,CAAE,CACnB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC,AAC1C,IAAK,CAAC,GAAG,CAAC,CAAE,IAAI,GAAG,KAAK,CAAC,MAAM,CAAE,CAAC,GAAG,IAAI,CAAE,CAAC,IAAI,CAAC,EAAE,CAC/C,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,AACrB,aAAa,CAAC,IAAI,CAAC,UAAU,CAAE,IAAI,CAAE,SAAS,CAAC,CAAC,AAChD,OAAO,CAAC,SAAS,CAAE,SAAS,CAAC,CAAC,CACjC,CACJ,KAAM,CACH,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,AACjC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAE,IAAI,CAAE,SAAS,CAAC,CAAC,AAChD,OAAO,CAAC,SAAS,CAAE,SAAS,CAAC,CAAC,CACjC,CACJ,CACJ,CACJ,CAED,cAAc,CAAG,SAAjB,cAAc,CAAa,MAAM,CAAE,CAC/B,IAAI,CAAC,CACD,GAAG,CACH,EAAE,CACF,EAAE,CACF,IAAI,CACJ,IAAI,CACJ,KAAK,CAAC,AAEV,GAAI,MAAM,KAAK,IAAI,CAAE,CACjB,OAAO,MAAM,CAAC,CACjB,AAED,GAAI,OAAO,MAAM,KAAK,QAAQ,CAAE,CAC5B,OAAO,MAAM,CAAC,CACjB;AAGD,IAAK,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,MAAM,CAAC,MAAM,CAAE,CAAC,GAAG,GAAG,CAAE,CAAC,IAAI,CAAC,EAAE,CAC9C,GAAI,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAE,CACtB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,AACd,IAAI,GAAG,MAAM,CAAC,AACd,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,CACvB,CACJ;AAGD,IAAK,EAAE,IAAI,MAAM,EAAE,CACf,GAAI,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,YAAY,CAAE,CACjD,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,AACxB,GAAI,EAAE,KAAK,CAAC,CAAC,CAAE,CACX,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,AAEf,GAAI,IAAI,CAAC,OAAO,CAAE,CACd,KAAK,GAAG,MAAM,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC,AAChC,IAAK,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,KAAK,CAAC,MAAM,CAAE,CAAC,GAAG,GAAG,CAAE,CAAC,IAAI,CAAC,EAAE,CAC7C,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,AAChB,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,CACvB,CACJ,KAAM,CACH,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,AAClB,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,CACvB,CACJ;AAED,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAC9B,CACJ,AAED,OAAO,MAAM,CAAC,CACjB,CAAC,AAEN,OAAO,CACH,GAAG,CAAE,cAAc,CACtB,CAAC,CACL,qBAEc,UAAU","file":"objectiron.js","sourcesContent":["/*\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * author Digital Primates\n * copyright dash-if 2012\n */\n\n/*\n * var parent,\n *     child,\n *     properties = [\n                    {\n                        name: 'profiles',\n                        merge: false\n                    }\n                ];\n *\n * parent = {};\n * parent.name = \"ParentNode\";\n * parent.isRoor = false;\n * parent.isArray = false;\n * parent.children = [];\n * parent.properties = properties;\n *\n * child = {};\n * child.name = \"ChildNode\";\n * child.isRoor = false;\n * child.isArray = true;\n * child.children = null;\n * child.properties = properties;\n * parent.children.push(child);\n *\n */\n\nfunction ObjectIron(map) {\n\n    var lookup,\n        len,\n        i;\n\n    // create a list of top level items to search for\n    lookup = [];\n    for (i = 0, len = map.length; i < len; i += 1) {\n        if (map[i].isRoot) {\n            lookup.push(\"root\");\n        } else {\n            lookup.push(map[i].name);\n        }\n    }\n\n    var mergeValues = function (parentItem, childItem) {\n            var name,\n                parentValue,\n                childValue;\n\n            if (parentItem === null || childItem === null) {\n                return;\n            }\n\n            for (name in parentItem) {\n                if (parentItem.hasOwnProperty(name)) {\n                    if (!childItem.hasOwnProperty(name)) {\n                        childItem[name] = parentItem[name];\n                    }\n                }\n            }\n        },\n\n        mapProperties = function (properties, parent, child) {\n            var i,\n                len,\n                property,\n                parentValue,\n                childValue;\n\n            if (properties === null || properties.length === 0) {\n                return;\n            }\n\n            for (i = 0, len = properties.length; i < len; i += 1) {\n                property = properties[i];\n\n                if (parent.hasOwnProperty(property.name)) {\n                    if (child.hasOwnProperty(property.name)) {\n                        // check to see if we should merge\n                        if (property.merge) {\n                           parentValue = parent[property.name];\n                           childValue = child[property.name];\n\n                            // complex objects; merge properties\n                            if (typeof parentValue === 'object' && typeof childValue === 'object') {\n                                mergeValues(parentValue, childValue);\n                            }\n                            // simple objects; merge them together\n                            else {\n                                if (property.mergeFunction != null) {\n                                    child[property.name] = property.mergeFunction(parentValue, childValue);\n                                } else {\n                                    child[property.name] = parentValue + childValue;\n                                }\n                            }\n                        }\n                    } else {\n                        // just add the property\n                        child[property.name] = parent[property.name];\n                    }\n                }\n            }\n        },\n\n        mapItem = function (obj, node) {\n            var item = obj,\n                i,\n                len,\n                v,\n                len2,\n                array,\n                childItem,\n                childNode,\n                property;\n\n            if (item.children === null || item.children.length === 0) {\n                return;\n            }\n\n            for (i = 0, len = item.children.length; i < len; i += 1) {\n                childItem = item.children[i];\n\n                if (node.hasOwnProperty(childItem.name)) {\n                    if (childItem.isArray) {\n                        array = node[childItem.name + \"_asArray\"];\n                        for (v = 0, len2 = array.length; v < len2; v += 1) {\n                            childNode = array[v];\n                            mapProperties(item.properties, node, childNode);\n                            mapItem(childItem, childNode);\n                        }\n                    } else {\n                        childNode = node[childItem.name];\n                        mapProperties(item.properties, node, childNode);\n                        mapItem(childItem, childNode);\n                    }\n                }\n            }\n        },\n\n        performMapping = function (source) {\n            var i,\n                len,\n                pi,\n                pp,\n                item,\n                node,\n                array;\n\n            if (source === null) {\n                return source;\n            }\n\n            if (typeof source !== 'object') {\n                return source;\n            }\n\n            // first look to see if anything cares about the root node\n            for (i = 0, len = lookup.length; i < len; i += 1) {\n                if (lookup[i] === \"root\") {\n                    item = map[i];\n                    node = source;\n                    mapItem(item, node);\n                }\n            }\n\n            // iterate over the objects and look for any of the items we care about\n            for (pp in source) {\n                if (source.hasOwnProperty(pp) && pp != \"__children\") {\n                    pi = lookup.indexOf(pp);\n                    if (pi !== -1) {\n                        item = map[pi];\n\n                        if (item.isArray) {\n                            array = source[pp + \"_asArray\"];\n                            for (i = 0, len = array.length; i < len; i += 1) {\n                                node = array[i];\n                                mapItem(item, node);\n                            }\n                        } else {\n                            node = source[pp];\n                            mapItem(item, node);\n                        }\n                    }\n                    // now check this to see if he has any of the properties we care about\n                    performMapping(source[pp]);\n                }\n            }\n\n            return source;\n        };\n\n    return {\n        run: performMapping\n    };\n}\n\nexport default ObjectIron;\n"]}