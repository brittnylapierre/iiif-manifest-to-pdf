{"version":3,"sources":["../../../../src/core/Debug.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;sLA8BqB,YAAY,6EACd,iBAAiB,qFACX,gBAAgB;;GAKzC,SAAS,KAAK,EAAG,CAEb,IAAI,OAAO,CAAG,IAAI,CAAC,OAAO,CAAC,AAC3B,IAAI,QAAQ,CAAG,0BAAS,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,AAE/C,IAAI,QAAQ,UAAA,CACR,mBAAmB,UAAA,CACnB,gBAAgB,UAAA,CAChB,cAAc,UAAA,CACd,SAAS,UAAA,CAAC,AAEd,SAAS,KAAK,EAAG,CACb,mBAAmB,GAAG,IAAI,CAAC,AAC3B,gBAAgB,GAAG,IAAI,CAAC,AACxB,cAAc,GAAG,KAAK,CAAC,AACvB,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CACpC;;;;;;OASD,SAAS,sBAAsB,CAAC,KAAK,CAAE,CACnC,gBAAgB,GAAG,KAAK,CAAC,CAC5B;;;;;;OAQD,SAAS,oBAAoB,CAAC,KAAK,CAAE,CACjC,cAAc,GAAG,KAAK,CAAC,CAC1B;;;;;;OAQD,SAAS,sBAAsB,CAAC,KAAK,CAAE,CACnC,mBAAmB,GAAG,KAAK,CAAC,CAC/B;;;;;OAOD,SAAS,sBAAsB,EAAG,CAC9B,OAAO,mBAAmB,CAAC,CAC9B;;;;;OAOD,SAAS,GAAG,EAAG,CAEX,IAAI,OAAO,CAAG,EAAE,CAAC,AACjB,IAAI,OAAO,CAAG,IAAI,CAAC,AAEnB,GAAI,gBAAgB,CAAE,CAClB,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,AAC/B,OAAO,IAAI,GAAG,IAAI,OAAO,GAAG,SAAS,CAAA,AAAC,GAAG,GAAG,CAAC,CAChD,AAED,GAAI,cAAc,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAE,CAC7C,OAAO,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,GAAG,CAAC,AAC3C,GAAI,IAAI,CAAC,OAAO,CAAE,CACd,OAAO,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,CACzC,CACJ,AAED,GAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE,CACpB,OAAO,IAAI,GAAG,CAAC,CAClB,AAED,KAAK,CAAC,KAAK,CAAC,IAAI,CAAE,SAAS,CAAC,CAAC,OAAO,CAAC,SAAU,IAAI,CAAE,CACjD,OAAO,IAAI,IAAI,GAAG,GAAG,CAAC,CACzB,CAAC,CAAC,AAEH,GAAI,mBAAmB,CAAE,CACrB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CACxB,AAED,QAAQ,CAAC,OAAO,CAAC,0BAAO,GAAG,CAAE,CAAC,OAAO,CAAE,OAAO,CAAC,CAAC,CAAC,CACpD,AAED,QAAQ,GAAG,CACP,GAAG,CAAE,GAAG,CACR,sBAAsB,CAAE,sBAAsB,CAC9C,oBAAoB,CAAE,oBAAoB,CAC1C,sBAAsB,CAAE,sBAAsB,CAC9C,sBAAsB,CAAE,sBAAsB,CACjD,CAAC,AAEF,KAAK,EAAE,CAAC,AAER,OAAO,QAAQ,CAAC,CACnB,AAED,KAAK,CAAC,qBAAqB,GAAG,OAAO,CAAC,qBACvB,0BAAa,mBAAmB,CAAC,KAAK,CAAC","file":"Debug.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from './EventBus';\nimport Events from './events/Events';\nimport FactoryMaker from './FactoryMaker';\n\n/**\n * @module Debug\n */\nfunction Debug() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logToBrowserConsole,\n        showLogTimestamp,\n        showCalleeName,\n        startTime;\n\n    function setup() {\n        logToBrowserConsole = true;\n        showLogTimestamp = true;\n        showCalleeName = false;\n        startTime = new Date().getTime();\n    }\n\n    /**\n     * Prepends a timestamp in milliseconds to each log message.\n     * @param {boolean} value Set to true if you want to see a timestamp in each log message.\n     * @default false\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogTimestampVisible(value) {\n        showLogTimestamp = value;\n    }\n    /**\n     * Prepends the callee object name, and media type if available, to each log message.\n     * @param {boolean} value Set to true if you want to see the callee object name and media type in each log message.\n     * @default false\n     * @memberof module:Debug\n     * @instance\n     */\n    function setCalleeNameVisible(value) {\n        showCalleeName = value;\n    }\n    /**\n     * Toggles logging to the browser's javascript console.  If you set to false you will still receive a log event with the same message.\n     * @param {boolean} value Set to false if you want to turn off logging to the browser's console.\n     * @default true\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogToBrowserConsole(value) {\n        logToBrowserConsole = value;\n    }\n    /**\n     * Use this method to get the state of logToBrowserConsole.\n     * @returns {boolean} The current value of logToBrowserConsole\n     * @memberof module:Debug\n     * @instance\n     */\n    function getLogToBrowserConsole() {\n        return logToBrowserConsole;\n    }\n    /**\n     * This method will allow you send log messages to either the browser's console and/or dispatch an event to capture at the media player level.\n     * @param {...*} arguments The message you want to log. The Arguments object is supported for this method so you can send in comma separated logging items.\n     * @memberof module:Debug\n     * @instance\n     */\n    function log() {\n\n        let message = '';\n        let logTime = null;\n\n        if (showLogTimestamp) {\n            logTime = new Date().getTime();\n            message += '[' + (logTime - startTime) + ']';\n        }\n\n        if (showCalleeName && this && this.getClassName) {\n            message += '[' + this.getClassName() + ']';\n            if (this.getType) {\n                message += '[' + this.getType() + ']';\n            }\n        }\n\n        if (message.length > 0) {\n            message += ' ';\n        }\n\n        Array.apply(null, arguments).forEach(function (item) {\n            message += item + ' ';\n        });\n\n        if (logToBrowserConsole) {\n            console.log(message);\n        }\n\n        eventBus.trigger(Events.LOG, {message: message});\n    }\n\n    instance = {\n        log: log,\n        setLogTimestampVisible: setLogTimestampVisible,\n        setCalleeNameVisible: setCalleeNameVisible,\n        setLogToBrowserConsole: setLogToBrowserConsole,\n        getLogToBrowserConsole: getLogToBrowserConsole\n    };\n\n    setup();\n\n    return instance;\n}\n\nDebug.__dashjs_factory_name = 'Debug';\nexport default FactoryMaker.getSingletonFactory(Debug);\n"]}