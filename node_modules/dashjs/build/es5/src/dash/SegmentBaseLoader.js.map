{"version":3,"sources":["../../../../src/dash/SegmentBaseLoader.js"],"names":[],"mappings":"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","file":"SegmentBaseLoader.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport RequestModifier from '../streaming/utils/RequestModifier';\nimport Segment from './vo/Segment';\nimport DashJSError from '../streaming/vo/DashJSError';\nimport Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport BoxParser from '../streaming/utils/BoxParser';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport XHRLoader from '../streaming/XHRLoader';\n\nfunction SegmentBaseLoader() {\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        errHandler,\n        boxParser,\n        requestModifier,\n        metricsModel,\n        mediaPlayerModel,\n        xhrLoader,\n        baseURLController;\n\n    function initialize() {\n        boxParser = BoxParser(context).getInstance();\n        requestModifier = RequestModifier(context).getInstance();\n        xhrLoader = XHRLoader(context).create({\n            errHandler: errHandler,\n            metricsModel: metricsModel,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: requestModifier\n        });\n    }\n\n    function setConfig(config) {\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n    }\n\n    function checkSetConfigCall() {\n        if (!baseURLController || !baseURLController.hasOwnProperty('resolve')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function loadInitialization(representation, loadingInfo) {\n        checkSetConfigCall();\n        let initRange = null;\n        let isoFile = null;\n        const baseUrl = baseURLController.resolve(representation.path);\n        const info = loadingInfo || {\n            init: true,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: {\n                start: 0,\n                end: 1500\n            },\n            searching: false,\n            bytesLoaded: 0,\n            bytesToLoad: 1500\n        };\n\n        log('Start searching for initialization.');\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            info.bytesLoaded = info.range.end;\n            isoFile = boxParser.parse(response);\n            initRange = findInitRange(isoFile);\n\n            if (initRange) {\n                representation.range = initRange;\n                // note that we don't explicitly set rep.initialization as this\n                // will be computed when all BaseURLs are resolved later\n                eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n            } else {\n                info.range.end = info.bytesLoaded + info.bytesToLoad;\n                loadInitialization(representation, info);\n            }\n\n        };\n\n        const onerror = function () {\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n        };\n\n        xhrLoader.load({request: request, success: onload, error: onerror});\n\n        log('Perform init search: ' + info.url);\n    }\n\n    function loadSegments(representation, type, range, loadingInfo, callback) {\n        checkSetConfigCall();\n        if (range && (range.start === undefined || range.end === undefined)) {\n            const parts = range ? range.toString().split('-') : null;\n            range = parts ? {start: parseFloat(parts[0]), end: parseFloat(parts[1])} : null;\n        }\n\n        callback = !callback ? onLoaded : callback;\n        let isoFile = null;\n        let sidx = null;\n        const hasRange = !!range;\n        const baseUrl = baseURLController.resolve(representation.path);\n        const info = {\n            init: false,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: hasRange ? range : { start: 0, end: 1500 },\n            searching: !hasRange,\n            bytesLoaded: loadingInfo ? loadingInfo.bytesLoaded : 0,\n            bytesToLoad: 1500\n        };\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            const extraBytes = info.bytesToLoad;\n            const loadedLength = response.byteLength;\n\n            info.bytesLoaded = info.range.end - info.range.start;\n            isoFile = boxParser.parse(response);\n            sidx = isoFile.getBox('sidx');\n\n            if (!sidx || !sidx.isComplete) {\n                if (sidx) {\n                    info.range.start = sidx.offset || info.range.start;\n                    info.range.end = info.range.start + (sidx.size || extraBytes);\n                } else if (loadedLength < info.bytesLoaded) {\n                    // if we have reached a search limit or if we have reached the end of the file we have to stop trying to find sidx\n                    callback(null, representation, type);\n                    return;\n                } else {\n                    const lastBox = isoFile.getLastBox();\n\n                    if (lastBox && lastBox.size) {\n                        info.range.start = lastBox.offset + lastBox.size;\n                        info.range.end = info.range.start + extraBytes;\n                    } else {\n                        info.range.end += extraBytes;\n                    }\n                }\n                loadSegments(representation, type, info.range, info, callback);\n            } else {\n                const ref = sidx.references;\n                let loadMultiSidx,\n                    segments;\n\n                if (ref !== null && ref !== undefined && ref.length > 0) {\n                    loadMultiSidx = (ref[0].reference_type === 1);\n                }\n\n                if (loadMultiSidx) {\n                    log('Initiate multiple SIDX load.');\n                    info.range.end = info.range.start + sidx.size;\n\n                    let j, len, ss, se, r;\n                    let segs = [];\n                    let count = 0;\n                    let offset = (sidx.offset || info.range.start) + sidx.size;\n                    const tmpCallback = function (result) {\n                        if (result) {\n                            segs = segs.concat(result);\n                            count++;\n\n                            if (count >= len) {\n                                callback(segs, representation, type);\n                            }\n                        } else {\n                            callback(null, representation, type);\n                        }\n                    };\n\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        ss = offset;\n                        se = offset + ref[j].referenced_size - 1;\n                        offset = offset + ref[j].referenced_size;\n                        r = {start: ss, end: se};\n                        loadSegments(representation, null, r, info, tmpCallback);\n                    }\n\n                } else {\n                    log('Parsing segments from SIDX.');\n                    segments = getSegmentsForSidx(sidx, info);\n                    callback(segments, representation, type);\n                }\n            }\n        };\n\n        const onerror = function () {\n            callback(null, representation, type);\n        };\n\n        xhrLoader.load({request: request, success: onload, error: onerror});\n        log('Perform SIDX load: ' + info.url);\n    }\n\n    function reset() {\n        xhrLoader.abort();\n        xhrLoader = null;\n        errHandler = null;\n        boxParser = null;\n        requestModifier = null;\n    }\n\n    function getSegmentsForSidx(sidx, info) {\n        const refs = sidx.references;\n        const len = refs.length;\n        const timescale = sidx.timescale;\n        let time = sidx.earliest_presentation_time;\n        let start = info.range.start + sidx.offset + sidx.first_offset + sidx.size;\n        const segments = [];\n        let segment,\n            end,\n            duration,\n            size;\n\n        for (let i = 0; i < len; i++) {\n            duration = refs[i].subsegment_duration;\n            size = refs[i].referenced_size;\n\n            segment = new Segment();\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = time;\n            segment.timescale = timescale;\n            end = start + size - 1;\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n            time += duration;\n            start += size;\n        }\n\n        return segments;\n    }\n\n    function findInitRange(isoFile) {\n        const ftyp = isoFile.getBox('ftyp');\n        const moov = isoFile.getBox('moov');\n\n        let initRange = null;\n        let start,\n            end;\n\n        log('Searching for initialization.');\n\n        if (moov && moov.isComplete) {\n            start = ftyp ? ftyp.offset : moov.offset;\n            end = moov.offset + moov.size - 1;\n            initRange = start + '-' + end;\n\n            log('Found the initialization.  Range: ' + initRange);\n        }\n\n        return initRange;\n    }\n\n    function getFragmentRequest(info) {\n        if (!info.url) {\n            return;\n        }\n\n        const request = new FragmentRequest();\n        request.type = info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.url = info.url;\n        request.range = info.range.start + '-' + info.range.end;\n\n        return request;\n    }\n\n    function onLoaded(segments, representation, type) {\n        if (segments) {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: segments, representation: representation, mediaType: type});\n        } else {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: null, representation: representation, mediaType: type, error: new DashJSError(null, 'error loading segments', null)});\n        }\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    return instance;\n}\n\nSegmentBaseLoader.__dashjs_factory_name = 'SegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(SegmentBaseLoader);\n"]}