{"version":3,"sources":["../../../../src/dash/WebmSegmentBaseLoader.js"],"names":[],"mappings":"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","file":"WebmSegmentBaseLoader.js","sourcesContent":["import Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport EBMLParser from '../streaming/utils/EBMLParser';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport RequestModifier from '../streaming/utils/RequestModifier';\nimport Segment from './vo/Segment';\nimport {\n    HTTPRequest\n} from '../streaming/vo/metrics/HTTPRequest';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport XHRLoader from '../streaming/XHRLoader';\n\nfunction WebmSegmentBaseLoader() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        WebM,\n        errHandler,\n        requestModifier,\n        metricsModel,\n        mediaPlayerModel,\n        xhrLoader,\n        baseURLController;\n\n    function setup() {\n        WebM = {\n            EBML: {\n                tag: 0x1A45DFA3,\n                required: true\n            },\n            Segment: {\n                tag: 0x18538067,\n                required: true,\n                SeekHead: {\n                    tag: 0x114D9B74,\n                    required: true\n                },\n                Info: {\n                    tag: 0x1549A966,\n                    required: true,\n                    TimecodeScale: {\n                        tag: 0x2AD7B1,\n                        required: true,\n                        parse: 'getMatroskaUint'\n                    },\n                    Duration: {\n                        tag: 0x4489,\n                        required: true,\n                        parse: 'getMatroskaFloat'\n                    }\n                },\n                Tracks: {\n                    tag: 0x1654AE6B,\n                    required: true\n                },\n                Cues: {\n                    tag: 0x1C53BB6B,\n                    required: true,\n                    CuePoint: {\n                        tag: 0xBB,\n                        required: true,\n                        CueTime: {\n                            tag: 0xB3,\n                            required: true,\n                            parse: 'getMatroskaUint'\n                        },\n                        CueTrackPositions: {\n                            tag: 0xB7,\n                            required: true,\n                            CueTrack: {\n                                tag: 0xF7,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            },\n                            CueClusterPosition: {\n                                tag: 0xF1,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            }\n                        }\n                    }\n                }\n            },\n            Void: {\n                tag: 0xEC,\n                required: true\n            }\n        };\n    }\n\n    function initialize() {\n        requestModifier = RequestModifier(context).getInstance();\n        xhrLoader = XHRLoader(context).create({\n            errHandler: errHandler,\n            metricsModel: metricsModel,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: requestModifier\n        });\n    }\n\n    function setConfig(config) {\n        if (!config.baseURLController || !config.metricsModel || !config.mediaPlayerModel || !config.errHandler) {\n            throw new Error('Missing config parameter(s)');\n        }\n        baseURLController = config.baseURLController;\n        metricsModel = config.metricsModel;\n        mediaPlayerModel = config.mediaPlayerModel;\n        errHandler = config.errHandler;\n    }\n\n    function parseCues(ab) {\n        let cues = [];\n        let cue;\n        let cueTrack;\n        let ebmlParser = EBMLParser(context).create({\n            data: ab\n        });\n\n        ebmlParser.consumeTagAndSize(WebM.Segment.Cues);\n\n        while (ebmlParser.moreData() &&\n            ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint, true)) {\n            cue = {};\n\n            cue.CueTime = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTime);\n\n            cue.CueTracks = [];\n            while (ebmlParser.moreData() &&\n                ebmlParser.consumeTag(WebM.Segment.Cues.CuePoint.CueTrackPositions, true)) {\n                const cueTrackPositionSize = ebmlParser.getMatroskaCodedNum();\n                const startPos = ebmlParser.getPos();\n                cueTrack = {};\n\n                cueTrack.Track = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueTrack);\n                if (cueTrack.Track === 0) {\n                    throw new Error('Cue track cannot be 0');\n                }\n\n                cueTrack.ClusterPosition =\n                    ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition);\n\n                cue.CueTracks.push(cueTrack);\n\n                // we're not interested any other elements - skip remaining bytes\n                ebmlParser.setPos(startPos + cueTrackPositionSize);\n            }\n\n            if (cue.CueTracks.length === 0) {\n                throw new Error('Mandatory cuetrack not found');\n            }\n            cues.push(cue);\n        }\n\n        if (cues.length === 0) {\n            throw new Error('mandatory cuepoint not found');\n        }\n        return cues;\n    }\n\n    function parseSegments(data, segmentStart, segmentEnd, segmentDuration) {\n        let duration;\n        let parsed;\n        let segments;\n        let segment;\n        let i;\n        let len;\n        let start;\n        let end;\n\n        parsed = parseCues(data);\n        segments = [];\n\n        // we are assuming one cue track per cue point\n        // both duration and media range require the i + 1 segment\n        // the final segment has to use global segment parameters\n        for (i = 0, len = parsed.length; i < len; i += 1) {\n            segment = new Segment();\n            duration = 0;\n\n            if (i < parsed.length - 1) {\n                duration = parsed[i + 1].CueTime - parsed[i].CueTime;\n            } else {\n                duration = segmentDuration - parsed[i].CueTime;\n            }\n\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = parsed[i].CueTime;\n            segment.timescale = 1000; // hardcoded for ms\n            start = parsed[i].CueTracks[0].ClusterPosition + segmentStart;\n\n            if (i < parsed.length - 1) {\n                end = parsed[i + 1].CueTracks[0].ClusterPosition + segmentStart - 1;\n            } else {\n                end = segmentEnd - 1;\n            }\n\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n        }\n\n        log('Parsed cues: ' + segments.length + ' cues.');\n\n        return segments;\n    }\n\n    function parseEbmlHeader(data, media, theRange, callback) {\n        let ebmlParser = EBMLParser(context).create({\n            data: data\n        });\n        let duration;\n        let segments;\n        let parts = theRange.split('-');\n        let request = null;\n        let info = {\n            url: media,\n            range: {\n                start: parseFloat(parts[0]),\n                end: parseFloat(parts[1])\n            },\n            request: request\n        };\n        let segmentEnd;\n        let segmentStart;\n\n        log('Parse EBML header: ' + info.url);\n\n        // skip over the header itself\n        ebmlParser.skipOverElement(WebM.EBML);\n        ebmlParser.consumeTag(WebM.Segment);\n\n        // segments start here\n        segmentEnd = ebmlParser.getMatroskaCodedNum();\n        segmentEnd += ebmlParser.getPos();\n        segmentStart = ebmlParser.getPos();\n\n        // skip over any top level elements to get to the segment info\n        while (ebmlParser.moreData() &&\n            !ebmlParser.consumeTagAndSize(WebM.Segment.Info, true)) {\n            if (!(ebmlParser.skipOverElement(WebM.Segment.SeekHead, true) ||\n                    ebmlParser.skipOverElement(WebM.Segment.Tracks, true) ||\n                    ebmlParser.skipOverElement(WebM.Segment.Cues, true) ||\n                    ebmlParser.skipOverElement(WebM.Void, true))) {\n                throw new Error('no valid top level element found');\n            }\n        }\n\n        // we only need one thing in segment info, duration\n        while (duration === undefined) {\n            let infoTag = ebmlParser.getMatroskaCodedNum(true);\n            let infoElementSize = ebmlParser.getMatroskaCodedNum();\n\n            switch (infoTag) {\n                case WebM.Segment.Info.Duration.tag:\n                    duration = ebmlParser[WebM.Segment.Info.Duration.parse](infoElementSize);\n                    break;\n                default:\n                    ebmlParser.setPos(ebmlParser.getPos() + infoElementSize);\n                    break;\n            }\n        }\n\n        // once we have what we need from segment info, we jump right to the\n        // cues\n\n        request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            segments = parseSegments(response, segmentStart, segmentEnd, duration);\n            callback(segments);\n        };\n\n        const onloadend = function () {\n            log('Download Error: Cues ' + info.url);\n            callback(null);\n        };\n\n        xhrLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n\n        log('Perform cues load: ' + info.url + ' bytes=' + info.range.start + '-' + info.range.end);\n    }\n\n    function checkSetConfigCall() {\n        if (!baseURLController || !baseURLController.hasOwnProperty('resolve')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function loadInitialization(representation, loadingInfo) {\n        checkSetConfigCall();\n        let request = null;\n        let baseUrl = baseURLController.resolve(representation.path);\n        let media = baseUrl ? baseUrl.url : undefined;\n        let initRange = representation.range.split('-');\n        let info = loadingInfo || {\n            range: {\n                start: parseFloat(initRange[0]),\n                end: parseFloat(initRange[1])\n            },\n            request: request,\n            url: media,\n            init: true\n        };\n\n        log('Start loading initialization.');\n\n        request = getFragmentRequest(info);\n\n        const onload = function () {\n            // note that we don't explicitly set rep.initialization as this\n            // will be computed when all BaseURLs are resolved later\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {\n                representation: representation\n            });\n        };\n\n        const onloadend = function () {\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {\n                representation: representation\n            });\n        };\n\n        xhrLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n\n        log('Perform init load: ' + info.url);\n    }\n\n    function loadSegments(representation, type, theRange, callback) {\n        checkSetConfigCall();\n        let request = null;\n        let baseUrl = baseURLController.resolve(representation.path);\n        let media = baseUrl ? baseUrl.url : undefined;\n        let bytesToLoad = 8192;\n        let info = {\n            bytesLoaded: 0,\n            bytesToLoad: bytesToLoad,\n            range: {\n                start: 0,\n                end: bytesToLoad\n            },\n            request: request,\n            url: media,\n            init: false\n        };\n\n        callback = !callback ? onLoaded : callback;\n        request = getFragmentRequest(info);\n\n        // first load the header, but preserve the manifest range so we can\n        // load the cues after parsing the header\n        // NOTE: we expect segment info to appear in the first 8192 bytes\n        log('Parsing ebml header');\n\n        const onload = function (response) {\n            parseEbmlHeader(response, media, theRange, function (segments) {\n                callback(segments, representation, type);\n            });\n        };\n\n        const onloadend = function () {\n            callback(null, representation, type);\n        };\n\n        xhrLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n    }\n\n    function onLoaded(segments, representation, type) {\n        if (segments) {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {\n                segments: segments,\n                representation: representation,\n                mediaType: type\n            });\n        } else {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {\n                segments: null,\n                representation: representation,\n                mediaType: type,\n                error: new Error(null, 'error loading segments', null)\n            });\n        }\n    }\n\n    function getFragmentRequest(info) {\n        let request = new FragmentRequest();\n\n        request.type = info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.url = info.url;\n        request.range = info.range.start + '-' + info.range.end;\n\n        return request;\n    }\n\n    function reset() {\n        errHandler = null;\n        requestModifier = null;\n        log = null;\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nWebmSegmentBaseLoader.__dashjs_factory_name = 'WebmSegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(WebmSegmentBaseLoader);\n"]}