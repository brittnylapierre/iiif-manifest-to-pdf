{"version":3,"sources":["../../../../../src/dash/models/DashManifestModel.js"],"names":[],"mappings":"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","file":"DashManifestModel.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../streaming/constants/Constants';\nimport DashConstants from '../constants/DashConstants';\nimport Representation from '../vo/Representation';\nimport AdaptationSet from '../vo/AdaptationSet';\nimport Period from '../vo/Period';\nimport Mpd from '../vo/Mpd';\nimport UTCTiming from '../vo/UTCTiming';\nimport Event from '../vo/Event';\nimport BaseURL from '../vo/BaseURL';\nimport EventStream from '../vo/EventStream';\nimport ObjectUtils from '../../streaming/utils/ObjectUtils';\nimport URLUtils from '../../streaming/utils/URLUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction DashManifestModel(config) {\n\n    config = config || {};\n    let instance;\n    const context = this.context;\n\n    const urlUtils = URLUtils(context).getInstance();\n    const mediaController = config.mediaController;\n    const timelineConverter = config.timelineConverter;\n    const adapter = config.adapter;\n\n    const PROFILE_DVB = 'urn:dvb:dash:profile:dvb-dash:2014';\n    const isInteger = Number.isInteger || function (value) {\n        return typeof value === 'number' &&\n            isFinite(value) &&\n            Math.floor(value) === value;\n    };\n\n    function getIsTypeOf(adaptation, type) {\n\n        let i,\n            len,\n            representation,\n            col,\n            mimeTypeRegEx,\n            codecs;\n        let result = false;\n        let found = false;\n\n        if (!adaptation) {\n            throw new Error('adaptation is not defined');\n        }\n\n        if (!type) {\n            throw new Error('type is not defined');\n        }\n\n        if (adaptation.hasOwnProperty('ContentComponent_asArray')) {\n            col = adaptation.ContentComponent_asArray;\n        }\n\n        mimeTypeRegEx = (type !== Constants.TEXT) ? new RegExp(type) : new RegExp('(vtt|ttml)');\n\n        if ((adaptation.Representation_asArray && adaptation.Representation_asArray.length && adaptation.Representation_asArray.length > 0) &&\n            (adaptation.Representation_asArray[0].hasOwnProperty(DashConstants.CODECS))) {\n            // Just check the start of the codecs string\n            codecs = adaptation.Representation_asArray[0].codecs;\n            if (codecs.search(Constants.STPP) === 0 || codecs.search(Constants.WVTT) === 0) {\n                return type === Constants.FRAGMENTED_TEXT;\n            }\n        }\n\n        if (col) {\n            if (col.length > 1) {\n                return (type === Constants.MUXED);\n            } else if (col[0] && col[0].contentType === type) {\n                result = true;\n                found = true;\n            }\n        }\n\n        if (adaptation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n            result = mimeTypeRegEx.test(adaptation.mimeType);\n            found = true;\n        }\n\n        // couldn't find on adaptationset, so check a representation\n        if (!found) {\n            i = 0;\n            len = adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\n            while (!found && i < len) {\n                representation = adaptation.Representation_asArray[i];\n\n                if (representation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n                    result = mimeTypeRegEx.test(representation.mimeType);\n                    found = true;\n                }\n\n                i++;\n            }\n        }\n\n        return result;\n    }\n\n    function getIsAudio(adaptation) {\n        return getIsTypeOf(adaptation, Constants.AUDIO);\n    }\n\n    function getIsVideo(adaptation) {\n        return getIsTypeOf(adaptation, Constants.VIDEO);\n    }\n\n    function getIsFragmentedText(adaptation) {\n        return getIsTypeOf(adaptation, Constants.FRAGMENTED_TEXT);\n    }\n\n    function getIsText(adaptation) {\n        return getIsTypeOf(adaptation, Constants.TEXT);\n    }\n\n    function getIsMuxed(adaptation) {\n        return getIsTypeOf(adaptation, Constants.MUXED);\n    }\n\n    function getIsImage(adaptation) {\n        return getIsTypeOf(adaptation, Constants.IMAGE);\n    }\n\n    function getIsTextTrack(type) {\n        return (type === 'text/vtt' || type === 'application/ttml+xml');\n    }\n\n    function getLanguageForAdaptation(adaptation) {\n        let lang = '';\n\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.LANG)) {\n            //Filter out any other characters not allowed according to RFC5646\n            lang = adaptation.lang.replace(/[^A-Za-z0-9-]/g, '');\n        }\n\n        return lang;\n    }\n\n    function getViewpointForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.VIEWPOINT) ? adaptation.Viewpoint : null;\n    }\n\n    function getRolesForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ROLE_ASARRAY) ? adaptation.Role_asArray : [];\n    }\n\n    function getAccessibilityForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ACCESSIBILITY_ASARRAY) ? adaptation.Accessibility_asArray : [];\n    }\n\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) ? adaptation.AudioChannelConfiguration_asArray : [];\n    }\n\n    function getIsMain(adaptation) {\n        return getRolesForAdaptation(adaptation).filter(function (role) {\n            return role.value === DashConstants.MAIN;\n        })[0];\n    }\n\n    function getRepresentationSortFunction() {\n        return (a, b) => a.bandwidth - b.bandwidth;\n    }\n\n    function processAdaptation(realAdaptation) {\n        if (realAdaptation && realAdaptation.Representation_asArray !== undefined && realAdaptation.Representation_asArray !== null) {\n            realAdaptation.Representation_asArray.sort(getRepresentationSortFunction());\n        }\n\n        return realAdaptation;\n    }\n\n    function getAdaptationForId(id, manifest, periodIndex) {\n        const realAdaptations = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n        let i,\n            len;\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (realAdaptations[i].hasOwnProperty(DashConstants.ID) && realAdaptations[i].id === id) {\n                return realAdaptations[i];\n            }\n        }\n\n        return null;\n    }\n\n    function getAdaptationForIndex(index, manifest, periodIndex) {\n        const realAdaptations = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : null : null;\n        if (realAdaptations && isInteger(index)) {\n            return realAdaptations[index];\n        } else {\n            return null;\n        }\n    }\n\n    function getIndexForAdaptation(realAdaptation, manifest, periodIndex) {\n        const realAdaptations = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n        const len = realAdaptations.length;\n\n        if (realAdaptation) {\n            for (let i = 0; i < len; i++) {\n                let objectUtils = ObjectUtils(context).getInstance();\n                if (objectUtils.areEqual(realAdaptations[i], realAdaptation)) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    function getAdaptationsForType(manifest, periodIndex, type) {\n        const realAdaptationSet = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n        let i,\n            len;\n        const adaptations = [];\n\n        for (i = 0, len = realAdaptationSet.length; i < len; i++) {\n            if (getIsTypeOf(realAdaptationSet[i], type)) {\n                adaptations.push(processAdaptation(realAdaptationSet[i]));\n            }\n        }\n\n        return adaptations;\n    }\n\n    function getAdaptationForType(manifest, periodIndex, type, streamInfo) {\n        const adaptations = getAdaptationsForType(manifest, periodIndex, type);\n\n        if (!adaptations || adaptations.length === 0) return null;\n\n        if (adaptations.length > 1 && streamInfo) {\n            const currentTrack = mediaController.getCurrentTrackFor(type, streamInfo);\n            const allMediaInfoForType = adapter.getAllMediaInfoForType(streamInfo, type);\n            for (let i = 0, ln = adaptations.length; i < ln; i++) {\n                if (currentTrack && mediaController.isTracksEqual(currentTrack, allMediaInfoForType[i])) {\n                    return adaptations[i];\n                }\n            }\n            for (let i = 0, ln = adaptations.length; i < ln; i++) {\n                if (getIsMain(adaptations[i])) {\n                    return adaptations[i];\n                }\n            }\n        }\n\n        return adaptations[0];\n    }\n\n    function getCodec(adaptation, representationId, addResolutionInfo) {\n        if (adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\n            const representation = isInteger(representationId) && representationId >= 0 && representationId < adaptation.Representation_asArray.length ?\n                adaptation.Representation_asArray[representationId] : adaptation.Representation_asArray[0];\n            let codec = representation.mimeType + ';codecs=\"' + representation.codecs + '\"';\n            if (addResolutionInfo && representation.width !== undefined) {\n                codec += ';width=\"' + representation.width + '\";height=\"' + representation.height + '\"';\n            }\n            return codec;\n        }\n\n        return null;\n    }\n\n    function getMimeType(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 ? adaptation.Representation_asArray[0].mimeType : null;\n    }\n\n    function getKID(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CENC_DEFAULT_KID)) {\n            return null;\n        }\n        return adaptation[DashConstants.CENC_DEFAULT_KID];\n    }\n\n    function getContentProtectionData(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CONTENTPROTECTION_ASARRAY) || adaptation.ContentProtection_asArray.length === 0) {\n            return null;\n        }\n        return adaptation.ContentProtection_asArray;\n    }\n\n    function getIsDynamic(manifest) {\n        let isDynamic = false;\n        if (manifest && manifest.hasOwnProperty('type')) {\n            isDynamic = (manifest.type === DashConstants.DYNAMIC);\n        }\n        return isDynamic;\n    }\n\n    function hasProfile(manifest, profile) {\n        let has = false;\n\n        if (manifest && manifest.profiles && manifest.profiles.length > 0) {\n            has = (manifest.profiles.indexOf(profile) !== -1);\n        }\n\n        return has;\n    }\n\n    function getIsDVB(manifest) {\n        return hasProfile(manifest, PROFILE_DVB);\n    }\n\n    function getDuration(manifest) {\n        let mpdDuration;\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\n        if (manifest && manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n            mpdDuration = manifest.mediaPresentationDuration;\n        } else {\n            mpdDuration = Number.MAX_SAFE_INTEGER || Number.MAX_VALUE;\n        }\n\n        return mpdDuration;\n    }\n\n    function getBandwidth(representation) {\n        return representation && representation.bandwidth ? representation.bandwidth : NaN;\n    }\n\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\n        let delay = NaN;\n        if (manifest && manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n            delay = manifest.minimumUpdatePeriod;\n        }\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\n    }\n\n    function getRepresentationCount(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\n    }\n\n    function getBitrateListForAdaptation(realAdaptation) {\n        if (!realAdaptation || !realAdaptation.Representation_asArray || !realAdaptation.Representation_asArray.length) return null;\n\n        const processedRealAdaptation = processAdaptation(realAdaptation);\n        const realRepresentations = processedRealAdaptation.Representation_asArray;\n\n        return realRepresentations.map((realRepresentation) => {\n            return {\n                bandwidth: realRepresentation.bandwidth,\n                width: realRepresentation.width || 0,\n                height: realRepresentation.height || 0,\n                scanType: realRepresentation.scanType || null\n            };\n        });\n    }\n\n    function getEssentialPropertiesForRepresentation(realRepresentation) {\n        if (!realRepresentation || ! realRepresentation.EssentialProperty_asArray || !realRepresentation.EssentialProperty_asArray.length) return null;\n\n        return realRepresentation.EssentialProperty_asArray.map( (prop) => {\n            return {\n                schemeIdUri: prop.schemeIdUri,\n                value: prop.value\n            };\n        });\n    }\n\n    function getRepresentationFor(index, adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 &&\n            isInteger(index) ? adaptation.Representation_asArray[index] : null;\n    }\n\n    function getRepresentationsForAdaptation(voAdaptation) {\n        const voRepresentations = [];\n        let voRepresentation,\n            initialization,\n            segmentInfo,\n            processedRealAdaptation,\n            realRepresentation,\n            i,\n            s;\n\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n            const periodArray = voAdaptation.period.mpd.manifest.Period_asArray[voAdaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(voAdaptation.index)) {\n                processedRealAdaptation = processAdaptation(periodArray.AdaptationSet_asArray[voAdaptation.index]);\n            }\n        }\n\n        if (processedRealAdaptation && processedRealAdaptation.Representation_asArray) {\n            for (i = 0; processedRealAdaptation && i < processedRealAdaptation.Representation_asArray.length; i++) {\n                realRepresentation = processedRealAdaptation.Representation_asArray[i];\n                voRepresentation = new Representation();\n                voRepresentation.index = i;\n                voRepresentation.adaptation = voAdaptation;\n\n                if (realRepresentation.hasOwnProperty(DashConstants.ID)) {\n                    voRepresentation.id = realRepresentation.id;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODECS)) {\n                    voRepresentation.codecs = realRepresentation.codecs;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODEC_PRIVATE_DATA)) {\n                    voRepresentation.codecPrivateData = realRepresentation.codecPrivateData;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.BANDWITH)) {\n                    voRepresentation.bandwidth = realRepresentation.bandwidth;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.WIDTH)) {\n                    voRepresentation.width = realRepresentation.width;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.HEIGHT)) {\n                    voRepresentation.height = realRepresentation.height;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.SCAN_TYPE)) {\n                    voRepresentation.scanType = realRepresentation.scanType;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.MAX_PLAYOUT_RATE)) {\n                    voRepresentation.maxPlayoutRate = realRepresentation.maxPlayoutRate;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n                    segmentInfo = realRepresentation.SegmentBase;\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_BASE;\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n                    segmentInfo = realRepresentation.SegmentList;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                        s = segmentInfo.SegmentTimeline.S_asArray[segmentInfo.SegmentTimeline.S_asArray.length - 1];\n                        if (!s.hasOwnProperty('r') || s.r >= 0) {\n                            voRepresentation.useCalculatedLiveEdgeTime = true;\n                        }\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_LIST;\n                        voRepresentation.useCalculatedLiveEdgeTime = true;\n                    }\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n                    segmentInfo = realRepresentation.SegmentTemplate;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                        s = segmentInfo.SegmentTimeline.S_asArray[segmentInfo.SegmentTimeline.S_asArray.length - 1];\n                        if (!s.hasOwnProperty('r') || s.r >= 0) {\n                            voRepresentation.useCalculatedLiveEdgeTime = true;\n                        }\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TEMPLATE;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION_MINUS)) {\n                        voRepresentation.initialization = segmentInfo.initialization.split('$Bandwidth$')\n                            .join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);\n                    }\n                } else {\n                    voRepresentation.segmentInfoType = DashConstants.BASE_URL;\n                }\n\n                voRepresentation.essentialProperties = getEssentialPropertiesForRepresentation(realRepresentation);\n\n                if (segmentInfo) {\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION)) {\n                        initialization = segmentInfo.Initialization;\n\n                        if (initialization.hasOwnProperty(DashConstants.SOURCE_URL)) {\n                            voRepresentation.initialization = initialization.sourceURL;\n                        } else if (initialization.hasOwnProperty(DashConstants.RANGE)) {\n                            voRepresentation.range = initialization.range;\n                            // initialization source url will be determined from\n                            // BaseURL when resolved at load time.\n                        }\n                    } else if (realRepresentation.hasOwnProperty(DashConstants.MIME_TYPE) && getIsTextTrack(realRepresentation.mimeType)) {\n                        voRepresentation.range = 0;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.TIMESCALE)) {\n                        voRepresentation.timescale = segmentInfo.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.DURATION)) {\n                        // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\n                        // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\n                        // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\n                        // exceeds @maxSegmentDuration\n                        //representation.segmentDuration = Math.min(segmentInfo.duration / representation.timescale, adaptation.period.mpd.maxSegmentDuration);\n                        voRepresentation.segmentDuration = segmentInfo.duration / voRepresentation.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.MEDIA)) {\n                        voRepresentation.media = segmentInfo.media;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.START_NUMBER)) {\n                        voRepresentation.startNumber = segmentInfo.startNumber;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.INDEX_RANGE)) {\n                        voRepresentation.indexRange = segmentInfo.indexRange;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\n                        voRepresentation.presentationTimeOffset = segmentInfo.presentationTimeOffset / voRepresentation.timescale;\n                    }\n                }\n\n                voRepresentation.MSETimeOffset = timelineConverter.calcMSETimeOffset(voRepresentation);\n                voRepresentation.path = [voAdaptation.period.index, voAdaptation.index, i];\n                voRepresentations.push(voRepresentation);\n            }\n        }\n\n        return voRepresentations;\n    }\n\n    function getAdaptationsForPeriod(voPeriod) {\n        const realPeriod = voPeriod && isInteger(voPeriod.index) ? voPeriod.mpd.manifest.Period_asArray[voPeriod.index] : null;\n        const voAdaptations = [];\n        let voAdaptationSet,\n            realAdaptationSet,\n            i;\n\n        if (realPeriod && realPeriod.AdaptationSet_asArray) {\n            for (i = 0; i < realPeriod.AdaptationSet_asArray.length; i++) {\n                realAdaptationSet = realPeriod.AdaptationSet_asArray[i];\n                voAdaptationSet = new AdaptationSet();\n                if (realAdaptationSet.hasOwnProperty(DashConstants.ID)) {\n                    voAdaptationSet.id = realAdaptationSet.id;\n                }\n                voAdaptationSet.index = i;\n                voAdaptationSet.period = voPeriod;\n\n                if (getIsMuxed(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.MUXED;\n                } else if (getIsAudio(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.AUDIO;\n                } else if (getIsVideo(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.VIDEO;\n                } else if (getIsFragmentedText(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.FRAGMENTED_TEXT;\n                } else if (getIsImage(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.IMAGE;\n                }else {\n                    voAdaptationSet.type = Constants.TEXT;\n                }\n                voAdaptations.push(voAdaptationSet);\n            }\n        }\n\n        return voAdaptations;\n    }\n\n    function getRegularPeriods(mpd) {\n        const isDynamic = mpd ? getIsDynamic(mpd.manifest) : false;\n        const voPeriods = [];\n        let realPeriod1 = null;\n        let realPeriod = null;\n        let voPeriod1 = null;\n        let voPeriod = null;\n        let len,\n            i;\n\n        for (i = 0, len = mpd && mpd.manifest && mpd.manifest.Period_asArray ? mpd.manifest.Period_asArray.length : 0; i < len; i++) {\n            realPeriod = mpd.manifest.Period_asArray[i];\n\n            // If the attribute @start is present in the Period, then the\n            // Period is a regular Period and the PeriodStart is equal\n            // to the value of this attribute.\n            if (realPeriod.hasOwnProperty(DashConstants.START)) {\n                voPeriod = new Period();\n                voPeriod.start = realPeriod.start;\n            }\n            // If the @start attribute is absent, but the previous Period\n            // element contains a @duration attribute then then this new\n            // Period is also a regular Period. The start time of the new\n            // Period PeriodStart is the sum of the start time of the previous\n            // Period PeriodStart and the value of the attribute @duration\n            // of the previous Period.\n            else if (realPeriod1 !== null && realPeriod.hasOwnProperty(DashConstants.DURATION) && voPeriod1 !== null) {\n                voPeriod = new Period();\n                voPeriod.start = parseFloat((voPeriod1.start + voPeriod1.duration).toFixed(5));\n                voPeriod.duration = realPeriod.duration;\n            }\n            // If (i) @start attribute is absent, and (ii) the Period element\n            // is the first in the MPD, and (iii) the MPD@type is 'static',\n            // then the PeriodStart time shall be set to zero.\n            else if (i === 0 && !isDynamic) {\n                voPeriod = new Period();\n                voPeriod.start = 0;\n            }\n\n            // The Period extends until the PeriodStart of the next Period.\n            // The difference between the PeriodStart time of a Period and\n            // the PeriodStart time of the following Period.\n            if (voPeriod1 !== null && isNaN(voPeriod1.duration)) {\n                voPeriod1.duration = parseFloat((voPeriod.start - voPeriod1.start).toFixed(5));\n            }\n\n            if (voPeriod !== null) {\n                voPeriod.id = getPeriodId(realPeriod, i);\n            }\n\n            if (voPeriod !== null && realPeriod.hasOwnProperty(DashConstants.DURATION)) {\n                voPeriod.duration = realPeriod.duration;\n            }\n\n            if (voPeriod !== null) {\n                voPeriod.index = i;\n                voPeriod.mpd = mpd;\n                voPeriods.push(voPeriod);\n                realPeriod1 = realPeriod;\n                voPeriod1 = voPeriod;\n            }\n\n            realPeriod = null;\n            voPeriod = null;\n        }\n\n        if (voPeriods.length === 0) {\n            return voPeriods;\n        }\n\n        // The last Period extends until the end of the Media Presentation.\n        // The difference between the PeriodStart time of the last Period\n        // and the mpd duration\n        if (voPeriod1 !== null && isNaN(voPeriod1.duration)) {\n            voPeriod1.duration = parseFloat((getEndTimeForLastPeriod(voPeriod1) - voPeriod1.start).toFixed(5));\n        }\n\n        return voPeriods;\n    }\n\n    function getPeriodId(realPeriod, i) {\n        if (!realPeriod) {\n            throw new Error('Period cannot be null or undefined');\n        }\n\n        let id = Period.DEFAULT_ID + '_' + i;\n\n        if (realPeriod.hasOwnProperty(DashConstants.ID) && realPeriod.id.length > 0 && realPeriod.id !== '__proto__') {\n            id = realPeriod.id;\n        }\n\n        return id;\n    }\n\n    function getMpd(manifest) {\n        const mpd = new Mpd();\n\n        if (manifest) {\n            mpd.manifest = manifest;\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME)) {\n                mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\n            } else {\n                mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_END_TIME)) {\n                mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n                mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n                mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\n            }\n\n            if (manifest.hasOwnProperty(Constants.SUGGESTED_PRESENTATION_DELAY)) {\n                mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.TIMESHIFT_BUFFER_DEPTH)) {\n                mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MAX_SEGMENT_DURATION)) {\n                mpd.maxSegmentDuration = manifest.maxSegmentDuration;\n            }\n        }\n\n        return mpd;\n    }\n\n\n    function getEndTimeForLastPeriod(voPeriod) {\n        const isDynamic = getIsDynamic(voPeriod.mpd.manifest);\n\n        let periodEnd;\n        if (voPeriod.mpd.manifest.mediaPresentationDuration) {\n            periodEnd = voPeriod.mpd.manifest.mediaPresentationDuration;\n        } else if (voPeriod.duration) {\n            periodEnd = voPeriod.duration;\n        } else if (isDynamic) {\n            periodEnd = Number.POSITIVE_INFINITY;\n        } else {\n            throw new Error('Must have @mediaPresentationDuratio on MPD or an explicit @duration on the last period.');\n        }\n\n        return periodEnd;\n    }\n\n    function getEventsForPeriod(period) {\n        const manifest = period && period.mpd && period.mpd.manifest ? period.mpd.manifest : null;\n        const periodArray = manifest ? manifest.Period_asArray : null;\n        const eventStreams = periodArray && period && isInteger(period.index) ? periodArray[period.index].EventStream_asArray : null;\n        const events = [];\n        let i,\n            j;\n\n        if (eventStreams) {\n            for (i = 0; i < eventStreams.length; i++) {\n                const eventStream = new EventStream();\n                eventStream.period = period;\n                eventStream.timescale = 1;\n\n                if (eventStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                    eventStream.schemeIdUri = eventStreams[i].schemeIdUri;\n                } else {\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                    eventStream.timescale = eventStreams[i].timescale;\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                    eventStream.value = eventStreams[i].value;\n                }\n                for (j = 0; j < eventStreams[i].Event_asArray.length; j++) {\n                    const event = new Event();\n                    event.presentationTime = 0;\n                    event.eventStream = eventStream;\n\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\n                        event.presentationTime = eventStreams[i].Event_asArray[j].presentationTime;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.DURATION)) {\n                        event.duration = eventStreams[i].Event_asArray[j].duration;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.ID)) {\n                        event.id = eventStreams[i].Event_asArray[j].id;\n                    }\n                    events.push(event);\n                }\n            }\n        }\n\n        return events;\n    }\n\n    function getEventStreams(inbandStreams, representation) {\n        const eventStreams = [];\n        let i;\n\n        if (!inbandStreams) return eventStreams;\n\n        for (i = 0; i < inbandStreams.length; i++) {\n            const eventStream = new EventStream();\n            eventStream.timescale = 1;\n            eventStream.representation = representation;\n\n            if (inbandStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\n            } else {\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                eventStream.timescale = inbandStreams[i].timescale;\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                eventStream.value = inbandStreams[i].value;\n            }\n            eventStreams.push(eventStream);\n        }\n\n        return eventStreams;\n    }\n\n    function getEventStreamForAdaptationSet(manifest, adaptation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray;\n\n        if (manifest && manifest.Period_asArray && adaptation && adaptation.period && isInteger(adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[adaptation.index];\n                if (adaptationArray) {\n                    inbandStreams = adaptationArray.InbandEventStream_asArray;\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, null);\n    }\n\n    function getEventStreamForRepresentation(manifest, representation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray,\n            representationArray;\n\n        if (manifest && manifest.Period_asArray && representation && representation.adaptation && representation.adaptation.period && isInteger(representation.adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[representation.adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(representation.adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[representation.adaptation.index];\n                if (adaptationArray && adaptationArray.Representation_asArray && isInteger(representation.index)) {\n                    representationArray = adaptationArray.Representation_asArray[representation.index];\n                    if (representationArray) {\n                        inbandStreams = representationArray.InbandEventStream_asArray;\n                    }\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, representation);\n    }\n\n    function getUTCTimingSources(manifest) {\n        const isDynamic = getIsDynamic(manifest);\n        const hasAST = manifest ? manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) : false;\n        const utcTimingsArray = manifest ? manifest.UTCTiming_asArray : null;\n        const utcTimingEntries = [];\n\n        // do not bother synchronizing the clock unless MPD is live,\n        // or it is static and has availabilityStartTime attribute\n        if ((isDynamic || hasAST)) {\n            if (utcTimingsArray) {\n                // the order is important here - 23009-1 states that the order\n                // in the manifest \"indicates relative preference, first having\n                // the highest, and the last the lowest priority\".\n                utcTimingsArray.forEach(function (utcTiming) {\n                    const entry = new UTCTiming();\n\n                    if (utcTiming.hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\n                    } else {\n                        // entries of type DescriptorType with no schemeIdUri\n                        // are meaningless. let's just ignore this entry and\n                        // move on.\n                        return;\n                    }\n\n                    // this is (incorrectly) interpreted as a number - schema\n                    // defines it as a string\n                    if (utcTiming.hasOwnProperty(DashConstants.VALUE)) {\n                        entry.value = utcTiming.value.toString();\n                    } else {\n                        // without a value, there's not a lot we can do with\n                        // this entry. let's just ignore this one and move on\n                        return;\n                    }\n\n                    // we're not interested in the optional id or any other\n                    // attributes which might be attached to the entry\n\n                    utcTimingEntries.push(entry);\n                });\n            }\n        }\n\n        return utcTimingEntries;\n    }\n\n    function getBaseURLsFromElement(node) {\n        const baseUrls = [];\n        // if node.BaseURL_asArray and node.baseUri are undefined entries\n        // will be [undefined] which entries.some will just skip\n        const entries = node.BaseURL_asArray || [node.baseUri];\n        let earlyReturn = false;\n\n        entries.some(entry => {\n            if (entry) {\n                const baseUrl = new BaseURL();\n                let text = entry.__text || entry;\n\n                if (urlUtils.isRelative(text)) {\n                    // it doesn't really make sense to have relative and\n                    // absolute URLs at the same level, or multiple\n                    // relative URLs at the same level, so assume we are\n                    // done from this level of the MPD\n                    earlyReturn = true;\n\n                    // deal with the specific case where the MPD@BaseURL\n                    // is specified and is relative. when no MPD@BaseURL\n                    // entries exist, that case is handled by the\n                    // [node.baseUri] in the entries definition.\n                    if (node.baseUri) {\n                        text = urlUtils.resolve(text, node.baseUri);\n                    }\n                }\n\n                baseUrl.url = text;\n\n                // serviceLocation is optional, but we need it in order\n                // to blacklist correctly. if it's not available, use\n                // anything unique since there's no relationship to any\n                // other BaseURL and, in theory, the url should be\n                // unique so use this instead.\n                if (entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) &&\n                    entry.serviceLocation.length) {\n                    baseUrl.serviceLocation = entry.serviceLocation;\n                } else {\n                    baseUrl.serviceLocation = text;\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_PRIORITY)) {\n                    baseUrl.dvb_priority = entry[DashConstants.DVB_PRIORITY];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_WEIGHT)) {\n                    baseUrl.dvb_weight = entry[DashConstants.DVB_WEIGHT];\n                }\n\n                /* NOTE: byteRange, availabilityTimeOffset,\n                 * availabilityTimeComplete currently unused\n                 */\n\n                baseUrls.push(baseUrl);\n\n                return earlyReturn;\n            }\n        });\n\n        return baseUrls;\n    }\n\n    function getLocation(manifest) {\n        if (manifest && manifest.hasOwnProperty(Constants.LOCATION)) {\n            // for now, do not support multiple Locations -\n            // just set Location to the first Location.\n            manifest.Location = manifest.Location_asArray[0];\n\n            return manifest.Location;\n        }\n\n        // may well be undefined\n        return undefined;\n    }\n\n    instance = {\n        getIsTypeOf: getIsTypeOf,\n        getIsAudio: getIsAudio,\n        getIsVideo: getIsVideo,\n        getIsText: getIsText,\n        getIsMuxed: getIsMuxed,\n        getIsTextTrack: getIsTextTrack,\n        getIsFragmentedText: getIsFragmentedText,\n        getIsImage: getIsImage,\n        getIsMain: getIsMain,\n        getLanguageForAdaptation: getLanguageForAdaptation,\n        getViewpointForAdaptation: getViewpointForAdaptation,\n        getRolesForAdaptation: getRolesForAdaptation,\n        getAccessibilityForAdaptation: getAccessibilityForAdaptation,\n        getAudioChannelConfigurationForAdaptation: getAudioChannelConfigurationForAdaptation,\n        getAdaptationForIndex: getAdaptationForIndex,\n        getIndexForAdaptation: getIndexForAdaptation,\n        getAdaptationForId: getAdaptationForId,\n        getAdaptationsForType: getAdaptationsForType,\n        getAdaptationForType: getAdaptationForType,\n        getCodec: getCodec,\n        getMimeType: getMimeType,\n        getKID: getKID,\n        getContentProtectionData: getContentProtectionData,\n        getIsDynamic: getIsDynamic,\n        getIsDVB: getIsDVB,\n        getDuration: getDuration,\n        getBandwidth: getBandwidth,\n        getManifestUpdatePeriod: getManifestUpdatePeriod,\n        getRepresentationCount: getRepresentationCount,\n        getBitrateListForAdaptation: getBitrateListForAdaptation,\n        getRepresentationFor: getRepresentationFor,\n        getRepresentationsForAdaptation: getRepresentationsForAdaptation,\n        getAdaptationsForPeriod: getAdaptationsForPeriod,\n        getRegularPeriods: getRegularPeriods,\n        getMpd: getMpd,\n        getEventsForPeriod: getEventsForPeriod,\n        getEventStreamForAdaptationSet: getEventStreamForAdaptationSet,\n        getEventStreamForRepresentation: getEventStreamForRepresentation,\n        getUTCTimingSources: getUTCTimingSources,\n        getBaseURLsFromElement: getBaseURLsFromElement,\n        getRepresentationSortFunction: getRepresentationSortFunction,\n        getLocation: getLocation\n    };\n\n    return instance;\n}\n\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\n"]}