{"version":3,"sources":["../../../../../../src/dash/parser/matchers/DurationMatcher.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42CAiCwB,eAAe,mGACjB,wCAAwC,6HACpC,+BAA+B,+EAEzD,IAAM,aAAa,CAAG,oFAAoF,CAAC,AAE3G,IAAM,eAAe,CAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,AAC3C,IAAM,gBAAgB,CAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,AAC3C,IAAM,cAAc,CAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,AACpC,IAAM,eAAe,CAAG,EAAE,GAAG,EAAE,CAAC,AAChC,IAAM,cAAc,CAAG,EAAE,CAAC,IAEpB,eAAe,mCAAf,eAAe,eACN,SADT,eAAe,EACH,sBADZ,eAAe,EAEb,2BAFF,eAAe,0CAGT,SAAA,IAAI,CAAI,CACJ,IAAM,aAAa,CAAG,CAClB,oCAAc,eAAe,CAAE,oCAAc,2BAA2B,CACxE,oCAAc,qBAAqB,CAAE,oCAAc,sBAAsB,CAAE,oCAAc,oBAAoB,CAC7G,oCAAc,uBAAuB,CAAE,yCAAU,4BAA4B,CAAE,oCAAc,KAAK,CAClG,yCAAU,UAAU,CAAE,oCAAc,QAAQ,CAC/C,CAAC,AACF,IAAM,GAAG,CAAG,aAAa,CAAC,MAAM,CAAC,AAEjC,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,CAAC,GAAG,GAAG,CAAE,CAAC,EAAE,EAAE,CAC1B,GAAI,IAAI,CAAC,QAAQ,KAAK,aAAa,CAAC,CAAC,CAAC,CAAE,CACpC,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CACzC,CACJ,AAED,OAAO,KAAK,CAAC,CAChB,CACD,SAAA,GAAG,CAAI;AAEH,IAAM,KAAK,CAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AACtC,IAAI,MAAM,CAAI,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,eAAe,GACrD,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,gBAAgB,GAC5C,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,cAAc,GAC1C,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,eAAe,GAC3C,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,cAAc,GAC3C,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,AAAC,CAAC,AAEhC,GAAI,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,CAAE,CACxB,MAAM,GAAG,CAAC,MAAM,CAAC,CACpB,AAED,OAAO,MAAM,CAAC,CACjB,EACH,CACL,OArCC,eAAe,mDAwCN,eAAe","file":"DurationMatcher.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc matches and converts xs:duration to seconds\n */\nimport BaseMatcher from './BaseMatcher';\nimport Constants from '../../../streaming/constants/Constants';\nimport DashConstants from '../../constants/DashConstants';\n\nconst durationRegex = /^([-])?P(([\\d.]*)Y)?(([\\d.]*)M)?(([\\d.]*)D)?T?(([\\d.]*)H)?(([\\d.]*)M)?(([\\d.]*)S)?/;\n\nconst SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\nconst SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\nconst SECONDS_IN_DAY = 24 * 60 * 60;\nconst SECONDS_IN_HOUR = 60 * 60;\nconst SECONDS_IN_MIN = 60;\n\nclass DurationMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => {\n                const attributeList = [\n                    DashConstants.MIN_BUFFER_TIME, DashConstants.MEDIA_PRESENTATION_DURATION,\n                    DashConstants.MINIMUM_UPDATE_PERIOD, DashConstants.TIMESHIFT_BUFFER_DEPTH, DashConstants.MAX_SEGMENT_DURATION,\n                    DashConstants.MAX_SUBSEGMENT_DURATION, Constants.SUGGESTED_PRESENTATION_DELAY, DashConstants.START,\n                    Constants.START_TIME, DashConstants.DURATION\n                ];\n                const len = attributeList.length;\n\n                for (let i = 0; i < len; i++) {\n                    if (attr.nodeName === attributeList[i]) {\n                        return durationRegex.test(attr.value);\n                    }\n                }\n\n                return false;\n            },\n            str => {\n                //str = \"P10Y10M10DT10H10M10.1S\";\n                const match = durationRegex.exec(str);\n                let result = (parseFloat(match[2] || 0) * SECONDS_IN_YEAR +\n                    parseFloat(match[4] || 0) * SECONDS_IN_MONTH +\n                    parseFloat(match[6] || 0) * SECONDS_IN_DAY +\n                    parseFloat(match[8] || 0) * SECONDS_IN_HOUR +\n                    parseFloat(match[10] || 0) * SECONDS_IN_MIN +\n                    parseFloat(match[12] || 0));\n\n                if (match[1] !== undefined) {\n                    result = -result;\n                }\n\n                return result;\n            }\n        );\n    }\n}\n\nexport default DurationMatcher;\n"]}