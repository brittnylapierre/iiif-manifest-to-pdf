{"version":3,"sources":["../../../../../src/dash/utils/ListSegmentsGetter.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;8LA+ByB,yBAAyB,8FAEoB,iBAAiB,EAEvF,SAAS,kBAAkB,CAAC,MAAM,CAAE,SAAS,CAAE,CAE3C,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,AACtB,IAAM,iBAAiB,CAAG,MAAM,CAAC,iBAAiB,CAAC,AAEnD,IAAI,QAAQ,UAAA,CAAC,AAEb,SAAS,mBAAmB,CAAC,cAAc,CAAE,aAAa,CAAE,KAAK,CAAE,sBAAsB,CAAE,CACvF,IAAM,IAAI,CAAG,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAC7G,qBAAqB,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,sBAAsB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,AACpH,IAAM,GAAG,CAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,AAE3C,IAAM,QAAQ,CAAG,EAAE,CAAC,AAEpB,IAAI,YAAY,UAAA,CACZ,GAAG,UAAA,CACH,CAAC,UAAA,CACD,KAAK,UAAA,CACL,QAAQ,UAAA,CACR,MAAM,UAAA,CACN,KAAK,UAAA,CAAC,AAEV,KAAK,GAAG,cAAc,CAAC,WAAW,CAAC,AAEnC,KAAK,GAAG,qDAAkC,iBAAiB,CAAE,SAAS,CAAE,cAAc,CAAE,aAAa,CAAE,KAAK,CAAE,sBAAsB,CAAC,CAAC,AACtI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,AACpC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,AAEjE,IAAK,YAAY,GAAG,QAAQ,CAAE,YAAY,IAAI,MAAM,CAAE,YAAY,EAAE,EAAE,CAClE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC,AAE1C,GAAG,GAAG,wCAAqB,iBAAiB,CAAE,SAAS,CAAE,cAAc,CAAE,YAAY,CAAC,CAAC,AACvF,GAAG,CAAC,eAAe,GAAG,CAAC,KAAK,GAAG,YAAY,GAAG,CAAC,CAAA,GAAI,cAAc,CAAC,eAAe,CAAC,AAClF,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAG,CAAC,CAAC,KAAK,CAAG,EAAE,CAAC,AACnC,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,AAC9B,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,AACpB,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,AAE9B,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AACnB,GAAG,GAAG,IAAI,CAAC,CACd,AAED,cAAc,CAAC,uBAAuB,GAAG,GAAG,CAAC,AAE7C,OAAO,QAAQ,CAAC,CACnB,AAED,QAAQ,GAAG,CACP,WAAW,CAAE,mBAAmB,CACnC,CAAC,AAEF,OAAO,QAAQ,CAAC,CACnB,AAED,kBAAkB,CAAC,qBAAqB,GAAG,oBAAoB,CAAC,AAChE,IAAM,OAAO,CAAG,8BAAa,eAAe,CAAC,kBAAkB,CAAC,CAAC,qBAClD,OAAO","file":"ListSegmentsGetter.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nimport {getIndexBasedSegment, decideSegmentListRangeForTemplate} from './SegmentsUtils';\n\nfunction ListSegmentsGetter(config, isDynamic) {\n\n    config = config || {};\n    const timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function getSegmentsFromList(representation, requestedTime, index, availabilityUpperLimit) {\n        const list = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\n        const len = list.SegmentURL_asArray.length;\n\n        const segments = [];\n\n        let periodSegIdx,\n            seg,\n            s,\n            range,\n            startIdx,\n            endIdx,\n            start;\n\n        start = representation.startNumber;\n\n        range = decideSegmentListRangeForTemplate(timelineConverter, isDynamic, representation, requestedTime, index, availabilityUpperLimit);\n        startIdx = Math.max(range.start, 0);\n        endIdx = Math.min(range.end, list.SegmentURL_asArray.length - 1);\n\n        for (periodSegIdx = startIdx; periodSegIdx <= endIdx; periodSegIdx++) {\n            s = list.SegmentURL_asArray[periodSegIdx];\n\n            seg = getIndexBasedSegment(timelineConverter, isDynamic, representation, periodSegIdx);\n            seg.replacementTime = (start + periodSegIdx - 1) * representation.segmentDuration;\n            seg.media = s.media ? s.media : '';\n            seg.mediaRange = s.mediaRange;\n            seg.index = s.index;\n            seg.indexRange = s.indexRange;\n\n            segments.push(seg);\n            seg = null;\n        }\n\n        representation.availableSegmentsNumber = len;\n\n        return segments;\n    }\n\n    instance = {\n        getSegments: getSegmentsFromList\n    };\n\n    return instance;\n}\n\nListSegmentsGetter.__dashjs_factory_name = 'ListSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(ListSegmentsGetter);\nexport default factory;\n"]}