{"version":3,"sources":["../../../../../src/dash/vo/Representation.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;i2BAmC0B,4BAA4B,mFAEhD,cAAc,aACL,SADT,cAAc,EACF,sBADZ,cAAc,EAEZ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,AACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,AAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,AACvB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,AAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,AAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,AACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,AAC7B,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,AAC3B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,AACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,AACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,AACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,AAClB,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;AAEhC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,AACzB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,AACrC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,AACjC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,AACrB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,AACjB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,AAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,AACrB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,CAC7B,aAxBC,cAAc,sCA0BQ,2BAAC,CAAC,CAAE,CACxB,OAAQ,CAAC,CAAC,cAAc,KAAK,IAAI,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,CAAE,CAC1D,2BAEiB,qBAAC,CAAC,CAAE,CAClB,OAAO,CAAC,CAAC,eAAe,KAAK,oCAAc,QAAQ,IAC/C,CAAC,CAAC,eAAe,KAAK,oCAAc,YAAY,IAChD,CAAC,CAAC,CAAC,UAAU,CAAC,CACrB,WAlCC,cAAc,2BAqCL,cAAc","file":"Representation.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\nimport DashConstants from '../constants/DashConstants';\n\nclass Representation {\n    constructor() {\n        this.id = null;\n        this.index = -1;\n        this.adaptation = null;\n        this.segmentInfoType = null;\n        this.initialization = null;\n        this.codecs = null;\n        this.codecPrivateData = null;\n        this.segmentDuration = NaN;\n        this.timescale = 1;\n        this.startNumber = 1;\n        this.indexRange = null;\n        this.range = null;\n        this.presentationTimeOffset = 0;\n        // Set the source buffer timeOffset to this\n        this.MSETimeOffset = NaN;\n        this.segmentAvailabilityRange = null;\n        this.availableSegmentsNumber = 0;\n        this.bandwidth = NaN;\n        this.width = NaN;\n        this.height = NaN;\n        this.scanType = null;\n        this.maxPlayoutRate = NaN;\n    }\n\n    static hasInitialization(r) {\n        return (r.initialization !== null || r.range !== null);\n    }\n\n    static hasSegments(r) {\n        return r.segmentInfoType !== DashConstants.BASE_URL &&\n            r.segmentInfoType !== DashConstants.SEGMENT_BASE &&\n            !r.indexRange;\n    }\n}\n\nexport default Representation;\n"]}