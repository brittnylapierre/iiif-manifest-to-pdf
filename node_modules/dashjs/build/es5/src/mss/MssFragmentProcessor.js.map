{"version":3,"sources":["../../../../src/mss/MssFragmentProcessor.js"],"names":[],"mappings":"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","file":"MssFragmentProcessor.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MSSFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport MSSFragmentMoovProcessor from './MssFragmentMoovProcessor';\nimport MssEvents from './MssEvents';\n\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nfunction MssFragmentProcessor(config) {\n\n    config = config || {};\n    let context = this.context;\n    let metricsModel = config.metricsModel;\n    let playbackController = config.playbackController;\n    let eventBus = config.eventBus;\n    let protectionController = config.protectionController;\n    const ISOBoxer = config.ISOBoxer;\n    const log = config.log;\n    let instance;\n\n    function setup() {\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\n    }\n\n    function generateMoov(rep) {\n        let mssFragmentMoovProcessor = MSSFragmentMoovProcessor(context).create({protectionController: protectionController, constants: config.constants, ISOBoxer: config.ISOBoxer});\n        return mssFragmentMoovProcessor.generateMoov(rep);\n    }\n\n    function processFragment(e, sp) {\n        if (!e) {\n            return;\n        }\n\n        let request = e.request;\n\n        if (!request) {\n            return;\n        }\n\n        if (request.type === 'MediaSegment') {\n\n            // it's a MediaSegment, let's convert fragment\n            let mssFragmentMoofProcessor = MSSFragmentMoofProcessor(context).create({\n                metricsModel: metricsModel,\n                playbackController: playbackController,\n                ISOBoxer: ISOBoxer,\n                log: log\n            });\n            mssFragmentMoofProcessor.convertFragment(e, sp);\n\n        } else if (request.type === 'FragmentInfoSegment') {\n\n            // it's a FragmentInfo, ask relative fragment info controller to handle it\n            eventBus.trigger(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, {\n                fragmentInfo: e,\n                streamProcessor: sp\n            });\n\n            // Change the sender value to stop event to be propagated (fragment info must not be added to buffer)\n            e.sender = null;\n        }\n    }\n\n    instance = {\n        generateMoov: generateMoov,\n        processFragment: processFragment\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */"]}