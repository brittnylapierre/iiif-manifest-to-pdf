{"version":3,"sources":["../../../../src/streaming/FragmentLoader.js"],"names":[],"mappings":"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","file":"FragmentLoader.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XHRLoader from './XHRLoader';\nimport HeadRequest from './vo/HeadRequest';\nimport DashJSError from './vo/DashJSError';\nimport EventBus from './../core/EventBus';\nimport Events from './../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\n\nconst FRAGMENT_LOADER_ERROR_LOADING_FAILURE = 1;\nconst FRAGMENT_LOADER_ERROR_NULL_REQUEST = 2;\nconst FRAGMENT_LOADER_MESSAGE_NULL_REQUEST = 'request is null';\n\nfunction FragmentLoader(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        xhrLoader;\n\n    function setup() {\n        xhrLoader = XHRLoader(context).create({\n            errHandler: config.errHandler,\n            metricsModel: config.metricsModel,\n            mediaPlayerModel: config.mediaPlayerModel,\n            requestModifier: config.requestModifier\n        });\n    }\n\n    function checkForExistence(request) {\n        const report = function (success) {\n            eventBus.trigger(\n                Events.CHECK_FOR_EXISTENCE_COMPLETED, {\n                    request: request,\n                    exists: success\n                }\n            );\n        };\n\n        if (request) {\n            let headRequest = new HeadRequest(request.url);\n\n            xhrLoader.load({\n                request: headRequest,\n                success: function () {\n                    report(true);\n                },\n                error: function () {\n                    report(false);\n                }\n            });\n        } else {\n            report(false);\n        }\n    }\n\n    function load(request) {\n        const report = function (data, error) {\n            eventBus.trigger(Events.LOADING_COMPLETED, {\n                request: request,\n                response: data || null,\n                error: error || null,\n                sender: instance\n            });\n        };\n\n        if (request) {\n            xhrLoader.load({\n                request: request,\n                progress: function () {\n                    eventBus.trigger(Events.LOADING_PROGRESS, {\n                        request: request\n                    });\n                },\n                success: function (data) {\n                    report(data);\n                },\n                error: function (xhr, statusText, errorText) {\n                    report(\n                        undefined,\n                        new DashJSError(\n                            FRAGMENT_LOADER_ERROR_LOADING_FAILURE,\n                            errorText,\n                            statusText\n                        )\n                    );\n                },\n                abort: function (request, status) {\n                    if (request && status === 0) {\n                        eventBus.trigger(Events.LOADING_ABANDONED, {request: request, mediaType: request.mediaType, sender: instance});\n                    }\n                }\n            });\n        } else {\n            report(\n                undefined,\n                new DashJSError(\n                    FRAGMENT_LOADER_ERROR_NULL_REQUEST,\n                    FRAGMENT_LOADER_MESSAGE_NULL_REQUEST\n                )\n            );\n        }\n    }\n\n    function abort() {\n        if (xhrLoader) {\n            xhrLoader.abort();\n        }\n    }\n\n    function reset() {\n        if (xhrLoader) {\n            xhrLoader.abort();\n            xhrLoader = null;\n        }\n    }\n\n    instance = {\n        checkForExistence: checkForExistence,\n        load: load,\n        abort: abort,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nFragmentLoader.__dashjs_factory_name = 'FragmentLoader';\n\nconst factory = FactoryMaker.getClassFactory(FragmentLoader);\nfactory.FRAGMENT_LOADER_ERROR_LOADING_FAILURE = FRAGMENT_LOADER_ERROR_LOADING_FAILURE;\nfactory.FRAGMENT_LOADER_ERROR_NULL_REQUEST = FRAGMENT_LOADER_ERROR_NULL_REQUEST;\nFactoryMaker.updateClassFactory(FragmentLoader.__dashjs_factory_name, factory);\nexport default factory;\n"]}