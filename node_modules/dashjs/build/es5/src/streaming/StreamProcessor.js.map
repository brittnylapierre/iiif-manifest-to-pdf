{"version":3,"sources":["../../../../src/streaming/StreamProcessor.js"],"names":[],"mappings":"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","file":"StreamProcessor.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants';\nimport LiveEdgeFinder from './utils/LiveEdgeFinder';\nimport BufferController from './controllers/BufferController';\nimport TextBufferController from './text/TextBufferController';\nimport ScheduleController from './controllers/ScheduleController';\nimport RepresentationController from '../dash/controllers/RepresentationController';\nimport FactoryMaker from '../core/FactoryMaker';\n\nimport DashHandler from '../dash/DashHandler';\n\nfunction StreamProcessor(config) {\n\n    config = config || {};\n    let context = this.context;\n\n    let indexHandler;\n    let type = config.type;\n    let errHandler = config.errHandler;\n    let mimeType = config.mimeType;\n    let timelineConverter = config.timelineConverter;\n    let adapter = config.adapter;\n    let manifestModel = config.manifestModel;\n    let mediaPlayerModel = config.mediaPlayerModel;\n    let stream = config.stream;\n    let abrController = config.abrController;\n    let playbackController = config.playbackController;\n    let streamController = config.streamController;\n    let mediaController = config.mediaController;\n    let textController = config.textController;\n    let domStorage = config.domStorage;\n    let metricsModel = config.metricsModel;\n    let dashMetrics = config.dashMetrics;\n    let dashManifestModel = config.dashManifestModel;\n\n    let instance,\n        mediaInfo,\n        mediaInfoArr,\n        bufferController,\n        scheduleController,\n        liveEdgeFinder,\n        representationController,\n        fragmentModel,\n        spExternalControllers;\n\n    function setup() {\n        if (playbackController && playbackController.getIsDynamic()) {\n            liveEdgeFinder = LiveEdgeFinder(context).create({\n                timelineConverter: timelineConverter,\n                streamProcessor: instance\n            });\n        }\n        resetInitialSettings();\n    }\n\n    function initialize(mediaSource) {\n\n        indexHandler = DashHandler(context).create({\n            mimeType: mimeType,\n            timelineConverter: timelineConverter,\n            dashMetrics: dashMetrics,\n            metricsModel: metricsModel,\n            mediaPlayerModel: mediaPlayerModel,\n            baseURLController: config.baseURLController,\n            errHandler: errHandler\n        });\n\n        // initialize controllers\n        indexHandler.initialize(instance);\n        abrController.registerStreamType(type, instance);\n\n        fragmentModel = stream.getFragmentController().getModel(type);\n        fragmentModel.setStreamProcessor(instance);\n\n        bufferController = createBufferControllerForType(type);\n        scheduleController = ScheduleController(context).create({\n            type: type,\n            metricsModel: metricsModel,\n            adapter: adapter,\n            dashMetrics: dashMetrics,\n            dashManifestModel: dashManifestModel,\n            timelineConverter: timelineConverter,\n            mediaPlayerModel: mediaPlayerModel,\n            abrController: abrController,\n            playbackController: playbackController,\n            streamController: streamController,\n            textController: textController,\n            streamProcessor: instance,\n            mediaController: mediaController\n        });\n\n        representationController = RepresentationController(context).create();\n\n        representationController.setConfig({\n            abrController: abrController,\n            domStorage: domStorage,\n            metricsModel: metricsModel,\n            dashMetrics: dashMetrics,\n            dashManifestModel: dashManifestModel,\n            manifestModel: manifestModel,\n            playbackController: playbackController,\n            timelineConverter: timelineConverter,\n            streamProcessor: instance\n        });\n        bufferController.initialize(mediaSource);\n        scheduleController.initialize();\n        representationController.initialize();\n    }\n\n    function registerExternalController(controller) {\n        spExternalControllers.push(controller);\n    }\n\n    function unregisterExternalController(controller) {\n        var index = spExternalControllers.indexOf(controller);\n\n        if (index !== -1) {\n            spExternalControllers.splice(index, 1);\n        }\n    }\n\n    function getExternalControllers() {\n        return spExternalControllers;\n    }\n\n    function unregisterAllExternalController() {\n        spExternalControllers = [];\n    }\n\n    function resetInitialSettings() {\n        mediaInfoArr = [];\n        mediaInfo = null;\n        unregisterAllExternalController();\n    }\n\n    function reset(errored) {\n\n        indexHandler.reset();\n\n        if (bufferController) {\n            bufferController.reset(errored);\n            bufferController = null;\n        }\n\n        if (scheduleController) {\n            scheduleController.reset();\n            scheduleController = null;\n        }\n\n        if (representationController) {\n            representationController.reset();\n            representationController = null;\n        }\n\n        if (abrController) {\n            abrController.unRegisterStreamType(type);\n        }\n        spExternalControllers.forEach(function (controller) {\n            controller.reset();\n        });\n\n        resetInitialSettings();\n        type = null;\n        stream = null;\n        if (liveEdgeFinder) {\n            liveEdgeFinder.reset();\n            liveEdgeFinder = null;\n        }\n    }\n\n    function isUpdating() {\n        return representationController ? representationController.isUpdating() : false;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getRepresentationController() {\n        return representationController;\n    }\n\n    function getIndexHandler() {\n        return indexHandler;\n    }\n\n    function getFragmentController() {\n        return stream ? stream.getFragmentController() : null;\n    }\n\n    function getBuffer() {\n        return bufferController.getBuffer();\n    }\n\n    function setBuffer(buffer) {\n        bufferController.setBuffer(buffer);\n    }\n\n    function getBufferController() {\n        return bufferController;\n    }\n\n    function getFragmentModel() {\n        return fragmentModel;\n    }\n\n    function getLiveEdgeFinder() {\n        return liveEdgeFinder;\n    }\n\n    function getStreamInfo() {\n        return stream ? stream.getStreamInfo() : null;\n    }\n\n    function getEventController() {\n        return stream ? stream.getEventController() : null;\n    }\n\n    function updateMediaInfo(newMediaInfo) {\n        if (newMediaInfo !== mediaInfo && (!newMediaInfo || !mediaInfo || (newMediaInfo.type === mediaInfo.type))) {\n            mediaInfo = newMediaInfo;\n        }\n        if (mediaInfoArr.indexOf(newMediaInfo) === -1) {\n            mediaInfoArr.push(newMediaInfo);\n        }\n        adapter.updateData(this);\n    }\n\n    function getMediaInfoArr() {\n        return mediaInfoArr;\n    }\n\n    function getMediaInfo() {\n        return mediaInfo;\n    }\n\n    function getMediaSource() {\n        return bufferController.getMediaSource();\n    }\n\n    function setMediaSource(mediaSource) {\n        bufferController.setMediaSource(mediaSource, getMediaInfo());\n    }\n\n    function dischargePreBuffer() {\n        bufferController.dischargePreBuffer();\n    }\n\n    function getScheduleController() {\n        return scheduleController;\n    }\n\n    function getCurrentRepresentationInfo() {\n        return adapter.getCurrentRepresentationInfo(representationController);\n    }\n\n    function getRepresentationInfoForQuality(quality) {\n        return adapter.getRepresentationInfoForQuality(representationController, quality);\n    }\n\n    function isBufferingCompleted() {\n        if (bufferController) {\n            return bufferController.getIsBufferingCompleted();\n        }\n\n        return false;\n    }\n\n    function getBufferLevel() {\n        return bufferController.getBufferLevel();\n    }\n\n    function switchInitData(representationId, bufferResetEnabled) {\n        if (bufferController) {\n            bufferController.switchInitData(getStreamInfo().id, representationId, bufferResetEnabled);\n        }\n    }\n\n    function createBuffer() {\n        return (bufferController.getBuffer() || bufferController.createBuffer(mediaInfo));\n    }\n\n    function switchTrackAsked() {\n        scheduleController.switchTrackAsked();\n    }\n\n    function createBufferControllerForType(type) {\n        let controller = null;\n\n        if (type === Constants.VIDEO || type === Constants.AUDIO) {\n            controller = BufferController(context).create({\n                type: type,\n                metricsModel: metricsModel,\n                mediaPlayerModel: mediaPlayerModel,\n                manifestModel: manifestModel,\n                errHandler: errHandler,\n                streamController: streamController,\n                mediaController: mediaController,\n                adapter: adapter,\n                textController: textController,\n                abrController: abrController,\n                playbackController: playbackController,\n                streamProcessor: instance\n            });\n        } else {\n            controller = TextBufferController(context).create({\n                type: type,\n                metricsModel: metricsModel,\n                mediaPlayerModel: mediaPlayerModel,\n                manifestModel: manifestModel,\n                errHandler: errHandler,\n                streamController: streamController,\n                mediaController: mediaController,\n                adapter: adapter,\n                textController: textController,\n                abrController: abrController,\n                playbackController: playbackController,\n                streamProcessor: instance\n            });\n        }\n\n        return controller;\n    }\n\n    instance = {\n        initialize: initialize,\n        isUpdating: isUpdating,\n        getType: getType,\n        getBufferController: getBufferController,\n        getFragmentModel: getFragmentModel,\n        getScheduleController: getScheduleController,\n        getLiveEdgeFinder: getLiveEdgeFinder,\n        getEventController: getEventController,\n        getFragmentController: getFragmentController,\n        getRepresentationController: getRepresentationController,\n        getIndexHandler: getIndexHandler,\n        getCurrentRepresentationInfo: getCurrentRepresentationInfo,\n        getRepresentationInfoForQuality: getRepresentationInfoForQuality,\n        getBufferLevel: getBufferLevel,\n        switchInitData: switchInitData,\n        isBufferingCompleted: isBufferingCompleted,\n        createBuffer: createBuffer,\n        getStreamInfo: getStreamInfo,\n        updateMediaInfo: updateMediaInfo,\n        switchTrackAsked: switchTrackAsked,\n        getMediaInfoArr: getMediaInfoArr,\n        getMediaInfo: getMediaInfo,\n        getMediaSource: getMediaSource,\n        setMediaSource: setMediaSource,\n        dischargePreBuffer: dischargePreBuffer,\n        getBuffer: getBuffer,\n        setBuffer: setBuffer,\n        registerExternalController: registerExternalController,\n        unregisterExternalController: unregisterExternalController,\n        getExternalControllers: getExternalControllers,\n        unregisterAllExternalController: unregisterAllExternalController,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\nStreamProcessor.__dashjs_factory_name = 'StreamProcessor';\nexport default FactoryMaker.getClassFactory(StreamProcessor);\n"]}