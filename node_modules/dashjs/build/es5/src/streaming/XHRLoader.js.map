{"version":3,"sources":["../../../../src/streaming/XHRLoader.js"],"names":[],"mappings":"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","file":"XHRLoader.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport FactoryMaker from '../core/FactoryMaker';\nimport ErrorHandler from './utils/ErrorHandler';\n\n/**\n * @module XHRLoader\n * @description Manages download of resources via HTTP.\n * @param {Object} cfg - dependancies from parent\n */\nfunction XHRLoader(cfg) {\n\n    cfg = cfg || {};\n    const errHandler = cfg.errHandler;\n    const metricsModel = cfg.metricsModel;\n    const mediaPlayerModel = cfg.mediaPlayerModel;\n    const requestModifier = cfg.requestModifier;\n\n    let instance;\n    let xhrs;\n    let delayedXhrs;\n    let retryTimers;\n    let downloadErrorToRequestTypeMap;\n\n    function setup() {\n        xhrs = [];\n        delayedXhrs = [];\n        retryTimers = [];\n\n        downloadErrorToRequestTypeMap = {\n            [HTTPRequest.MPD_TYPE]:                         ErrorHandler.DOWNLOAD_ERROR_ID_MANIFEST,\n            [HTTPRequest.XLINK_EXPANSION_TYPE]:             ErrorHandler.DOWNLOAD_ERROR_ID_XLINK,\n            [HTTPRequest.INIT_SEGMENT_TYPE]:                ErrorHandler.DOWNLOAD_ERROR_ID_INITIALIZATION,\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]:               ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT,\n            [HTTPRequest.INDEX_SEGMENT_TYPE]:               ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT,\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT,\n            [HTTPRequest.OTHER_TYPE]:                       ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT\n        };\n    }\n\n    function internalLoad(config, remainingAttempts) {\n\n        let request = config.request;\n        let xhr = new XMLHttpRequest();\n        let traces = [];\n        let firstProgress = true;\n        let needFailureReport = true;\n        let requestStartTime = new Date();\n        let lastTraceTime = requestStartTime;\n        let lastTraceReceivedCount = 0;\n\n        const handleLoaded = function (success) {\n            needFailureReport = false;\n\n            request.requestStartDate = requestStartTime;\n            request.requestEndDate = new Date();\n            request.firstByteDate = request.firstByteDate || requestStartTime;\n\n            if (!request.checkExistenceOnly) {\n                metricsModel.addHttpRequest(\n                    request.mediaType,\n                    null,\n                    request.type,\n                    request.url,\n                    xhr.responseURL || null,\n                    request.serviceLocation || null,\n                    request.range || null,\n                    request.requestStartDate,\n                    request.firstByteDate,\n                    request.requestEndDate,\n                    xhr.status,\n                    request.duration,\n                    xhr.getAllResponseHeaders(),\n                    success ? traces : null\n                );\n            }\n        };\n\n        const onloadend = function () {\n            if (xhrs.indexOf(xhr) === -1) {\n                return;\n            } else {\n                xhrs.splice(xhrs.indexOf(xhr), 1);\n            }\n\n            if (needFailureReport) {\n                handleLoaded(false);\n\n                if (remainingAttempts > 0) {\n                    remainingAttempts--;\n                    retryTimers.push(\n                        setTimeout(function () {\n                            internalLoad(config, remainingAttempts);\n                        }, mediaPlayerModel.getRetryIntervalForType(request.type))\n                    );\n                } else {\n                    errHandler.downloadError(\n                        downloadErrorToRequestTypeMap[request.type],\n                        request.url,\n                        request\n                    );\n\n                    if (config.error) {\n                        config.error(request, 'error', xhr.statusText);\n                    }\n\n                    if (config.complete) {\n                        config.complete(request, xhr.statusText);\n                    }\n                }\n            }\n        };\n\n        const progress = function (event) {\n            let currentTime = new Date();\n\n            if (firstProgress) {\n                firstProgress = false;\n                if (!event.lengthComputable ||\n                    (event.lengthComputable && event.total !== event.loaded)) {\n                    request.firstByteDate = currentTime;\n                }\n            }\n\n            if (event.lengthComputable) {\n                request.bytesLoaded = event.loaded;\n                request.bytesTotal = event.total;\n            }\n\n            traces.push({\n                s: lastTraceTime,\n                d: currentTime.getTime() - lastTraceTime.getTime(),\n                b: [event.loaded ? event.loaded - lastTraceReceivedCount : 0]\n            });\n\n            lastTraceTime = currentTime;\n            lastTraceReceivedCount = event.loaded;\n\n            if (config.progress) {\n                config.progress();\n            }\n        };\n\n        const onload = function () {\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                handleLoaded(true);\n\n                if (config.success) {\n                    config.success(xhr.response, xhr.statusText, xhr);\n                }\n\n                if (config.complete) {\n                    config.complete(request, xhr.statusText);\n                }\n            }\n        };\n\n        const onabort = function () {\n            if (config.abort) {\n                config.abort(request, xhr.status);\n            }\n        };\n\n        if (!requestModifier || !metricsModel || !errHandler) {\n            throw new Error('config object is not correct or missing');\n        }\n\n        try {\n            const modifiedUrl = requestModifier.modifyRequestURL(request.url);\n            const verb = request.checkExistenceOnly ? HTTPRequest.HEAD : HTTPRequest.GET;\n\n            xhr.open(verb, modifiedUrl, true);\n\n            if (request.responseType) {\n                xhr.responseType = request.responseType;\n            }\n\n            if (request.range) {\n                xhr.setRequestHeader('Range', 'bytes=' + request.range);\n            }\n\n            if (!request.requestStartDate) {\n                request.requestStartDate = requestStartTime;\n            }\n\n            xhr = requestModifier.modifyRequestHeader(xhr);\n\n            xhr.withCredentials = mediaPlayerModel.getXHRWithCredentialsForType(request.type);\n\n            xhr.onload = onload;\n            xhr.onloadend = onloadend;\n            xhr.onerror = onloadend;\n            xhr.onprogress = progress;\n            xhr.onabort = onabort;\n\n            // Adds the ability to delay single fragment loading time to control buffer.\n            let now = new Date().getTime();\n            if (isNaN(request.delayLoadingTime) || now >= request.delayLoadingTime) {\n                // no delay - just send xhr\n\n                xhrs.push(xhr);\n                xhr.send();\n            } else {\n                // delay\n                let delayedXhr = {xhr: xhr};\n                delayedXhrs.push(delayedXhr);\n                delayedXhr.delayTimeout = setTimeout(function () {\n                    if (delayedXhrs.indexOf(delayedXhr) === -1) {\n                        return;\n                    } else {\n                        delayedXhrs.splice(delayedXhrs.indexOf(delayedXhr), 1);\n                    }\n                    try {\n                        requestStartTime = new Date();\n                        lastTraceTime = requestStartTime;\n                        xhrs.push(delayedXhr.xhr);\n                        delayedXhr.xhr.send();\n                    } catch (e) {\n                        delayedXhr.xhr.onerror();\n                    }\n                }, (request.delayLoadingTime - now));\n            }\n\n        } catch (e) {\n            xhr.onerror();\n        }\n    }\n\n    /**\n     * Initiates a download of the resource described by config.request\n     * @param {Object} config - contains request (FragmentRequest or derived type), and callbacks\n     * @memberof module:XHRLoader\n     * @instance\n     */\n    function load(config) {\n        if (config.request) {\n            internalLoad(\n                config,\n                mediaPlayerModel.getRetryAttemptsForType(\n                    config.request.type\n                )\n            );\n        }\n    }\n\n    /**\n     * Aborts any inflight downloads\n     * @memberof module:XHRLoader\n     * @instance\n     */\n    function abort() {\n        retryTimers.forEach(t => clearTimeout(t));\n        retryTimers = [];\n\n        delayedXhrs.forEach(x => clearTimeout(x.delayTimeout));\n        delayedXhrs = [];\n\n        xhrs.forEach(x => {\n            // abort will trigger onloadend which we don't want\n            // when deliberately aborting inflight requests -\n            // set them to undefined so they are not called\n            x.onloadend = x.onerror = x.onprogress = undefined;\n            x.abort();\n        });\n        xhrs = [];\n    }\n\n    instance = {\n        load: load,\n        abort: abort\n    };\n\n    setup();\n\n    return instance;\n}\n\nXHRLoader.__dashjs_factory_name = 'XHRLoader';\n\nconst factory = FactoryMaker.getClassFactory(XHRLoader);\nexport default factory;\n"]}