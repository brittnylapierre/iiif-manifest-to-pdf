{"version":3,"sources":["../../../../../src/streaming/controllers/BlacklistController.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;8LA+ByB,yBAAyB,6FAC7B,qBAAqB,2DAE1C,SAAS,mBAAmB,CAAC,MAAM,CAAE,CAEjC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,AACtB,IAAI,SAAS,CAAG,EAAE,CAAC,AAEnB,IAAM,QAAQ,CAAG,8BAAS,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,AACtD,IAAM,eAAe,CAAG,MAAM,CAAC,eAAe,CAAC,AAC/C,IAAM,qBAAqB,CAAG,MAAM,CAAC,qBAAqB,CAAC,AAE3D,SAAS,QAAQ,CAAC,KAAK,CAAE,CACrB,GAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,CAC9C,OAAO,KAAK,CAAC,CAChB,AAED,OAAQ,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAE,CAC5C,AAED,SAAS,GAAG,CAAC,KAAK,CAAE,CAChB,GAAI,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAE,CACjC,OAAO,CACV,AAED,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,AAEtB,QAAQ,CAAC,OAAO,CACZ,eAAe,CACf,CACI,KAAK,CAAE,KAAK,CACf,CACJ,CAAC,CACL,AAED,SAAS,cAAc,CAAC,CAAC,CAAE,CACvB,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAChB,AAED,SAAS,KAAK,EAAG,CACb,GAAI,qBAAqB,CAAE,CACvB,QAAQ,CAAC,EAAE,CAAC,qBAAqB,CAAE,cAAc,CAAE,IAAI,CAAC,CAAC,CAC5D,CACJ,AAED,SAAS,KAAK,EAAG,CACb,SAAS,GAAG,EAAE,CAAC,CAClB,AAED,KAAK,EAAE,CAAC,AAER,OAAO,CACH,GAAG,CAAE,GAAG,CACR,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,KAAK,CACf,CAAC,CACL,AAED,mBAAmB,CAAC,qBAAqB,GAAG,qBAAqB,CAAC,qBACnD,8BAAa,eAAe,CAAC,mBAAmB,CAAC","file":"BlacklistController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\n\nfunction BlackListController(config) {\n\n    config = config || {};\n    let blacklist = [];\n\n    const eventBus = EventBus(this.context).getInstance();\n    const updateEventName = config.updateEventName;\n    const addBlacklistEventName = config.addBlacklistEventName;\n\n    function contains(query) {\n        if (!blacklist.length || !query || !query.length) {\n            return false;\n        }\n\n        return (blacklist.indexOf(query) !== -1);\n    }\n\n    function add(entry) {\n        if (blacklist.indexOf(entry) !== -1) {\n            return;\n        }\n\n        blacklist.push(entry);\n\n        eventBus.trigger(\n            updateEventName,\n            {\n                entry: entry\n            }\n        );\n    }\n\n    function onAddBlackList(e) {\n        add(e.entry);\n    }\n\n    function setup() {\n        if (addBlacklistEventName) {\n            eventBus.on(addBlacklistEventName, onAddBlackList, this);\n        }\n    }\n\n    function reset() {\n        blacklist = [];\n    }\n\n    setup();\n\n    return {\n        add: add,\n        contains: contains,\n        reset: reset\n    };\n}\n\nBlackListController.__dashjs_factory_name = 'BlackListController';\nexport default FactoryMaker.getClassFactory(BlackListController);\n"]}