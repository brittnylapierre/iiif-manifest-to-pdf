{"version":3,"sources":["../../../../../src/streaming/controllers/XlinkController.js"],"names":[],"mappings":"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","file":"XlinkController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XlinkLoader from '../XlinkLoader';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport X2JS from '../../../externals/xml2json';\nimport URLUtils from '../utils/URLUtils';\n\nconst RESOLVE_TYPE_ONLOAD = 'onLoad';\nconst RESOLVE_TYPE_ONACTUATE = 'onActuate';\nconst ELEMENT_TYPE_PERIOD = 'Period';\nconst ELEMENT_TYPE_ADAPTATIONSET = 'AdaptationSet';\nconst ELEMENT_TYPE_EVENTSTREAM = 'EventStream';\nconst RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\nfunction XlinkController(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        matchers,\n        iron,\n        manifest,\n        converter,\n        xlinkLoader;\n\n    function setup() {\n        eventBus.on(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        xlinkLoader = XlinkLoader(context).create({\n            errHandler: config.errHandler,\n            metricsModel: config.metricsModel,\n            mediaPlayerModel: config.mediaPlayerModel,\n            requestModifier: config.requestModifier\n        });\n    }\n\n    function setMatchers(value) {\n        if (value) {\n            matchers = value;\n        }\n    }\n\n    function setIron(value) {\n        if (value) {\n            iron = value;\n        }\n    }\n\n    /**\n     * <p>Triggers the resolution of the xlink.onLoad attributes in the manifest file </p>\n     * @param {Object} mpd - the manifest\n     */\n    function resolveManifestOnLoad(mpd) {\n        let elements;\n        // First resolve all periods, so unnecessary requests inside onLoad Periods with Default content are avoided\n        converter = new X2JS({\n            escapeMode:         false,\n            attributePrefix:    '',\n            arrayAccessForm:    'property',\n            emptyNodeForm:      'object',\n            stripWhitespaces:   false,\n            enableToStringFunc: false,\n            ignoreRoot:         true,\n            matchers:           matchers\n        });\n\n        manifest = mpd;\n        elements = getElementsToResolve(manifest.Period_asArray, manifest, ELEMENT_TYPE_PERIOD, RESOLVE_TYPE_ONLOAD);\n        resolve(elements, ELEMENT_TYPE_PERIOD, RESOLVE_TYPE_ONLOAD);\n    }\n\n    function reset() {\n        eventBus.off(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        if (xlinkLoader) {\n            xlinkLoader.reset();\n            xlinkLoader = null;\n        }\n    }\n\n    function resolve(elements, type, resolveType) {\n        let resolveObject = {};\n        let element,\n            url;\n\n        resolveObject.elements = elements;\n        resolveObject.type = type;\n        resolveObject.resolveType = resolveType;\n        // If nothing to resolve, directly call allElementsLoaded\n        if (resolveObject.elements.length === 0) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n        for (let i = 0; i < resolveObject.elements.length; i++) {\n            element = resolveObject.elements[i];\n            if (urlUtils.isHTTPURL(element.url)) {\n                url = element.url;\n            } else {\n                url = element.originalContent.BaseURL + element.url;\n            }\n            xlinkLoader.load(url, element, resolveObject);\n        }\n    }\n\n    function onXlinkElementLoaded(event) {\n        let element,\n            resolveObject;\n\n        const openingTag = '<response>';\n        const closingTag = '</response>';\n        let mergedContent = '';\n\n        element = event.element;\n        resolveObject = event.resolveObject;\n        // if the element resolved into content parse the content\n        if (element.resolvedContent) {\n            let index = 0;\n            // we add a parent elements so the converter is able to parse multiple elements of the same type which are not wrapped inside a container\n            if (element.resolvedContent.indexOf('<?xml') === 0) {\n                index = element.resolvedContent.indexOf('?>') + 2; //find the closing position of the xml declaration, if it exists.\n            }\n            mergedContent = element.resolvedContent.substr(0,index) + openingTag + element.resolvedContent.substr(index) + closingTag;\n            element.resolvedContent = converter.xml_str2json(mergedContent);\n        }\n        if (isResolvingFinished(resolveObject)) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n    }\n\n    // We got to wait till all elements of the current queue are resolved before merging back\n    function onXlinkAllElementsLoaded (resolveObject) {\n        let elements = [];\n        let i,\n            obj;\n\n        mergeElementsBack(resolveObject);\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONACTUATE) {\n            eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\n        }\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONLOAD) {\n            switch (resolveObject.type) {\n                // Start resolving the other elements. We can do Adaptation Set and EventStream in parallel\n                case ELEMENT_TYPE_PERIOD:\n                    for (i = 0; i < manifest[ELEMENT_TYPE_PERIOD + '_asArray'].length; i++) {\n                        obj = manifest[ELEMENT_TYPE_PERIOD + '_asArray'][i];\n                        if (obj.hasOwnProperty(ELEMENT_TYPE_ADAPTATIONSET + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[ELEMENT_TYPE_ADAPTATIONSET + '_asArray'], obj, ELEMENT_TYPE_ADAPTATIONSET, RESOLVE_TYPE_ONLOAD));\n                        }\n                        if (obj.hasOwnProperty(ELEMENT_TYPE_EVENTSTREAM + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[ELEMENT_TYPE_EVENTSTREAM + '_asArray'], obj, ELEMENT_TYPE_EVENTSTREAM, RESOLVE_TYPE_ONLOAD));\n                        }\n                    }\n                    resolve(elements, ELEMENT_TYPE_ADAPTATIONSET, RESOLVE_TYPE_ONLOAD);\n                    break;\n                case ELEMENT_TYPE_ADAPTATIONSET:\n                    // TODO: Resolve SegmentList here\n                    eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\n                    break;\n            }\n        }\n    }\n\n    // Returns the elements with the specific resolve Type\n    function getElementsToResolve(elements, parentElement, type, resolveType) {\n        let toResolve = [];\n        let element,\n            i,\n            xlinkObject;\n        // first remove all the resolve-to-zero elements\n        for (i = elements.length - 1; i >= 0; i--) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element['xlink:href'] === RESOLVE_TO_ZERO) {\n                elements.splice(i, 1);\n            }\n        }\n        // now get the elements with the right resolve type\n        for (i = 0; i < elements.length; i++) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element.hasOwnProperty('xlink:actuate') && element['xlink:actuate'] === resolveType) {\n                xlinkObject = createXlinkObject(element['xlink:href'], parentElement, type, i, resolveType, element);\n                toResolve.push(xlinkObject);\n            }\n        }\n        return toResolve;\n    }\n\n    function mergeElementsBack(resolveObject) {\n        let resolvedElements = [];\n        let element,\n            type,\n            obj,\n            i,\n            j,\n            k;\n        // Start merging back from the end because of index shifting. Note that the elements with the same parent have to be ordered by index ascending\n        for (i = resolveObject.elements.length - 1; i >= 0; i --) {\n            element = resolveObject.elements[i];\n            type = element.type + '_asArray';\n\n            // Element couldn't be resolved or is TODO Inappropriate target: Remove all Xlink attributes\n            if (!element.resolvedContent || isInappropriateTarget()) {\n                delete element.originalContent['xlink:actuate'];\n                delete element.originalContent['xlink:href'];\n                resolvedElements.push(element.originalContent);\n            }\n            // Element was successfully resolved\n            else if (element.resolvedContent) {\n                for (j = 0; j < element.resolvedContent[type].length; j++) {\n                    //TODO Contains another Xlink attribute with xlink:actuate set to onload. Remove all xLink attributes\n                    obj = element.resolvedContent[type][j];\n                    resolvedElements.push(obj);\n                }\n            }\n            // Replace the old elements in the parent with the resolved ones\n            element.parentElement[type].splice(element.index, 1);\n            for (k = 0; k < resolvedElements.length; k++) {\n                element.parentElement[type].splice(element.index + k, 0, resolvedElements[k]);\n            }\n            resolvedElements = [];\n        }\n        if (resolveObject.elements.length > 0) {\n            iron.run(manifest);\n        }\n    }\n\n    function createXlinkObject(url, parentElement, type, index, resolveType, originalContent) {\n        return {\n            url: url,\n            parentElement: parentElement,\n            type: type,\n            index: index,\n            resolveType: resolveType,\n            originalContent: originalContent,\n            resolvedContent: null,\n            resolved: false\n        };\n    }\n\n    // Check if all pending requests are finished\n    function isResolvingFinished(elementsToResolve) {\n        let i,\n            obj;\n        for (i = 0; i < elementsToResolve.elements.length; i++) {\n            obj = elementsToResolve.elements[i];\n            if (obj.resolved === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // TODO : Do some syntax check here if the target is valid or not\n    function isInappropriateTarget() {\n        return false;\n    }\n\n    instance = {\n        resolveManifestOnLoad: resolveManifestOnLoad,\n        setMatchers: setMatchers,\n        setIron: setIron,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nXlinkController.__dashjs_factory_name = 'XlinkController';\nexport default FactoryMaker.getClassFactory(XlinkController);\n"]}