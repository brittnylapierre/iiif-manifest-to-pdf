{"version":3,"sources":["../../../../../../src/streaming/metrics/controllers/MetricsController.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;6LA+B4B,mBAAmB,kGACf,uBAAuB,gHACjB,6BAA6B,qFAEnE,SAAS,iBAAiB,CAAC,MAAM,CAAE,CAE/B,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,AACtB,IAAI,yBAAyB,UAAA,CACzB,mBAAmB,UAAA,CACnB,eAAe,UAAA,CACf,QAAQ,UAAA,CAAC,AAEb,IAAI,OAAO,CAAG,IAAI,CAAC,OAAO,CAAC,AAE3B,SAAS,UAAU,CAAC,YAAY,CAAE,CAC9B,GAAI,CACA,eAAe,GAAG,iCAAgB,OAAO,CAAC,CAAC,MAAM,CAAC,CAC9C,YAAY,CAAE,MAAM,CAAC,YAAY,CACpC,CAAC,CAAC,AAEH,eAAe,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,AAE/C,mBAAmB,GAAG,qCAAoB,OAAO,CAAC,CAAC,MAAM,CAAC,CACtD,GAAG,CAAE,MAAM,CAAC,GAAG,CACf,gBAAgB,CAAE,MAAM,CAAC,gBAAgB,CAC5C,CAAC,CAAC,AAEH,mBAAmB,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAE,eAAe,CAAC,CAAC,AAExE,yBAAyB,GAAG,2CAA0B,OAAO,CAAC,CAAC,MAAM,CAAC,CAClE,GAAG,CAAE,MAAM,CAAC,GAAG,CACf,QAAQ,CAAE,MAAM,CAAC,QAAQ,CACzB,gBAAgB,CAAE,MAAM,CAAC,gBAAgB,CACzC,MAAM,CAAE,MAAM,CAAC,MAAM,CACxB,CAAC,CAAC,AAEH,yBAAyB,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAE,mBAAmB,CAAC,CAAC,CACnF,AAAC,MAAO,CAAC,EAAE,CACR,KAAK,EAAE,CAAC,AACR,MAAM,CAAC,CAAC,CACX,CACJ,AAED,SAAS,KAAK,EAAG,CACb,GAAI,yBAAyB,CAAE,CAC3B,yBAAyB,CAAC,KAAK,EAAE,CAAC,CACrC,AAED,GAAI,mBAAmB,CAAE,CACrB,mBAAmB,CAAC,KAAK,EAAE,CAAC,CAC/B,AAED,GAAI,eAAe,CAAE,CACjB,eAAe,CAAC,KAAK,EAAE,CAAC,CAC3B,CACJ,AAED,QAAQ,GAAG,CACP,UAAU,CAAE,UAAU,CACtB,KAAK,CAAO,KAAK,CACpB,CAAC,AAEF,OAAO,QAAQ,CAAC,CACnB,AAED,iBAAiB,CAAC,qBAAqB,GAAG,mBAAmB,CAAC,qBAC/C,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,iBAAiB,CAAC","file":"MetricsController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport RangeController from './RangeController';\nimport ReportingController from './ReportingController';\nimport MetricsHandlersController from './MetricsHandlersController';\n\nfunction MetricsController(config) {\n\n    config = config || {};\n    let metricsHandlersController,\n        reportingController,\n        rangeController,\n        instance;\n\n    let context = this.context;\n\n    function initialize(metricsEntry) {\n        try {\n            rangeController = RangeController(context).create({\n                mediaElement: config.mediaElement\n            });\n\n            rangeController.initialize(metricsEntry.Range);\n\n            reportingController = ReportingController(context).create({\n                log: config.log,\n                metricsConstants: config.metricsConstants\n            });\n\n            reportingController.initialize(metricsEntry.Reporting, rangeController);\n\n            metricsHandlersController = MetricsHandlersController(context).create({\n                log: config.log,\n                eventBus: config.eventBus,\n                metricsConstants: config.metricsConstants,\n                events: config.events\n            });\n\n            metricsHandlersController.initialize(metricsEntry.metrics, reportingController);\n        } catch (e) {\n            reset();\n            throw e;\n        }\n    }\n\n    function reset() {\n        if (metricsHandlersController) {\n            metricsHandlersController.reset();\n        }\n\n        if (reportingController) {\n            reportingController.reset();\n        }\n\n        if (rangeController) {\n            rangeController.reset();\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset\n    };\n\n    return instance;\n}\n\nMetricsController.__dashjs_factory_name = 'MetricsController';\nexport default dashjs.FactoryMaker.getClassFactory(MetricsController); /* jshint ignore:line */\n"]}