{"version":3,"sources":["../../../../../../src/streaming/metrics/metrics/MetricsHandlerFactory.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;wMA+BwB,+BAA+B,6HACjC,6BAA6B,wHAC9B,4BAA4B,2HAChB,iCAAiC,2FAElE,SAAS,qBAAqB,CAAC,MAAM,CAAE,CAEnC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,AACtB,IAAI,QAAQ,UAAA,CAAC,AACb,IAAI,GAAG,CAAG,MAAM,CAAC,GAAG,CAAC;AAGrB,IAAI,QAAQ,CAAG,+CAA+C,CAAC,AAE/D,IAAI,OAAO,CAAG,IAAI,CAAC,OAAO,CAAC,AAC3B,IAAI,oBAAoB,CAAG,CACvB,WAAW,wCAAgB,CAC3B,SAAS,sCAAgB,CACzB,QAAQ,qCAAgB,CACxB,QAAQ,0CAA4B,CACpC,aAAa,0CAAuB,CACpC,OAAO,0CAA6B,CACvC,CAAC,AAEF,SAAS,MAAM,CAAC,QAAQ,CAAE,mBAAmB,CAAE,CAC3C,IAAI,OAAO,CAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,AACvC,IAAI,OAAO,CAAC,AAEZ,GAAI,CAAC,OAAO,CAAE,CACV,OAAO,CACV,AAED,GAAI,CACA,OAAO,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CACvD,QAAQ,CAAE,MAAM,CAAC,QAAQ,CACzB,gBAAgB,CAAE,MAAM,CAAC,gBAAgB,CAC5C,CAAC,CAAC,AAEH,OAAO,CAAC,UAAU,CACd,OAAO,CAAC,CAAC,CAAC,CACV,mBAAmB,CACnB,OAAO,CAAC,CAAC,CAAC,CACV,OAAO,CAAC,CAAC,CAAC,CACb,CAAC,CACL,AAAC,MAAO,CAAC,EAAE,CACR,OAAO,GAAG,IAAI,CAAC,AAEf,GAAG,+DAA6D,OAAO,CAAC,CAAC,CAAC,mBAAc,OAAO,CAAC,CAAC,CAAC,UAAK,OAAO,CAAC,CAAC,CAAC,UAAK,CAAC,CAAC,OAAO,OAAI,CAAC,CACvI,AAED,OAAO,OAAO,CAAC,CAClB,AAED,SAAS,QAAQ,CAAC,GAAG,CAAE,OAAO,CAAE,CAC5B,oBAAoB,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CACvC,AAED,SAAS,UAAU,CAAC,GAAG,CAAE,CACrB,OAAO,oBAAoB,CAAC,GAAG,CAAC,CAAC,CACpC,AAED,QAAQ,GAAG,CACP,MAAM,CAAM,MAAM,CAClB,QAAQ,CAAI,QAAQ,CACpB,UAAU,CAAE,UAAU,CACzB,CAAC,AAEF,OAAO,QAAQ,CAAC,CACnB,AAED,qBAAqB,CAAC,qBAAqB,GAAG,uBAAuB,CAAC,qBACvD,MAAM,CAAC,YAAY,CAAC,mBAAmB,CAAC,qBAAqB,CAAC","file":"MetricsHandlerFactory.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BufferLevel from './handlers/BufferLevelHandler';\nimport DVBErrors from './handlers/DVBErrorsHandler';\nimport HttpList from './handlers/HttpListHandler';\nimport GenericMetricHandler from './handlers/GenericMetricHandler';\n\nfunction MetricsHandlerFactory(config) {\n\n    config = config || {};\n    let instance;\n    let log = config.log;\n\n    // group 1: key, [group 3: n [, group 5: type]]\n    let keyRegex = /([a-zA-Z]*)(\\(([0-9]*)(\\,\\s*([a-zA-Z]*))?\\))?/;\n\n    let context = this.context;\n    let knownFactoryProducts = {\n        BufferLevel:    BufferLevel,\n        DVBErrors:      DVBErrors,\n        HttpList:       HttpList,\n        PlayList:       GenericMetricHandler,\n        RepSwitchList:  GenericMetricHandler,\n        TcpList:        GenericMetricHandler\n    };\n\n    function create(listType, reportingController) {\n        var matches = listType.match(keyRegex);\n        var handler;\n\n        if (!matches) {\n            return;\n        }\n\n        try {\n            handler = knownFactoryProducts[matches[1]](context).create({\n                eventBus: config.eventBus,\n                metricsConstants: config.metricsConstants\n            });\n\n            handler.initialize(\n                matches[1],\n                reportingController,\n                matches[3],\n                matches[5]\n            );\n        } catch (e) {\n            handler = null;\n\n            log(`MetricsHandlerFactory: Could not create handler for type ${matches[1]} with args ${matches[3]}, ${matches[5]} (${e.message})`);\n        }\n\n        return handler;\n    }\n\n    function register(key, handler) {\n        knownFactoryProducts[key] = handler;\n    }\n\n    function unregister(key) {\n        delete knownFactoryProducts[key];\n    }\n\n    instance = {\n        create:     create,\n        register:   register,\n        unregister: unregister\n    };\n\n    return instance;\n}\n\nMetricsHandlerFactory.__dashjs_factory_name = 'MetricsHandlerFactory';\nexport default dashjs.FactoryMaker.getSingletonFactory(MetricsHandlerFactory); /* jshint ignore:line */\n"]}