{"version":3,"sources":["../../../../../../../src/streaming/metrics/metrics/handlers/HttpListHandler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;iMA+B2B,4BAA4B,yEAEvD,SAAS,eAAe,CAAC,MAAM,CAAE,CAE7B,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,AACtB,IAAI,QAAQ,UAAA,CACR,mBAAmB,UAAA,CACnB,CAAC,UAAA,CACD,IAAI,UAAA,CACJ,IAAI,UAAA,CACJ,QAAQ,UAAA,CAAC,AAEb,IAAI,SAAS,CAAG,EAAE,CAAC,AAEnB,IAAI,cAAc,CAAG,qCAAe,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,AAEhE,IAAM,gBAAgB,CAAG,MAAM,CAAC,gBAAgB,CAAC,AAEjD,SAAS,gBAAgB,EAAG,CACxB,IAAI,GAAG,CAAG,SAAS,CAAC,AAEpB,GAAI,GAAG,CAAC,MAAM,CAAE,CACZ,GAAI,mBAAmB,CAAE,CACrB,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC,CACzC,CACJ,AAED,SAAS,GAAG,EAAE,CAAC,CAClB,AAED,SAAS,UAAU,CAAC,QAAQ,CAAE,EAAE,CAAE,IAAI,CAAE,WAAW,CAAE,CACjD,GAAI,EAAE,CAAE;;AAIJ,CAAC,GAAG,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,AAEnC,mBAAmB,GAAG,EAAE,CAAC,AAEzB,GAAI,WAAW,IAAI,WAAW,CAAC,MAAM,CAAE,CACnC,IAAI,GAAG,WAAW,CAAC,CACtB,AAED,IAAI,GAAG,cAAc,CAAC,yBAAyB,CAC3C,QAAQ,CACR,IAAI,CACJ,WAAW,CACd,CAAC,AAEF,QAAQ,GAAG,WAAW,CAAC,gBAAgB,CAAE,CAAC,CAAC,CAAC,CAC/C,CACJ,AAED,SAAS,KAAK,EAAG,CACb,aAAa,CAAC,QAAQ,CAAC,CAAC,AACxB,QAAQ,GAAG,IAAI,CAAC,AAChB,CAAC,GAAG,IAAI,CAAC,AACT,IAAI,GAAG,IAAI,CAAC,AACZ,SAAS,GAAG,EAAE,CAAC,AACf,mBAAmB,GAAG,IAAI,CAAC,CAC9B,AAED,SAAS,eAAe,CAAC,MAAM,CAAE,EAAE,CAAE,CACjC,GAAI,MAAM,KAAK,gBAAgB,CAAC,YAAY,CAAE,CAC1C,GAAI,CAAC,IAAI,IAAK,IAAI,KAAK,EAAE,CAAC,IAAI,AAAC,CAAE,CAC7B,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CACtB,CACJ,CACJ,AAED,QAAQ,GAAG,CACP,UAAU,CAAU,UAAU,CAC9B,KAAK,CAAe,KAAK,CACzB,eAAe,CAAK,eAAe,CACtC,CAAC,AAEF,OAAO,QAAQ,CAAC,CACnB,AAED,eAAe,CAAC,qBAAqB,GAAG,iBAAiB,CAAC,qBAC3C,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,eAAe,CAAC","file":"HttpListHandler.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport HandlerHelpers from '../../utils/HandlerHelpers';\n\nfunction HttpListHandler(config) {\n\n    config = config || {};\n    let instance,\n        reportingController,\n        n,\n        type,\n        name,\n        interval;\n\n    let storedVos = [];\n\n    let handlerHelpers = HandlerHelpers(this.context).getInstance();\n\n    const metricsConstants = config.metricsConstants;\n\n    function intervalCallback() {\n        var vos = storedVos;\n\n        if (vos.length) {\n            if (reportingController) {\n                reportingController.report(name, vos);\n            }\n        }\n\n        storedVos = [];\n    }\n\n    function initialize(basename, rc, n_ms, requestType) {\n        if (rc) {\n\n            // this will throw if n is invalid, to be\n            // caught by the initialize caller.\n            n = handlerHelpers.validateN(n_ms);\n\n            reportingController = rc;\n\n            if (requestType && requestType.length) {\n                type = requestType;\n            }\n\n            name = handlerHelpers.reconstructFullMetricName(\n                basename,\n                n_ms,\n                requestType\n            );\n\n            interval = setInterval(intervalCallback, n);\n        }\n    }\n\n    function reset() {\n        clearInterval(interval);\n        interval = null;\n        n = null;\n        type = null;\n        storedVos = [];\n        reportingController = null;\n    }\n\n    function handleNewMetric(metric, vo) {\n        if (metric === metricsConstants.HTTP_REQUEST) {\n            if (!type || (type === vo.type)) {\n                storedVos.push(vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nHttpListHandler.__dashjs_factory_name = 'HttpListHandler';\nexport default dashjs.FactoryMaker.getClassFactory(HttpListHandler); /* jshint ignore:line */\n"]}