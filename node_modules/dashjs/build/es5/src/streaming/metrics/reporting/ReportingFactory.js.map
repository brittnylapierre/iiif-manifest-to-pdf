{"version":3,"sources":["../../../../../../src/streaming/metrics/reporting/ReportingFactory.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;mMA+ByB,0BAA0B,6EAEnD,SAAS,gBAAgB,CAAC,MAAM,CAAE,CAC9B,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,AAEtB,IAAM,0BAA0B,CAAG,CAC/B,6BAA6B,mCAAc,CAC9C,CAAC,AAEF,IAAM,OAAO,CAAG,IAAI,CAAC,OAAO,CAAC,AAC7B,IAAM,GAAG,CAAG,MAAM,CAAC,GAAG,CAAC,AACvB,IAAM,gBAAgB,CAAG,MAAM,CAAC,gBAAgB,CAAC,AAEjD,IAAI,QAAQ,UAAA,CAAC,AAEb,SAAS,MAAM,CAAC,KAAK,CAAE,eAAe,CAAE,CACpC,IAAI,SAAS,UAAA,CAAC,AAEd,GAAI,CACA,SAAS,GAAG,0BAA0B,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CACtE,gBAAgB,CAAE,gBAAgB,CACrC,CAAC,CAAC,AAEH,SAAS,CAAC,UAAU,CAAC,KAAK,CAAE,eAAe,CAAC,CAAC,CAChD,AAAC,MAAO,CAAC,EAAE,CACR,SAAS,GAAG,IAAI,CAAC,AAEjB,GAAG,oEAAkE,KAAK,CAAC,WAAW,UAAK,CAAC,CAAC,OAAO,OAAI,CAAC,CAC5G,AAED,OAAO,SAAS,CAAC,CACpB,AAED,SAAS,QAAQ,CAAC,WAAW,CAAE,UAAU,CAAE,CACvC,0BAA0B,CAAC,WAAW,CAAC,GAAG,UAAU,CAAC,CACxD,AAED,SAAS,UAAU,CAAC,WAAW,CAAE,CAC7B,OAAO,0BAA0B,CAAC,WAAW,CAAC,CAAC,CAClD,AAED,QAAQ,GAAG,CACP,MAAM,CAAM,MAAM,CAClB,QAAQ,CAAI,QAAQ,CACpB,UAAU,CAAE,UAAU,CACzB,CAAC,AAEF,OAAO,QAAQ,CAAC,CACnB,AAED,gBAAgB,CAAC,qBAAqB,GAAG,kBAAkB,CAAC,qBAC7C,MAAM,CAAC,YAAY,CAAC,mBAAmB,CAAC,gBAAgB,CAAC","file":"ReportingFactory.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DVBReporting from './reporters/DVBReporting';\n\nfunction ReportingFactory(config) {\n    config = config || {};\n\n    const knownReportingSchemeIdUris = {\n        'urn:dvb:dash:reporting:2014': DVBReporting\n    };\n\n    const context = this.context;\n    const log = config.log;\n    const metricsConstants = config.metricsConstants;\n\n    let instance;\n\n    function create(entry, rangeController) {\n        let reporting;\n\n        try {\n            reporting = knownReportingSchemeIdUris[entry.schemeIdUri](context).create({\n                metricsConstants: metricsConstants\n            });\n\n            reporting.initialize(entry, rangeController);\n        } catch (e) {\n            reporting = null;\n\n            log(`ReportingFactory: could not create Reporting with schemeIdUri ${entry.schemeIdUri} (${e.message})`);\n        }\n\n        return reporting;\n    }\n\n    function register(schemeIdUri, moduleName) {\n        knownReportingSchemeIdUris[schemeIdUri] = moduleName;\n    }\n\n    function unregister(schemeIdUri) {\n        delete knownReportingSchemeIdUris[schemeIdUri];\n    }\n\n    instance = {\n        create:     create,\n        register:   register,\n        unregister: unregister\n    };\n\n    return instance;\n}\n\nReportingFactory.__dashjs_factory_name = 'ReportingFactory';\nexport default dashjs.FactoryMaker.getSingletonFactory(ReportingFactory); /* jshint ignore:line */\n"]}