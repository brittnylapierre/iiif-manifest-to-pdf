{"version":3,"sources":["../../../../../../src/streaming/metrics/utils/DVBErrorsTranslator.js"],"names":[],"mappings":"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","file":"DVBErrorsTranslator.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DVBErrors from '../vo/DVBErrors';\nimport MetricsReportingEvents from '../MetricsReportingEvents';\n\nfunction DVBErrorsTranslator(config) {\n\n    config = config || {};\n    let instance;\n    let eventBus = config.eventBus;\n    let metricModel = config.metricsModel;\n    let mpd;\n\n    const metricsConstants = config.metricsConstants;\n    //MediaPlayerEvents have been added to Events in MediaPlayer class\n    const Events = config.events;\n\n    function report(vo) {\n        let o = new DVBErrors();\n\n        if (!mpd) {\n            return;\n        }\n\n        for (const key in vo) {\n            if (vo.hasOwnProperty(key)) {\n                o[key] = vo[key];\n            }\n        }\n\n        if (!o.mpdurl) {\n            o.mpdurl = mpd.originalUrl || mpd.url;\n        }\n\n        if (!o.terror) {\n            o.terror = new Date();\n        }\n\n        metricModel.addDVBErrors(o);\n    }\n\n    function onManifestUpdate(e) {\n        if (e.error) {\n            return;\n        }\n\n        mpd = e.manifest;\n    }\n\n    function onServiceLocationChanged(e) {\n        report({\n            errorcode:          DVBErrors.BASE_URL_CHANGED,\n            servicelocation:    e.entry\n        });\n    }\n\n    function onBecameReporter() {\n        report({\n            errorcode: DVBErrors.BECAME_REPORTER\n        });\n    }\n\n    function handleHttpMetric(vo) {\n        if ((vo.responsecode === 0) ||      // connection failure - unknown\n                (vo.responsecode >= 400) || // HTTP error status code\n                (vo.responsecode < 100) ||  // unknown status codes\n                (vo.responsecode >= 600)) { // unknown status codes\n            report({\n                errorcode:          vo.responsecode || DVBErrors.CONNECTION_ERROR,\n                url:                vo.url,\n                terror:             vo.tresponse,\n                servicelocation:    vo._serviceLocation\n            });\n        }\n    }\n\n    function onMetricEvent(e) {\n        switch (e.metric) {\n        case metricsConstants.HTTP_REQUEST:\n            handleHttpMetric(e.value);\n            break;\n        default:\n            break;\n        }\n    }\n\n    function onPlaybackError(e) {\n        let reason = e.error ? e.error.code : 0;\n        let errorcode;\n\n        switch (reason) {\n            case MediaError.MEDIA_ERR_NETWORK:\n                errorcode = DVBErrors.CONNECTION_ERROR;\n                break;\n            case MediaError.MEDIA_ERR_DECODE:\n                errorcode = DVBErrors.CORRUPT_MEDIA_OTHER;\n                break;\n            default:\n                return;\n        }\n\n        report({\n            errorcode: errorcode\n        });\n    }\n\n    function initialise() {\n        eventBus.on(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\n        eventBus.on(\n            Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\n            onServiceLocationChanged,\n            instance\n        );\n        eventBus.on(Events.METRIC_ADDED, onMetricEvent, instance);\n        eventBus.on(Events.METRIC_UPDATED, onMetricEvent, instance);\n        eventBus.on(Events.PLAYBACK_ERROR, onPlaybackError, instance);\n        eventBus.on(\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\n            onBecameReporter,\n            instance\n        );\n    }\n\n    function reset() {\n        eventBus.off(Events.MANIFEST_UPDATED, onManifestUpdate, instance);\n        eventBus.off(\n            Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\n            onServiceLocationChanged,\n            instance\n        );\n        eventBus.off(Events.METRIC_ADDED, onMetricEvent, instance);\n        eventBus.off(Events.METRIC_UPDATED, onMetricEvent, instance);\n        eventBus.off(Events.PLAYBACK_ERROR, onPlaybackError, instance);\n        eventBus.off(\n            MetricsReportingEvents.BECAME_REPORTING_PLAYER,\n            onBecameReporter,\n            instance\n        );\n    }\n\n    instance = {\n        initialise: initialise,\n        reset:      reset\n    };\n\n    initialise();\n\n    return instance;\n}\n\nDVBErrorsTranslator.__dashjs_factory_name = 'DVBErrorsTranslator';\nexport default dashjs.FactoryMaker.getSingletonFactory(DVBErrorsTranslator); /* jshint ignore:line */\n"]}