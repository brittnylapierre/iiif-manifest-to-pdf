{"version":3,"sources":["../../../../../../src/streaming/metrics/utils/RNG.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;yEA+BA,SAAS,GAAG,EAAG;;AAIX,IAAI,MAAM,CAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC;AAG9C,IAAI,SAAS,CAAG,WAAW,CAAC,AAC5B,IAAI,SAAS,CAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;;AAKjE,IAAI,kBAAkB,CAAG,EAAE,CAAC,AAE5B,IAAI,aAAa,UAAA,CACb,KAAK,UAAA,CACL,QAAQ,UAAA,CAAC,AAEb,SAAS,UAAU,EAAG,CAClB,GAAI,MAAM,CAAE,CACR,GAAI,CAAC,aAAa,CAAE,CAChB,aAAa,GAAG,IAAI,SAAS,CAAC,kBAAkB,CAAC,CAAC,CACrD,AACD,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,AACtC,KAAK,GAAG,CAAC,CAAC,CACb,CACJ,AAED,SAAS,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,CACpB,IAAI,CAAC,UAAA,CAAC,AAEN,GAAI,CAAC,GAAG,CAAE,CACN,GAAG,GAAG,CAAC,CAAC,CACX,AAED,GAAI,CAAC,GAAG,CAAE,CACN,GAAG,GAAG,CAAC,CAAC,CACX,AAED,GAAI,MAAM,CAAE,CACR,GAAI,KAAK,KAAK,aAAa,CAAC,MAAM,CAAE,CAChC,UAAU,EAAE,CAAC,CAChB,AAED,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,AACrC,KAAK,IAAI,CAAC,CAAC,CACd,KAAM,CACH,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CACrB,AAED,OAAO,AAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAA,AAAC,GAAI,GAAG,CAAC,CAClC,AAED,QAAQ,GAAG,CACP,MAAM,CAAE,IAAI,CACf,CAAC,AAEF,UAAU,EAAE,CAAC,AAEb,OAAO,QAAQ,CAAC,CACnB,AAED,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC,qBACnB,MAAM,CAAC,YAAY,CAAC,mBAAmB,CAAC,GAAG,CAAC","file":"RNG.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nfunction RNG() {\n\n    // check whether secure random numbers are available. if not, revert to\n    // using Math.random\n    let crypto = window.crypto || window.msCrypto;\n\n    // could just as easily use any other array type by changing line below\n    let ArrayType = Uint32Array;\n    let MAX_VALUE = Math.pow(2, ArrayType.BYTES_PER_ELEMENT * 8) - 1;\n\n    // currently there is only one client for this code, and that only uses\n    // a single random number per initialisation. may want to increase this\n    // number if more consumers in the future\n    let NUM_RANDOM_NUMBERS = 10;\n\n    let randomNumbers,\n        index,\n        instance;\n\n    function initialise() {\n        if (crypto) {\n            if (!randomNumbers) {\n                randomNumbers = new ArrayType(NUM_RANDOM_NUMBERS);\n            }\n            crypto.getRandomValues(randomNumbers);\n            index = 0;\n        }\n    }\n\n    function rand(min, max) {\n        let r;\n\n        if (!min) {\n            min = 0;\n        }\n\n        if (!max) {\n            max = 1;\n        }\n\n        if (crypto) {\n            if (index === randomNumbers.length) {\n                initialise();\n            }\n\n            r = randomNumbers[index] / MAX_VALUE;\n            index += 1;\n        } else {\n            r = Math.random();\n        }\n\n        return (r * (max - min)) + min;\n    }\n\n    instance = {\n        random: rand\n    };\n\n    initialise();\n\n    return instance;\n}\n\nRNG.__dashjs_factory_name = 'RNG';\nexport default dashjs.FactoryMaker.getSingletonFactory(RNG); /* jshint ignore:line */\n"]}