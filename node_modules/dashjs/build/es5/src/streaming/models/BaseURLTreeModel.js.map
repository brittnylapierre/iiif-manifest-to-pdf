{"version":3,"sources":["../../../../../src/streaming/models/BaseURLTreeModel.js"],"names":[],"mappings":"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","file":"BaseURLTreeModel.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst DEFAULT_INDEX = NaN;\n\nclass Node {\n    constructor(_baseUrls, _selectedIdx) {\n        this.data = {\n            baseUrls: _baseUrls || null,\n            selectedIdx: _selectedIdx || DEFAULT_INDEX\n        };\n        this.children = [];\n    }\n}\n\nfunction BaseURLTreeModel() {\n\n    let instance;\n    let root;\n    let dashManifestModel;\n\n    const context = this.context;\n    const objectUtils = ObjectUtils(context).getInstance();\n\n    function setup() {\n        reset();\n    }\n\n    function setConfig(config) {\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n    }\n\n    function updateChildData(node, index, element) {\n        let baseUrls = dashManifestModel.getBaseURLsFromElement(element);\n\n        if (!node[index]) {\n            node[index] = new Node(baseUrls);\n        } else {\n            if (!objectUtils.areEqual(baseUrls, node[index].data.baseUrls)) {\n                node[index].data.baseUrls = baseUrls;\n                node[index].data.selectedIdx = DEFAULT_INDEX;\n            }\n        }\n    }\n\n    function getBaseURLCollectionsFromManifest(manifest) {\n        let baseUrls = dashManifestModel.getBaseURLsFromElement(manifest);\n\n        if (!objectUtils.areEqual(baseUrls, root.data.baseUrls)) {\n            root.data.baseUrls = baseUrls;\n            root.data.selectedIdx = DEFAULT_INDEX;\n        }\n\n        if (manifest.Period_asArray) {\n            manifest.Period_asArray.forEach((p, pi) => {\n                updateChildData(root.children, pi, p);\n\n                if (p.AdaptationSet_asArray) {\n                    p.AdaptationSet_asArray.forEach((a, ai) => {\n                        updateChildData(root.children[pi].children, ai, a);\n\n                        if (a.Representation_asArray) {\n                            a.Representation_asArray.sort(\n                                dashManifestModel.getRepresentationSortFunction()\n                            ).forEach((r, ri) => {\n                                updateChildData(\n                                    root.children[pi].children[ai].children,\n                                    ri,\n                                    r\n                                );\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    function walk(callback, node) {\n        let target = node || root;\n\n        callback(target.data);\n\n        if (target.children) {\n            target.children.forEach(child => walk(callback, child));\n        }\n    }\n\n    function invalidateSelectedIndexes(serviceLocation) {\n        walk((data) => {\n            if (!isNaN(data.selectedIdx)) {\n                if (serviceLocation === data.baseUrls[data.selectedIdx].serviceLocation) {\n                    data.selectedIdx = DEFAULT_INDEX;\n                }\n            }\n        });\n    }\n\n    function update(manifest) {\n        getBaseURLCollectionsFromManifest(manifest);\n    }\n\n    function reset() {\n        root = new Node();\n    }\n\n    function getForPath(path) {\n        let target = root;\n        let nodes = [target.data];\n\n        if (path) {\n            path.forEach(p => {\n                target = target.children[p];\n\n                if (target) {\n                    nodes.push(target.data);\n                }\n            });\n        }\n\n        return nodes.filter(n => n.baseUrls.length);\n    }\n\n    instance = {\n        reset: reset,\n        update: update,\n        getForPath: getForPath,\n        invalidateSelectedIndexes: invalidateSelectedIndexes,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLTreeModel.__dashjs_factory_name = 'BaseURLTreeModel';\nexport default FactoryMaker.getClassFactory(BaseURLTreeModel);\n"]}