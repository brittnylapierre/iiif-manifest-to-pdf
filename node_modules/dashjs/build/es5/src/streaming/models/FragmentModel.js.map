{"version":3,"sources":["../../../../../src/streaming/models/FragmentModel.js"],"names":[],"mappings":"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","file":"FragmentModel.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport FragmentRequest from '../vo/FragmentRequest';\nimport Debug from '../../core/Debug';\n\nconst FRAGMENT_MODEL_LOADING = 'loading';\nconst FRAGMENT_MODEL_EXECUTED = 'executed';\nconst FRAGMENT_MODEL_CANCELED = 'canceled';\nconst FRAGMENT_MODEL_FAILED = 'failed';\n\nfunction FragmentModel(config) {\n\n    config = config || {};\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const eventBus = EventBus(context).getInstance();\n    const metricsModel = config.metricsModel;\n    const fragmentLoader = config.fragmentLoader;\n\n    let instance,\n        streamProcessor,\n        executedRequests,\n        loadingRequests;\n\n    function setup() {\n        resetInitialSettings();\n        eventBus.on(Events.LOADING_COMPLETED, onLoadingCompleted, instance);\n        eventBus.on(Events.LOADING_ABANDONED, onLoadingAborted, instance);\n    }\n\n    function setStreamProcessor(value) {\n        streamProcessor = value;\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function isFragmentLoaded(request) {\n        const isEqualUrl = function (req1, req2) {\n            return (req1.url === req2.url);\n        };\n\n        const isEqualComplete = function (req1, req2) {\n            return ((req1.action === FragmentRequest.ACTION_COMPLETE) && (req1.action === req2.action));\n        };\n\n        const isEqualMedia = function (req1, req2) {\n            return !isNaN(req1.index) && (req1.startTime === req2.startTime) && (req1.adaptationIndex === req2.adaptationIndex);\n        };\n\n        const isEqualInit = function (req1, req2) {\n            return isNaN(req1.index) && isNaN(req2.index) && (req1.quality === req2.quality);\n        };\n\n        const check = function (requests) {\n            let isLoaded = false;\n            requests.some(req => {\n                if ( isEqualUrl(request,req) && (isEqualMedia(request, req) || isEqualInit(request, req) || isEqualComplete(request, req))) {\n                    isLoaded = true;\n                    return isLoaded;\n                }\n            });\n            return isLoaded;\n        };\n\n        if (!request) {\n            return false;\n        }\n\n        return check(executedRequests);\n    }\n\n    function isFragmentLoadedOrPending(request) {\n        let isLoaded = false;\n        let i = 0;\n        let req;\n\n        // First, check if the fragment has already been loaded\n        isLoaded = isFragmentLoaded(request);\n\n        // Then, check if the fragment is about to be loeaded\n        if (!isLoaded) {\n            for (i = 0; i < loadingRequests.length; i++) {\n                req = loadingRequests[i];\n                if ((request.url === req.url) && (request.startTime === req.startTime)) {\n                    isLoaded = true;\n                }\n            }\n        }\n\n        return isLoaded;\n    }\n\n    /**\n     *\n     * Gets an array of {@link FragmentRequest} objects\n     *\n     * @param {Object} filter The object with properties by which the method filters the requests to be returned.\n     *  the only mandatory property is state, which must be a value from\n     *  other properties should match the properties of {@link FragmentRequest}. E.g.:\n     *  getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, quality: 0}) - returns\n     *  all the requests from executedRequests array where requests.quality = filter.quality\n     *\n     * @returns {Array}\n     * @memberof FragmentModel#\n     */\n    function getRequests(filter) {\n        const states = filter ? filter.state instanceof Array ? filter.state : [filter.state] : [];\n\n        let filteredRequests = [];\n        states.forEach(state => {\n            const requests = getRequestsForState(state);\n            filteredRequests = filteredRequests.concat(filterRequests(requests, filter));\n        });\n\n        return filteredRequests;\n    }\n\n    function getRequestThreshold(req) {\n        return isNaN(req.duration) ? 0.25 : req.duration / 8;\n    }\n\n    function removeExecutedRequestsBeforeTime(time) {\n        executedRequests = executedRequests.filter(req => {\n            const threshold = getRequestThreshold(req);\n            return isNaN(req.startTime) || time !== undefined ? req.startTime >= time - threshold : false;\n        });\n    }\n\n    function removeExecutedRequestsInTimeRange(start, end) {\n        if (end <= start + 0.5) {\n            return;\n        }\n\n        executedRequests = executedRequests.filter(req => {\n            const threshold = getRequestThreshold(req);\n            return (isNaN(req.startTime) || req.startTime >= (end - threshold)) ||\n                (isNaN(req.duration) || (req.startTime + req.duration) <= (start + threshold));\n        });\n    }\n\n    // Remove requests that are not \"represented\" by any of buffered ranges\n    function syncExecutedRequestsWithBufferedRange(bufferedRanges, streamDuration) {\n        if (!bufferedRanges || bufferedRanges.length === 0) {\n            executedRequests = [];\n            return;\n        }\n\n        let start = 0;\n        for (let i = 0, ln = bufferedRanges.length; i < ln; i++) {\n            removeExecutedRequestsInTimeRange(start, bufferedRanges.start(i));\n            start = bufferedRanges.end(i);\n        }\n        if (streamDuration > 0) {\n            removeExecutedRequestsInTimeRange(start, streamDuration);\n        }\n    }\n\n    function abortRequests() {\n        fragmentLoader.abort();\n        loadingRequests = [];\n    }\n\n    function executeRequest(request) {\n        switch (request.action) {\n            case FragmentRequest.ACTION_COMPLETE:\n                executedRequests.push(request);\n                addSchedulingInfoMetrics(request, FRAGMENT_MODEL_EXECUTED);\n                log('[FragmentModel] executeRequest trigger STREAM_COMPLETED');\n                eventBus.trigger(Events.STREAM_COMPLETED, {\n                    request: request,\n                    fragmentModel: this\n                });\n                break;\n            case FragmentRequest.ACTION_DOWNLOAD:\n                addSchedulingInfoMetrics(request, FRAGMENT_MODEL_LOADING);\n                loadingRequests.push(request);\n                loadCurrentFragment(request);\n                break;\n            default:\n                log('Unknown request action.');\n        }\n    }\n\n    function loadCurrentFragment(request) {\n        eventBus.trigger(Events.FRAGMENT_LOADING_STARTED, {\n            sender: instance,\n            request: request\n        });\n        fragmentLoader.load(request);\n    }\n\n    function getRequestForTime(arr, time, threshold) {\n        // loop through the executed requests and pick the one for which the playback interval matches the given time\n        const lastIdx = arr.length - 1;\n        for (let i = lastIdx; i >= 0; i--) {\n            const req = arr[i];\n            const start = req.startTime;\n            const end = start + req.duration;\n            threshold = !isNaN(threshold) ? threshold : getRequestThreshold(req);\n            if ((!isNaN(start) && !isNaN(end) && ((time + threshold) >= start) && ((time - threshold) < end)) || (isNaN(start) && isNaN(time))) {\n                return req;\n            }\n        }\n        return null;\n    }\n\n    function filterRequests(arr, filter) {\n        // for time use a specific filtration function\n        if (filter.hasOwnProperty('time')) {\n            return [getRequestForTime(arr, filter.time, filter.threshold)];\n        }\n\n        return arr.filter(request => {\n            for (const prop in filter) {\n                if (prop === 'state') continue;\n                if (filter.hasOwnProperty(prop) && request[prop] != filter[prop]) return false;\n            }\n\n            return true;\n        });\n    }\n\n    function getRequestsForState(state) {\n        let requests;\n        switch (state) {\n            case FRAGMENT_MODEL_LOADING:\n                requests = loadingRequests;\n                break;\n            case FRAGMENT_MODEL_EXECUTED:\n                requests = executedRequests;\n                break;\n            default:\n                requests = [];\n        }\n        return requests;\n    }\n\n    function addSchedulingInfoMetrics(request, state) {\n        metricsModel.addSchedulingInfo(\n            request.mediaType,\n            new Date(),\n            request.type,\n            request.startTime,\n            request.availabilityStartTime,\n            request.duration,\n            request.quality,\n            request.range,\n            state);\n\n        metricsModel.addRequestsQueue(request.mediaType, loadingRequests, executedRequests);\n    }\n\n    function onLoadingCompleted(e) {\n        if (e.sender !== fragmentLoader) return;\n\n        loadingRequests.splice(loadingRequests.indexOf(e.request), 1);\n\n        if (e.response && !e.error) {\n            executedRequests.push(e.request);\n        }\n\n        addSchedulingInfoMetrics(e.request, e.error ? FRAGMENT_MODEL_FAILED : FRAGMENT_MODEL_EXECUTED);\n\n        eventBus.trigger(Events.FRAGMENT_LOADING_COMPLETED, {\n            request: e.request,\n            response: e.response,\n            error: e.error,\n            sender: this\n        });\n    }\n\n    function onLoadingAborted(e) {\n        if (e.sender !== fragmentLoader) return;\n\n        eventBus.trigger(Events.FRAGMENT_LOADING_ABANDONED, {streamProcessor: this.getStreamProcessor(), request: e.request, mediaType: e.mediaType});\n    }\n\n    function resetInitialSettings() {\n        executedRequests = [];\n        loadingRequests = [];\n    }\n\n    function reset() {\n        eventBus.off(Events.LOADING_COMPLETED, onLoadingCompleted, this);\n        eventBus.off(Events.LOADING_ABANDONED, onLoadingAborted, this);\n\n        if (fragmentLoader) {\n            fragmentLoader.reset();\n        }\n        resetInitialSettings();\n    }\n\n    function addExecutedRequest(request) {\n        executedRequests.push(request);\n    }\n\n    instance = {\n        setStreamProcessor: setStreamProcessor,\n        getStreamProcessor: getStreamProcessor,\n        getRequests: getRequests,\n        isFragmentLoaded: isFragmentLoaded,\n        isFragmentLoadedOrPending: isFragmentLoadedOrPending,\n        removeExecutedRequestsBeforeTime: removeExecutedRequestsBeforeTime,\n        syncExecutedRequestsWithBufferedRange: syncExecutedRequestsWithBufferedRange,\n        abortRequests: abortRequests,\n        executeRequest: executeRequest,\n        reset: reset,\n        addExecutedRequest: addExecutedRequest\n    };\n\n    setup();\n    return instance;\n}\n\nFragmentModel.__dashjs_factory_name = 'FragmentModel';\nconst factory = FactoryMaker.getClassFactory(FragmentModel);\nfactory.FRAGMENT_MODEL_LOADING = FRAGMENT_MODEL_LOADING;\nfactory.FRAGMENT_MODEL_EXECUTED = FRAGMENT_MODEL_EXECUTED;\nfactory.FRAGMENT_MODEL_CANCELED = FRAGMENT_MODEL_CANCELED;\nfactory.FRAGMENT_MODEL_FAILED = FRAGMENT_MODEL_FAILED;\nFactoryMaker.updateClassFactory(FragmentModel.__dashjs_factory_name, factory);\nexport default factory;\n"]}