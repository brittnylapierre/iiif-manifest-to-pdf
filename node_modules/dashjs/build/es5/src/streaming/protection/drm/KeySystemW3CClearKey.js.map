{"version":3,"sources":["../../../../../../src/streaming/protection/drm/KeySystemW3CClearKey.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;uLA+BoB,eAAe,mFACR,sBAAsB,iGACpB,qBAAqB,6GAClB,qCAAqC,2FAErE,IAAM,IAAI,CAAG,sCAAsC,CAAC,AACpD,IAAM,YAAY,CAAG,0CAAoB,uBAAuB,CAAC,AACjE,IAAM,WAAW,CAAG,WAAW,GAAG,IAAI,CAAC,AAEvC,SAAS,oBAAoB,CAAC,MAAM,CAAE,CAClC,IAAI,QAAQ,UAAA,CAAC,AACb,IAAM,MAAM,CAAG,MAAM,CAAC,MAAM,CAAC,AAC7B,IAAM,GAAG,CAAG,MAAM,CAAC,GAAG,CAAC;;;;;;;;;OAWvB,SAAS,8BAA8B,CAAC,cAAc,CAAE,OAAO,CAAE,CAC7D,IAAI,WAAW,CAAG,IAAI,CAAC,AACvB,GAAI,cAAc,CAAE;;AAGhB,IAAM,OAAO,CAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,AACrF,IAAM,QAAQ,CAAG,EAAE,CAAC,AACpB,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAE,CAAC,EAAE,EAAE,CAC1C,IAAM,UAAU,CAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AACnC,IAAM,QAAQ,CAAG,AAAC,cAAc,CAAC,SAAS,IAAI,cAAc,CAAC,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,CAAI,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,CAAG,IAAI,CAAC,AACjJ,GAAI,CAAC,QAAQ,CAAE,CACX,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,UAAU,GAAG,iBAAiB,CAAC,CAAC,CAC7E;AAED,QAAQ,CAAC,IAAI,CAAC,2BAAY,UAAU,CAAE,QAAQ,CAAC,CAAC,CAAC,CACpD,AACD,WAAW,GAAG,kCAAmB,QAAQ,CAAC,CAAC,AAE3C,GAAG,CAAC,oKAAoK,CAAC,CAAC,CAC7K,AACD,OAAO,WAAW,CAAC,CACtB,AAED,SAAS,WAAW,CAAC,EAAE,CAAE,CACrB,OAAO,8BAAiB,kCAAkC,CAAC,EAAE,CAAE,MAAM,CAAC,CAAC,CAC1E,AAED,SAAS,4BAA4B,cAAc,CAC/C,OAAO,IAAI,CAAC,CACf,AAED,SAAS,4BAA4B,CAAC,OAAO,CAAE,CAC3C,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAClC,AAED,SAAS,+BAA+B,eAAe,CACnD,OAAO,IAAI,CAAC,CACf,AAED,SAAS,UAAU,EAAG,CAClB,OAAO,IAAI,CAAC,CACf,AAED,QAAQ,GAAG,CACP,IAAI,CAAE,IAAI,CACV,WAAW,CAAE,WAAW,CACxB,YAAY,CAAE,YAAY,CAC1B,WAAW,CAAE,WAAW,CACxB,4BAA4B,CAAE,4BAA4B,CAC1D,4BAA4B,CAAE,4BAA4B,CAC1D,+BAA+B,CAAE,+BAA+B,CAChE,UAAU,CAAE,UAAU,CACtB,8BAA8B,CAAE,8BAA8B,CACjE,CAAC,AAEF,OAAO,QAAQ,CAAC,CACnB,AAED,oBAAoB,CAAC,qBAAqB,GAAG,sBAAsB,CAAC,qBACrD,MAAM,CAAC,YAAY,CAAC,mBAAmB,CAAC,oBAAoB,CAAC","file":"KeySystemW3CClearKey.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemW3CClearKey(config) {\n    let instance;\n    const BASE64 = config.BASE64;\n    const log = config.log;\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionData} protectionData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        let clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            const keyPairs = [];\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\n                const clearkeyID = jsonMsg.kids[i];\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n\n            log('Warning: ClearKey schemeIdURI is using W3C Common PSSH systemID (1077efec-c0b2-4d02-ace3-3c1e52e2fb4b) in Content Protection. See DASH-IF IOP v4.1 section 7.6.2.4');\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    function getCDMData() {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getCDMData: getCDMData,\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemW3CClearKey.__dashjs_factory_name = 'KeySystemW3CClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemW3CClearKey); /* jshint ignore:line */\n\n"]}