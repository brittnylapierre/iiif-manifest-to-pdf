{"version":3,"sources":["../../../../../../src/streaming/protection/drm/KeySystemWidevine.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8LAsC6B,qBAAqB,6GAClB,qCAAqC,2FAErE,IAAM,IAAI,CAAG,sCAAsC,CAAC,AACpD,IAAM,YAAY,CAAG,0CAAoB,uBAAuB,CAAC,AACjE,IAAM,WAAW,CAAG,WAAW,GAAG,IAAI,CAAC,AAEvC,SAAS,iBAAiB,CAAC,MAAM,CAAE,CAE/B,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,AACtB,IAAI,QAAQ,UAAA,CAAC,AACb,IAAI,QAAQ,CAAG,IAAI,CAAC,AACpB,IAAM,MAAM,CAAG,MAAM,CAAC,MAAM,CAAC,AAE7B,SAAS,IAAI,CAAC,cAAc,CAAE,CAC1B,GAAI,cAAc,CAAE,CAChB,QAAQ,GAAG,cAAc,CAAC,CAC7B,CACJ,AAED,SAAS,WAAW,CAAC,EAAE,CAAE,CACrB,OAAO,8BAAiB,kCAAkC,CAAC,EAAE,CAAE,MAAM,CAAC,CAAC,CAC1E,AAED,SAAS,4BAA4B,cAAgB,CACjD,OAAO,IAAI,CAAC,CACf,AAED,SAAS,4BAA4B,CAAC,OAAO,CAAE,CAC3C,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAClC,AAED,SAAS,+BAA+B,eAAiB,CACrD,OAAO,IAAI,CAAC,CACf,AAED,SAAS,UAAU,EAAG,CAClB,OAAO,IAAI,CAAC,CACf,AAED,QAAQ,GAAG,CACP,IAAI,CAAE,IAAI,CACV,WAAW,CAAE,WAAW,CACxB,YAAY,CAAE,YAAY,CAC1B,IAAI,CAAE,IAAI,CACV,WAAW,CAAE,WAAW,CACxB,4BAA4B,CAAE,4BAA4B,CAC1D,4BAA4B,CAAE,4BAA4B,CAC1D,+BAA+B,CAAE,+BAA+B,CAChE,UAAU,CAAE,UAAU,CACzB,CAAC,AAEF,OAAO,QAAQ,CAAC,CACnB,AAED,iBAAiB,CAAC,qBAAqB,GAAG,mBAAmB,CAAC,qBAC/C,MAAM,CAAC,YAAY,CAAC,mBAAmB,CAAC,iBAAiB,CAAC","file":"KeySystemWidevine.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Google Widevine DRM\n *\n * @class\n * @implements MediaPlayer.dependencies.protection.KeySystem\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\nconst systemString = ProtectionConstants.WIDEVINE_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemWidevine(config) {\n\n    config = config || {};\n    let instance;\n    let protData = null;\n    const BASE64 = config.BASE64;\n\n    function init(protectionData) {\n        if (protectionData) {\n            protData = protectionData;\n        }\n    }\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n    }\n\n    function getRequestHeadersFromMessage( /*message*/ ) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData( /*initData*/ ) {\n        return null;\n    }\n\n    function getCDMData() {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        init: init,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getCDMData: getCDMData\n    };\n\n    return instance;\n}\n\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine); /* jshint ignore:line */\n"]}