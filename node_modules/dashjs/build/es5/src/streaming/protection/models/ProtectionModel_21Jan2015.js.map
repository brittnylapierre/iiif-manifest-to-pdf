{"version":3,"sources":["../../../../../../src/streaming/protection/models/ProtectionModel_21Jan2015.js"],"names":[],"mappings":"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","file":"ProtectionModel_21Jan2015.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Most recent EME implementation\n *\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport KeyError from '../vo/KeyError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nfunction ProtectionModel_21Jan2015(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const log = config.log;\n\n    let instance,\n        keySystem,\n        videoElement,\n        mediaKeys,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        keySystem = null;\n        videoElement = null;\n        mediaKeys = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        const numSessions = sessions.length;\n        let session;\n\n        if (numSessions !== 0) {\n            // Called when we are done closing a session.  Success or fail\n            const done = function (session) {\n                removeSession(session);\n                if (sessions.length === 0) {\n                    if (videoElement) {\n                        videoElement.removeEventListener('encrypted', eventHandler);\n                        videoElement.setMediaKeys(null).then(function () {\n                            eventBus.trigger(events.TEARDOWN_COMPLETE);\n                        });\n                    } else {\n                        eventBus.trigger(events.TEARDOWN_COMPLETE);\n                    }\n                }\n            };\n            for (let i = 0; i < numSessions; i++) {\n                session = sessions[i];\n                (function (s) {\n                    // Override closed promise resolver\n                    session.session.closed.then(function () {\n                        done(s);\n                    });\n                    // Close the session and handle errors, otherwise promise\n                    // resolver above will be called\n                    closeKeySessionInternal(session).catch(function () {\n                        done(s);\n                    });\n\n                })(session);\n            }\n        } else {\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        requestKeySystemAccessInternal(ksConfigurations, 0);\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystemAccess.mksa.createMediaKeys().then(function (mkeys) {\n            keySystem = keySystemAccess.keySystem;\n            mediaKeys = mkeys;\n            if (videoElement) {\n                videoElement.setMediaKeys(mediaKeys).then(function () {\n                    eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\n                });\n            } else {\n                eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\n            }\n\n        }).catch(function () {\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n        });\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener('encrypted', eventHandler);\n            if (videoElement.setMediaKeys) {\n                videoElement.setMediaKeys(null);\n            }\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener('encrypted', eventHandler);\n            if (videoElement.setMediaKeys && mediaKeys) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n        }\n    }\n\n    function setServerCertificate(serverCertificate) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not set server certificate until you have selected a key system');\n        }\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\n            log('DRM: License server certificate successfully updated.');\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED);\n        }).catch(function (error) {\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED, {error: 'Error updating server certificate -- ' + error.name});\n        });\n    }\n\n    function createKeySession(initData, protData, sessionType) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        const session = mediaKeys.createSession(sessionType);\n        const sessionToken = createSessionToken(session, initData, sessionType);\n        const ks = this.getKeySystem();\n\n        // Generate initial key request.\n        // keyids type is used for clearkey when keys are provided directly in the protection data and then request to a license server is not needed\n        const dataType = ks.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING && protData && protData.clearkeys ? 'keyids' : 'cenc';\n        session.generateRequest(dataType, initData).then(function () {\n            log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(events.KEY_SESSION_CREATED, {data: sessionToken});\n        }).catch(function (error) {\n            // TODO: Better error string\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CREATED, {data: null, error: 'Error generating key request -- ' + error.name});\n        });\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const session = sessionToken.session;\n\n        // Send our request to the key session\n        if (protectionKeyController.isClearKey(keySystem)) {\n            message = message.toJWK();\n        }\n        session.update(message).catch(function (error) {\n            eventBus.trigger(events.KEY_ERROR, {data: new KeyError(sessionToken, 'Error sending update() message! ' + error.name)});\n        });\n    }\n\n    function loadKeySession(sessionID) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not load sessions until you have selected a key system');\n        }\n\n        const session = mediaKeys.createSession();\n\n        // Load persisted session data into our newly created session object\n        session.load(sessionID).then(function (success) {\n            if (success) {\n                const sessionToken = createSessionToken(session);\n                log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n                eventBus.trigger(events.KEY_SESSION_CREATED, {data: sessionToken});\n            } else {\n                eventBus.trigger(events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session! Invalid Session ID (' + sessionID + ')'});\n            }\n        }).catch(function (error) {\n            eventBus.trigger(events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session (' + sessionID + ')! ' + error.name});\n        });\n    }\n\n    function removeKeySession(sessionToken) {\n        const session = sessionToken.session;\n\n        session.remove().then(function () {\n            log('DRM: Session removed.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {data: sessionToken.getSessionID()});\n        }, function (error) {\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {data: null, error: 'Error removing session (' + sessionToken.getSessionID() + '). ' + error.name});\n\n        });\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the key session\n        closeKeySessionInternal(sessionToken).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {data: null, error: 'Error closing session (' + sessionToken.getSessionID() + ') ' + error.name});\n        });\n    }\n\n    function requestKeySystemAccessInternal(ksConfigurations, idx) {\n\n        if (navigator.requestMediaKeySystemAccess === undefined ||\n            typeof navigator.requestMediaKeySystemAccess !== 'function') {\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Insecure origins are not allowed'});\n            return;\n        }\n\n        (function (i) {\n            const keySystem = ksConfigurations[i].ks;\n            const configs = ksConfigurations[i].configs;\n            navigator.requestMediaKeySystemAccess(keySystem.systemString, configs).then(function (mediaKeySystemAccess) {\n                // Chrome 40 does not currently implement MediaKeySystemAccess.getConfiguration()\n                const configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\n                        mediaKeySystemAccess.getConfiguration() : null;\n                const keySystemAccess = new KeySystemAccess(keySystem, configuration);\n                keySystemAccess.mksa = mediaKeySystemAccess;\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {data: keySystemAccess});\n\n            }).catch(function (error) {\n                if (++i < ksConfigurations.length) {\n                    requestKeySystemAccessInternal(ksConfigurations, i);\n                } else {\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! ' + error.message});\n                }\n            });\n        })(idx);\n    }\n\n    function closeKeySessionInternal(sessionToken) {\n        const session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener('keystatuseschange', sessionToken);\n        session.removeEventListener('message', sessionToken);\n\n        // Send our request to the key session\n        return session.close();\n    }\n\n    // This is our main event handler for all desired HTMLMediaElement events\n    // related to EME.  These events are translated into our API-independent\n    // versions of the same events\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'encrypted':\n                        if (event.initData) {\n                            let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(events.NEED_KEY, {key: new NeedKey(initData, event.initDataType)});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n    function removeSession(token) {\n        // Remove from our session list\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i] === token) {\n                sessions.splice(i,1);\n                break;\n            }\n        }\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(session, initData, sessionType) {\n        const token = { // Implements SessionToken\n            session: session,\n            initData: initData,\n\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'keystatuseschange':\n                        eventBus.trigger(events.KEY_STATUSES_CHANGED, {data: this});\n                        break;\n\n                    case 'message':\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(this, message, undefined, event.messageType)});\n                        break;\n                }\n            },\n\n            getSessionID: function () {\n                return session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return session.expiration;\n            },\n\n            getKeyStatuses: function () {\n                return session.keyStatuses;\n            },\n\n            getSessionType: function () {\n                return sessionType;\n            }\n        };\n\n        // Add all event listeners\n        session.addEventListener('keystatuseschange', token);\n        session.addEventListener('message', token);\n\n        // Register callback for session closed Promise\n        session.closed.then(function () {\n            removeSession(token);\n            log('DRM: Session closed.  SessionID = ' + token.getSessionID());\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {data: token.getSessionID()});\n        });\n\n        // Add to our session list\n        sessions.push(token);\n\n        return token;\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        setServerCertificate: setServerCertificate,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        closeKeySession: closeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_21Jan2015); /* jshint ignore:line */\n"]}