{"version":3,"sources":["../../../../../../src/streaming/protection/models/ProtectionModel_3Feb2014.js"],"names":[],"mappings":"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","file":"ProtectionModel_3Feb2014.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\n *\n * Implemented by Internet Explorer 11 (Windows 8.1)\n *\n * @implements ProtectionModel\n * @class\n */\n\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport KeyError from '../vo/KeyError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\n\nfunction ProtectionModel_3Feb2014(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    let log = config.log;\n    let api = config.api;\n\n\n    let instance,\n        videoElement,\n        keySystem,\n        mediaKeys,\n        keySystemAccess,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        videoElement = null;\n        keySystem = null;\n        mediaKeys = null;\n        keySystemAccess = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        try {\n            for (let i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            if (videoElement) {\n                videoElement.removeEventListener(api.needkey, eventHandler);\n            }\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\n        } catch (error) {\n            eventBus.trigger(events.TEARDOWN_COMPLETE, {error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message});\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        let retVal = [];\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        let found = false;\n        for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            let systemString = ksConfigurations[ksIdx].ks.systemString;\n            let configs = ksConfigurations[ksIdx].configs;\n            let supportedAudio = null;\n            let supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (let configIdx = 0; configIdx < configs.length; configIdx++) {\n                let audios = configs[configIdx].audioCapabilities;\n                let videos = configs[configIdx].videoCapabilities;\n\n                // Look for supported audio container/codecs\n                if (audios && audios.length !== 0) {\n                    supportedAudio = []; // Indicates that we have a requested audio config\n                    for (let audioIdx = 0; audioIdx < audios.length; audioIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\n                            supportedAudio.push(audios[audioIdx]);\n                        }\n                    }\n                }\n\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                let ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                let ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {data: new KeySystemAccess(ks, ksConfig)});\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\n        }\n    }\n\n    function selectKeySystem(ksAccess) {\n        try {\n            mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\n            keySystem = ksAccess.keySystem;\n            keySystemAccess = ksAccess;\n            if (videoElement) {\n                setMediaKeys();\n            }\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\n        } catch (error) {\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n        }\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener(api.needkey, eventHandler);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.needkey, eventHandler);\n            if (mediaKeys) {\n                setMediaKeys();\n            }\n        }\n    }\n\n    function createKeySession(initData, protData, sessionType, cdmData) {\n\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Use the first video capability for the contentType.\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\n\n        // If player is trying to playback Audio only stream - don't error out.\n        let capabilities = null;\n\n        if (keySystemAccess.ksConfiguration.videoCapabilities !== null && keySystemAccess.ksConfiguration.videoCapabilities.length > 0)\n          capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\n\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities !== null && keySystemAccess.ksConfiguration.audioCapabilities.length > 0)\n          capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\n\n        if (capabilities === null)\n          throw new Error('Can not create sessions for unknown content types.');\n\n        let contentType = capabilities.contentType;\n        let session = mediaKeys.createSession(contentType, new Uint8Array(initData), cdmData ? new Uint8Array(cdmData) : null);\n        let sessionToken = createSessionToken(session, initData);\n\n        // Add all event listeners\n        session.addEventListener(api.error, sessionToken);\n        session.addEventListener(api.message, sessionToken);\n        session.addEventListener(api.ready, sessionToken);\n        session.addEventListener(api.close, sessionToken);\n\n        // Add to our session list\n        sessions.push(sessionToken);\n        log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n        eventBus.trigger(events.KEY_SESSION_CREATED, {data: sessionToken});\n    }\n\n    function updateKeySession(sessionToken, message) {\n\n        let session = sessionToken.session;\n\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the key session\n            session.update(new Uint8Array(message));\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            session.update(new Uint8Array(message.toJWK()));\n        }\n    }\n\n    /**\n     * Close the given session and release all associated keys.  Following\n     * this call, the sessionToken becomes invalid\n     *\n     * @param {Object} sessionToken - the session token\n     */\n    function closeKeySession(sessionToken) {\n\n        let session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener(api.error, sessionToken);\n        session.removeEventListener(api.message, sessionToken);\n        session.removeEventListener(api.ready, sessionToken);\n        session.removeEventListener(api.close, sessionToken);\n\n        // Remove from our session list\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i] === sessionToken) {\n                sessions.splice(i,1);\n                break;\n            }\n        }\n\n        // Send our request to the key session\n        session[api.release]();\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.needkey:\n                        if (event.initData) {\n                            let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    // IE11 does not let you set MediaKeys until it has entered a certain\n    // readyState, so we need this logic to ensure we don't set the keys\n    // too early\n    function setMediaKeys() {\n        let boundDoSetKeys = null;\n        const doSetKeys = function () {\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\n            videoElement[api.setMediaKeys](mediaKeys);\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\n        };\n        if (videoElement.readyState >= 1) {\n            doSetKeys();\n        } else {\n            boundDoSetKeys = doSetKeys.bind(this);\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\n        }\n\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(keySession, initData) {\n        return {\n            // Implements SessionToken\n            session: keySession,\n            initData: initData,\n\n            getSessionID: function () {\n                return this.session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return NaN;\n            },\n\n            getSessionType: function () {\n                return 'temporary';\n            },\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.error:\n                        let errorStr = 'KeyError'; // TODO: Make better string from event\n                        eventBus.trigger(events.KEY_ERROR, { data: new KeyError(this, errorStr) });\n                        break;\n                    case api.message:\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\n                        break;\n                    case api.ready:\n                        log('DRM: Key added.');\n                        eventBus.trigger(events.KEY_ADDED);\n                        break;\n\n                    case api.close:\n                        log('DRM: Session closed.  SessionID = ' + this.getSessionID());\n                        eventBus.trigger(events.KEY_SESSION_CLOSED, { data: this.getSessionID() });\n                        break;\n                }\n            }\n        };\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_3Feb2014); /* jshint ignore:line */\n"]}