{"version":3,"sources":["../../../../../../src/streaming/protection/servers/ClearKey.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uLAwCoB,eAAe,mFACR,sBAAsB,mEAEjD,SAAS,QAAQ,EAAG,CAEhB,IAAI,QAAQ,UAAA,CAAC,AAEb,SAAS,uBAAuB,CAAC,GAAG,CAAE,OAAO,mBAAmB;AAE5D,IAAM,OAAO,CAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,AACrF,GAAG,IAAI,IAAI,CAAC,AACZ,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAE,CAAC,EAAE,EAAE,CAC1C,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAChC,AACD,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,AACvC,OAAO,GAAG,CAAC,CACd,AAED,SAAS,aAAa,kBAAkB,CACpC,OAAO,KAAK,CAAC,CAChB,AAED,SAAS,eAAe,mBAAmB,CACvC,OAAO,MAAM,CAAC,CACjB,AAED,SAAS,iBAAiB,CAAC,cAAc,iCAAiC,CACtE,GAAI,CAAC,cAAc,CAAC,cAAc,CAAC,MAAM,CAAC,CAAE,CACxC,OAAO,IAAI,CAAC,CACf,AACD,IAAI,QAAQ,CAAG,EAAE,CAAC,AAClB,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,MAAM,CAAE,CAAC,EAAE,EAAE,CACjD,IAAI,OAAO,CAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AACrC,IAAI,KAAK,CAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,AAC1C,IAAI,GAAG,CAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,AAEtC,QAAQ,CAAC,IAAI,CAAC,2BAAY,KAAK,CAAE,GAAG,CAAC,CAAC,CAAC,CAC1C,AACD,OAAO,kCAAmB,QAAQ,CAAC,CAAC,CACvC,AAED,SAAS,gBAAgB,CAAC,cAAc,iCAAiC,CACrE,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAC1E,AAED,QAAQ,GAAG,CACP,uBAAuB,CAAE,uBAAuB,CAChD,aAAa,CAAE,aAAa,CAC5B,eAAe,CAAE,eAAe,CAChC,iBAAiB,CAAE,iBAAiB,CACpC,gBAAgB,CAAE,gBAAgB,CACrC,CAAC,AAEF,OAAO,QAAQ,CAAC,CACnB,AAED,QAAQ,CAAC,qBAAqB,GAAG,UAAU,CAAC,qBAC7B,MAAM,CAAC,YAAY,CAAC,mBAAmB,CAAC,QAAQ,CAAC","file":"ClearKey.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CableLabs ClearKey license server implementation\n *\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\n *\n * @implements LicenseServer\n * @class\n */\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\n\nfunction ClearKey() {\n\n    let instance;\n\n    function getServerURLFromMessage(url, message/*, messageType*/) {\n        // Build ClearKey server query string\n        const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n        url += '/?';\n        for (let i = 0; i < jsonMsg.kids.length; i++) {\n            url += jsonMsg.kids[i] + '&';\n        }\n        url = url.substring(0, url.length - 1);\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'GET';\n    }\n\n    function getResponseType(/*keySystemStr*/) {\n        return 'json';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        if (!serverResponse.hasOwnProperty('keys')) {\n            return null;\n        }\n        let keyPairs = [];\n        for (let i = 0; i < serverResponse.keys.length; i++) {\n            let keypair = serverResponse.keys[i];\n            let keyid = keypair.kid.replace(/=/g, '');\n            let key = keypair.k.replace(/=/g, '');\n\n            keyPairs.push(new KeyPair(keyid, key));\n        }\n        return new ClearKeyKeySet(keyPairs);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(ClearKey); /* jshint ignore:line */"]}