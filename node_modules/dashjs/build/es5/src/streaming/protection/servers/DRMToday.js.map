{"version":3,"sources":["../../../../../../src/streaming/protection/servers/DRMToday.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0MAsCgC,qCAAqC,2FAErE,SAAS,QAAQ,CAAC,MAAM,CAAE,CAEtB,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,AACtB,IAAM,MAAM,CAAG,MAAM,CAAC,MAAM,CAAC,AAE7B,IAAM,UAAU,CAAG,EAAE,CAAC,AACtB,UAAU,CAAC,0CAAoB,uBAAuB,CAAC,GAAG,CACtD,YAAY,CAAE,MAAM,CACpB,iBAAiB,CAAE,2BAAU,QAAQ,CAAE,CACnC,OAAO,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAC/C,CACD,gBAAgB,CAAE,0BAAU,QAAQ,CAAE,CAClC,OAAO,QAAQ,CAAC,CACnB,CACJ,CAAC,AACF,UAAU,CAAC,0CAAoB,wBAAwB,CAAC,GAAG,CACvD,YAAY,CAAE,aAAa,CAC3B,iBAAiB,CAAE,2BAAU,QAAQ,CAAE,CACnC,OAAO,QAAQ,CAAC,CACnB,CACD,gBAAgB,CAAE,0BAAU,QAAQ,CAAE,CAClC,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CACpE,CACJ,CAAC,AAEF,IAAI,QAAQ,UAAA,CAAC,AAEb,SAAS,WAAW,EAAG,CACnB,GAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,CAAE,CAClD,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAClD,CACJ,AAED,SAAS,uBAAuB,CAAC,GAAG,4BAA6B,CAC7D,OAAO,GAAG,CAAC,CACd,AAED,SAAS,aAAa,kBAAkB,CACpC,OAAO,MAAM,CAAC,CACjB,AAED,SAAS,eAAe,CAAC,YAAY,mBAAmB,CACpD,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,CAChD,AAED,SAAS,iBAAiB,CAAC,cAAc,CAAE,YAAY,mBAAmB,CACtE,WAAW,EAAE,CAAC,AACd,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC,CACrE,AAED,SAAS,gBAAgB,CAAC,cAAc,CAAE,YAAY,mBAAmB,CACrE,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,CACpE,AAED,QAAQ,GAAG,CACP,uBAAuB,CAAE,uBAAuB,CAChD,aAAa,CAAE,aAAa,CAC5B,eAAe,CAAE,eAAe,CAChC,iBAAiB,CAAE,iBAAiB,CACpC,gBAAgB,CAAE,gBAAgB,CACrC,CAAC,AAEF,OAAO,QAAQ,CAAC,CACnB,AAED,QAAQ,CAAC,qBAAqB,GAAG,UAAU,CAAC,qBAC7B,MAAM,CAAC,YAAY,CAAC,mBAAmB,CAAC,QAAQ,CAAC","file":"DRMToday.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CastLabs DRMToday License Server implementation\n *\n * @implements LicenseServer\n * @class\n */\n\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nfunction DRMToday(config) {\n\n    config = config || {};\n    const BASE64 = config.BASE64;\n\n    const keySystems = {};\n    keySystems[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = {\n        responseType: 'json',\n        getLicenseMessage: function (response) {\n            return BASE64.decodeArray(response.license);\n        },\n        getErrorResponse: function (response) {\n            return response;\n        }\n    };\n    keySystems[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = {\n        responseType: 'arraybuffer',\n        getLicenseMessage: function (response) {\n            return response;\n        },\n        getErrorResponse: function (response) {\n            return String.fromCharCode.apply(null, new Uint8Array(response));\n        }\n    };\n\n    let instance;\n\n    function checkConfig() {\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].responseType;\n    }\n\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\n        checkConfig();\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\n    }\n\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nDRMToday.__dashjs_factory_name = 'DRMToday';\nexport default dashjs.FactoryMaker.getSingletonFactory(DRMToday); /* jshint ignore:line */"]}