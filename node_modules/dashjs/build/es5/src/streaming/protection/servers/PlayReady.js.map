{"version":3,"sources":["../../../../../../src/streaming/protection/servers/PlayReady.js"],"names":[],"mappings":"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","file":"PlayReady.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global escape: true */\n\n/**\n * Microsoft PlayReady Test License Server\n *\n * For testing content that uses the PlayReady test server at\n *\n * @implements LicenseServer\n * @class\n */\n\nfunction PlayReady() {\n\n    let instance;\n\n    const soap = 'http://schemas.xmlsoap.org/soap/envelope/';\n\n    function uintToString(arrayBuffer) {\n        const encodedString = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n\n    function parseServerResponse(serverResponse) {\n        if (window.DOMParser) {\n            const stringResponse = uintToString(serverResponse);\n            const parser = new window.DOMParser();\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\n\n            if (fault) {\n                return null;\n            }\n        }\n        return serverResponse;\n    }\n\n    function parseErrorResponse(serverResponse) {\n        let faultstring = '';\n        let statusCode = '';\n        let message = '';\n        let idStart = -1;\n        let idEnd = -1;\n\n        if (window.DOMParser) {\n            const stringResponse = uintToString(serverResponse);\n            const parser = new window.DOMParser();\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\n            const detail = fault ? fault.getElementsByTagName('detail')[0] : null;\n            const exception = detail ? detail.getElementsByTagName('Exception')[0] : null;\n            let node = null;\n\n            if (fault === null) {\n                return stringResponse;\n            }\n\n            node = fault.getElementsByTagName('faultstring')[0].firstChild;\n            faultstring = node ? node.nodeValue : null;\n\n            if (exception !== null) {\n                node = exception.getElementsByTagName('StatusCode')[0];\n                statusCode = node ? node.firstChild.nodeValue : null;\n                node = exception.getElementsByTagName('Message')[0];\n                message = node ? node.firstChild.nodeValue : null;\n                idStart = message ? message.lastIndexOf('[') + 1 : -1;\n                idEnd = message ? message.indexOf(']') : -1;\n                message = message ? message.substring(idStart, idEnd) : '';\n            }\n        }\n\n        let errorString = `code: ${statusCode}, name: ${faultstring}`;\n        if (message) {\n            errorString += `, message: ${message}`;\n        }\n\n        return errorString;\n    }\n\n    function getServerURLFromMessage(url /*, message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr, messageType*/) {\n        return 'arraybuffer';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        return parseServerResponse.call(this, serverResponse);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return parseErrorResponse.call(this, serverResponse);\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nPlayReady.__dashjs_factory_name = 'PlayReady';\nexport default dashjs.FactoryMaker.getSingletonFactory(PlayReady); /* jshint ignore:line */"]}