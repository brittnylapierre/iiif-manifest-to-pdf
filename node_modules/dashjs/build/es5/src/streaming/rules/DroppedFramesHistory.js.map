{"version":3,"sources":["../../../../../src/streaming/rules/DroppedFramesHistory.js"],"names":[],"mappings":"2LACyB,yBAAyB,mEAGlD,SAAS,oBAAoB,EAAG,CAE5B,IAAI,MAAM,CAAG,EAAE,CAAC,AAChB,IAAI,iBAAiB,CAAG,CAAC,CAAC,AAC1B,IAAI,eAAe,CAAG,CAAC,CAAC,AAExB,SAAS,IAAI,CAAC,KAAK,CAAE,eAAe,CAAE,CAClC,IAAI,qBAAqB,CAAG,eAAe,CAAC,kBAAkB,GAAG,iBAAiB,CAAC,AACnF,iBAAiB,GAAG,eAAe,CAAC,kBAAkB,CAAC,AAEvD,IAAI,mBAAmB,CAAG,eAAe,CAAC,gBAAgB,GAAG,eAAe,CAAC,AAC7E,eAAe,GAAG,eAAe,CAAC,gBAAgB,CAAC,AAEnD,GAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAE,CACf,GAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAE,CAChB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAE,qBAAqB,CAAE,gBAAgB,CAAE,mBAAmB,CAAC,CAAC,CACtG,KAAM,CACH,MAAM,CAAC,KAAK,CAAC,CAAC,kBAAkB,IAAI,qBAAqB,CAAC,AAC1D,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,IAAI,mBAAmB,CAAC,CACzD,CACJ,CACJ,AAED,SAAS,sBAAsB,EAAG,CAC9B,OAAO,MAAM,CAAC,CACjB,AAED,SAAS,KAAK,CAAC,eAAe,CAAE,CAC5B,MAAM,GAAG,EAAE,CAAC,AACZ,iBAAiB,GAAG,eAAe,CAAC,kBAAkB,CAAC,AACvD,eAAe,GAAG,eAAe,CAAC,gBAAgB,CAAC,CACtD,AAED,OAAO,CACH,IAAI,CAAE,IAAI,CACV,eAAe,CAAE,sBAAsB,CACvC,KAAK,CAAE,KAAK,CACf,CAAC,CACL,AAED,oBAAoB,CAAC,qBAAqB,GAAG,sBAAsB,CAAC,AACpE,IAAI,OAAO,CAAG,8BAAa,eAAe,CAAC,oBAAoB,CAAC,CAAC,qBAClD,OAAO","file":"DroppedFramesHistory.js","sourcesContent":["\nimport FactoryMaker from '../../core/FactoryMaker';\n\n\nfunction DroppedFramesHistory() {\n\n    let values = [];\n    let lastDroppedFrames = 0;\n    let lastTotalFrames = 0;\n\n    function push(index, playbackQuality) {\n        let intervalDroppedFrames = playbackQuality.droppedVideoFrames - lastDroppedFrames;\n        lastDroppedFrames = playbackQuality.droppedVideoFrames;\n\n        let intervalTotalFrames = playbackQuality.totalVideoFrames - lastTotalFrames;\n        lastTotalFrames = playbackQuality.totalVideoFrames;\n\n        if (!isNaN(index)) {\n            if (!values[index]) {\n                values[index] = {droppedVideoFrames: intervalDroppedFrames, totalVideoFrames: intervalTotalFrames};\n            } else {\n                values[index].droppedVideoFrames += intervalDroppedFrames;\n                values[index].totalVideoFrames += intervalTotalFrames;\n            }\n        }\n    }\n\n    function getDroppedFrameHistory() {\n        return values;\n    }\n\n    function reset(playbackQuality) {\n        values = [];\n        lastDroppedFrames = playbackQuality.droppedVideoFrames;\n        lastTotalFrames = playbackQuality.totalVideoFrames;\n    }\n\n    return {\n        push: push,\n        getFrameHistory: getDroppedFrameHistory,\n        reset: reset\n    };\n}\n\nDroppedFramesHistory.__dashjs_factory_name = 'DroppedFramesHistory';\nlet factory = FactoryMaker.getClassFactory(DroppedFramesHistory);\nexport default factory;\n"]}