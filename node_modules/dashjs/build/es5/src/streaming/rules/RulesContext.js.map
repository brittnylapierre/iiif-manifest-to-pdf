{"version":3,"sources":["../../../../../src/streaming/rules/RulesContext.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;8LA+ByB,yBAAyB,mEAElD,SAAS,YAAY,CAAC,MAAM,CAAE,CAE1B,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,AACtB,IAAI,QAAQ,UAAA,CAAC,AACb,IAAM,aAAa,CAAG,MAAM,CAAC,aAAa,CAAC,AAC3C,IAAM,eAAe,CAAG,MAAM,CAAC,eAAe,CAAC,AAC/C,IAAM,kBAAkB,CAAG,MAAM,CAAC,eAAe,CAAC,4BAA4B,EAAE,CAAC,AACjF,IAAM,aAAa,CAAG,MAAM,CAAC,aAAa,CAAC,AAC3C,IAAM,oBAAoB,CAAG,MAAM,CAAC,oBAAoB,CAAC,AACzD,IAAM,cAAc,CAAG,MAAM,CAAC,cAAc,CAAC,AAC7C,IAAM,kBAAkB,CAAG,MAAM,CAAC,qBAAqB,CAAC,AAExD,SAAS,YAAY,EAAG,CACpB,OAAO,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,CAC5C,AAED,SAAS,aAAa,EAAG,CACrB,OAAO,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC,CAClD,AAED,SAAS,YAAY,EAAG,CACpB,OAAO,kBAAkB,CAAC,SAAS,CAAC,CACvC,AAED,SAAS,qBAAqB,EAAG,CAC7B,OAAO,kBAAkB,CAAC,CAC7B,AAED,SAAS,kBAAkB,EAAG,CAC1B,OAAO,eAAe,CAAC,CAC1B,AAED,SAAS,gBAAgB,EAAG,CACxB,OAAO,aAAa,CAAC,CACxB,AAED,SAAS,gBAAgB,EAAG,CACxB,OAAO,aAAa,CAAC,CACxB,AAED,SAAS,uBAAuB,EAAG,CAC/B,OAAO,oBAAoB,CAAC,CAC/B,AAED,SAAS,iBAAiB,EAAG,CACzB,OAAO,cAAc,CAAC,CACzB,AAED,SAAS,qBAAqB,EAAG,CAC7B,OAAO,kBAAkB,CAAC,CAC7B,AAED,QAAQ,GAAG,CACP,YAAY,CAAE,YAAY,CAC1B,YAAY,CAAE,YAAY,CAC1B,uBAAuB,CAAE,uBAAuB,CAChD,iBAAiB,CAAE,iBAAiB,CACpC,gBAAgB,CAAE,gBAAgB,CAClC,aAAa,CAAE,aAAa,CAC5B,kBAAkB,CAAE,kBAAkB,CACtC,gBAAgB,CAAE,gBAAgB,CAClC,qBAAqB,CAAE,qBAAqB,CAC5C,qBAAqB,CAAE,qBAAqB,CAC/C,CAAC,AAEF,OAAO,QAAQ,CAAC,CACnB,AAED,YAAY,CAAC,qBAAqB,GAAG,cAAc,CAAC,qBACrC,8BAAa,eAAe,CAAC,YAAY,CAAC","file":"RulesContext.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction RulesContext(config) {\n\n    config = config || {};\n    let instance;\n    const abrController = config.abrController;\n    const streamProcessor = config.streamProcessor;\n    const representationInfo = config.streamProcessor.getCurrentRepresentationInfo();\n    const switchHistory = config.switchHistory;\n    const droppedFramesHistory = config.droppedFramesHistory;\n    const currentRequest = config.currentRequest;\n    const bufferOccupancyABR = config.useBufferOccupancyABR;\n\n    function getMediaType() {\n        return representationInfo.mediaInfo.type;\n    }\n\n    function getStreamInfo() {\n        return representationInfo.mediaInfo.streamInfo;\n    }\n\n    function getMediaInfo() {\n        return representationInfo.mediaInfo;\n    }\n\n    function getRepresentationInfo() {\n        return representationInfo;\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function getAbrController() {\n        return abrController;\n    }\n\n    function getSwitchHistory() {\n        return switchHistory;\n    }\n\n    function getDroppedFramesHistory() {\n        return droppedFramesHistory;\n    }\n\n    function getCurrentRequest() {\n        return currentRequest;\n    }\n\n    function useBufferOccupancyABR() {\n        return bufferOccupancyABR;\n    }\n\n    instance = {\n        getMediaType: getMediaType,\n        getMediaInfo: getMediaInfo,\n        getDroppedFramesHistory: getDroppedFramesHistory,\n        getCurrentRequest: getCurrentRequest,\n        getSwitchHistory: getSwitchHistory,\n        getStreamInfo: getStreamInfo,\n        getStreamProcessor: getStreamProcessor,\n        getAbrController: getAbrController,\n        getRepresentationInfo: getRepresentationInfo,\n        useBufferOccupancyABR: useBufferOccupancyABR\n    };\n\n    return instance;\n}\n\nRulesContext.__dashjs_factory_name = 'RulesContext';\nexport default FactoryMaker.getClassFactory(RulesContext);\n"]}