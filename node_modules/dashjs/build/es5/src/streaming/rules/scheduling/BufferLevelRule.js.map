{"version":3,"sources":["../../../../../../src/streaming/rules/scheduling/BufferLevelRule.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;gMA8BsB,2BAA2B,qGACxB,4BAA4B,mEAErD,SAAS,eAAe,CAAC,MAAM,CAAE,CAE7B,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC,AACtB,IAAM,WAAW,CAAG,MAAM,CAAC,WAAW,CAAC,AACvC,IAAM,YAAY,CAAG,MAAM,CAAC,YAAY,CAAC,AACzC,IAAM,gBAAgB,CAAG,MAAM,CAAC,gBAAgB,CAAC,AACjD,IAAM,cAAc,CAAG,MAAM,CAAC,cAAc,CAAC,AAC7C,IAAM,aAAa,CAAG,MAAM,CAAC,aAAa,CAAC,AAE3C,SAAS,KAAK,EAAG,EAChB,AAED,SAAS,OAAO,CAAC,eAAe,CAAE,IAAI,CAAE,iBAAiB,CAAE,CACvD,IAAM,WAAW,CAAG,WAAW,CAAC,qBAAqB,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,AAChG,OAAO,WAAW,GAAG,eAAe,CAAC,eAAe,CAAE,IAAI,CAAE,iBAAiB,CAAC,CAAC,CAClF,AAED,SAAS,eAAe,CAAC,eAAe,CAAE,IAAI,CAAE,iBAAiB,CAAE,CAC/D,IAAI,YAAY,CAAG,GAAG,CAAC,AACvB,IAAM,kBAAkB,CAAG,eAAe,CAAC,4BAA4B,EAAE,CAAC,AAC1E,GAAI,IAAI,KAAK,gCAAU,eAAe,CAAE,CACpC,YAAY,GAAG,cAAc,CAAC,uBAAuB,EAAE,CAAG,CAAC,CAAG,kBAAkB,CAAC,gBAAgB,CAAC,CACrG,KAAM,GAAI,IAAI,KAAK,gCAAU,KAAK,IAAI,iBAAiB,CAAE,CACtD,IAAM,gBAAgB,CAAG,WAAW,CAAC,qBAAqB,CAAC,YAAY,CAAC,qBAAqB,CAAC,gCAAU,KAAK,CAAC,CAAC,CAAC,AAChH,GAAI,KAAK,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAE,CAC5C,YAAY,GAAG,gBAAgB,CAAC,CACnC,KAAM,CACH,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAE,kBAAkB,CAAC,gBAAgB,CAAC,CAAC,CAClF;CAEJ,KAAM,CACH,IAAM,UAAU,CAAG,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC,AAC3D,GAAI,aAAa,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAE,CACjD,IAAM,iBAAiB,CAAG,UAAU,CAAC,YAAY,CAAC,QAAQ,IAAI,gBAAgB,CAAC,mCAAmC,EAAE,CAAC,AACrH,YAAY,GAAG,iBAAiB,CAAG,gBAAgB,CAAC,iCAAiC,EAAE,CAAG,gBAAgB,CAAC,yBAAyB,EAAE,CAAC,CAC1I,KAAK,CACF,YAAY,GAAG,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,CACzD,CACJ,AAED,OAAO,YAAY,CAAC,CACvB,AAED,IAAM,QAAQ,CAAG,CACb,OAAO,CAAE,OAAO,CAChB,eAAe,CAAE,eAAe,CACnC,CAAC,AAEF,KAAK,EAAE,CAAC,AACR,OAAO,QAAQ,CAAC,CACnB,AAED,eAAe,CAAC,qBAAqB,GAAG,iBAAiB,CAAC,qBAC3C,8BAAa,eAAe,CAAC,eAAe,CAAC","file":"BufferLevelRule.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../constants/Constants';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction BufferLevelRule(config) {\n\n    config = config || {};\n    const dashMetrics = config.dashMetrics;\n    const metricsModel = config.metricsModel;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const textController = config.textController;\n    const abrController = config.abrController;\n\n    function setup() {\n    }\n\n    function execute(streamProcessor, type, videoTrackPresent) {\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor(type));\n        return bufferLevel < getBufferTarget(streamProcessor, type, videoTrackPresent);\n    }\n\n    function getBufferTarget(streamProcessor, type, videoTrackPresent) {\n        let bufferTarget = NaN;\n        const representationInfo = streamProcessor.getCurrentRepresentationInfo();\n        if (type === Constants.FRAGMENTED_TEXT) {\n            bufferTarget = textController.getAllTracksAreDisabled() ? 0 : representationInfo.fragmentDuration;\n        } else if (type === Constants.AUDIO && videoTrackPresent) {\n            const videoBufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor(Constants.VIDEO));\n            if (isNaN(representationInfo.fragmentDuration)) {\n                bufferTarget = videoBufferLevel;\n            } else {\n                bufferTarget = Math.max(videoBufferLevel, representationInfo.fragmentDuration);\n            }\n            // console.log('videoBufferLevel  - ' + videoBufferLevel + ' target : ' + bufferTarget);\n        } else {\n            const streamInfo = representationInfo.mediaInfo.streamInfo;\n            if (abrController.isPlayingAtTopQuality(streamInfo)) {\n                const isLongFormContent = streamInfo.manifestInfo.duration >= mediaPlayerModel.getLongFormContentDurationThreshold();\n                bufferTarget = isLongFormContent ? mediaPlayerModel.getBufferTimeAtTopQualityLongForm() : mediaPlayerModel.getBufferTimeAtTopQuality();\n            }else {\n                bufferTarget = mediaPlayerModel.getStableBufferTime();\n            }\n        }\n\n        return bufferTarget;\n    }\n\n    const instance = {\n        execute: execute,\n        getBufferTarget: getBufferTarget\n    };\n\n    setup();\n    return instance;\n}\n\nBufferLevelRule.__dashjs_factory_name = 'BufferLevelRule';\nexport default FactoryMaker.getClassFactory(BufferLevelRule);\n"]}