{"version":3,"sources":["../../../../../src/streaming/text/TextBufferController.js"],"names":[],"mappings":"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","file":"TextBufferController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport BufferController from './../controllers/BufferController';\nimport NotFragmentedTextBufferController from './NotFragmentedTextBufferController';\n\nfunction TextBufferController(config) {\n\n    config = config || {};\n    let context = this.context;\n\n    let _BufferControllerImpl;\n\n    let instance;\n\n    function setup() {\n\n        // according to text type, we create corresponding buffer controller\n        if (config.type === Constants.FRAGMENTED_TEXT) {\n\n            // in this case, internal buffer ocntroller is a classical BufferController object\n            _BufferControllerImpl = BufferController(context).create({\n                type: config.type,\n                metricsModel: config.metricsModel,\n                mediaPlayerModel: config.mediaPlayerModel,\n                manifestModel: config.manifestModel,\n                errHandler: config.errHandler,\n                streamController: config.streamController,\n                mediaController: config.mediaController,\n                adapter: config.adapter,\n                textController: config.textController,\n                abrController: config.abrController,\n                playbackController: config.playbackController,\n                streamProcessor: config.streamProcessor\n            });\n        } else {\n\n            // in this case, internal buffer controller is a not fragmented text controller object\n            _BufferControllerImpl = NotFragmentedTextBufferController(context).create({\n                type: config.type,\n                errHandler: config.errHandler,\n                streamProcessor: config.streamProcessor\n            });\n        }\n    }\n\n    function getBufferControllerType() {\n        return _BufferControllerImpl.getBufferControllerType();\n    }\n\n    function initialize(source, StreamProcessor) {\n        return _BufferControllerImpl.initialize(source, StreamProcessor);\n    }\n\n    /**\n     * @param {MediaInfo }mediaInfo\n     * @returns {Object} SourceBuffer object\n     * @memberof BufferController#\n     */\n    function createBuffer(mediaInfo) {\n        return _BufferControllerImpl.createBuffer(mediaInfo);\n    }\n\n    function getType() {\n        return _BufferControllerImpl.getType();\n    }\n\n    function getBuffer() {\n        return _BufferControllerImpl.getBuffer();\n    }\n\n    function setBuffer(value) {\n        _BufferControllerImpl.setBuffer(value);\n    }\n\n    function getMediaSource() {\n        return _BufferControllerImpl.getMediaSource();\n    }\n\n    function setMediaSource(value) {\n        _BufferControllerImpl.setMediaSource(value);\n    }\n\n    function getStreamProcessor() {\n        _BufferControllerImpl.getStreamProcessor();\n    }\n\n    function setSeekStartTime(value) {\n        _BufferControllerImpl.setSeekStartTime(value);\n    }\n\n    function getBufferLevel() {\n        return _BufferControllerImpl.getBufferLevel();\n    }\n\n    function reset(errored) {\n        _BufferControllerImpl.reset(errored);\n    }\n\n    function getIsBufferingCompleted() {\n        return _BufferControllerImpl.getIsBufferingCompleted();\n    }\n\n    function switchInitData(streamId, representationId) {\n        _BufferControllerImpl.switchInitData(streamId, representationId);\n    }\n\n    function getIsPruningInProgress() {\n        return _BufferControllerImpl.getIsPruningInProgress();\n    }\n\n    function dischargePreBuffer() {\n        return _BufferControllerImpl.dischargePreBuffer();\n    }\n\n    function getRangeAt(time) {\n        return _BufferControllerImpl.getRangeAt(time);\n    }\n\n    instance = {\n        getBufferControllerType: getBufferControllerType,\n        initialize: initialize,\n        createBuffer: createBuffer,\n        getType: getType,\n        getStreamProcessor: getStreamProcessor,\n        setSeekStartTime: setSeekStartTime,\n        getBuffer: getBuffer,\n        setBuffer: setBuffer,\n        getBufferLevel: getBufferLevel,\n        setMediaSource: setMediaSource,\n        getMediaSource: getMediaSource,\n        getIsBufferingCompleted: getIsBufferingCompleted,\n        getIsPruningInProgress: getIsPruningInProgress,\n        dischargePreBuffer: dischargePreBuffer,\n        switchInitData: switchInitData,\n        getRangeAt: getRangeAt,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nTextBufferController.__dashjs_factory_name = 'TextBufferController';\nexport default FactoryMaker.getClassFactory(TextBufferController);\n"]}