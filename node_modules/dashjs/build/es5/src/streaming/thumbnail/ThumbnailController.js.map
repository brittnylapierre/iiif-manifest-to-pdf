{"version":3,"sources":["../../../../../src/streaming/thumbnail/ThumbnailController.js"],"names":[],"mappings":"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","file":"ThumbnailController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Constants from '../constants/Constants';\nimport Thumbnail from '../vo/Thumbnail';\nimport ThumbnailTracks from './ThumbnailTracks';\nimport BitrateInfo from '../vo/BitrateInfo';\nimport {replaceTokenForTemplate, unescapeDollarsInTemplate} from '../../dash/utils/SegmentsUtils';\n\nfunction ThumbnailController(config) {\n\n    const context = this.context;\n\n    let instance;\n    let thumbnailTracks;\n\n    function setup() {\n        reset();\n        thumbnailTracks = ThumbnailTracks(context).create({\n            dashManifestModel: config.dashManifestModel,\n            adapter: config.adapter,\n            baseURLController: config.baseURLController,\n            stream: config.stream\n        });\n    }\n\n    function getThumbnail(time) {\n        const track = thumbnailTracks.getCurrentTrack();\n        if (!track || track.segmentDuration <= 0) {\n            return null;\n        }\n\n        // Calculate index of the sprite given a time\n        const seq = Math.floor(time / track.segmentDuration);\n        const offset = time % track.segmentDuration;\n        const thumbIndex = Math.floor((offset * track.tilesHor * track.tilesVert) / track.segmentDuration);\n        // Create and return the thumbnail\n        const thumbnail = new Thumbnail();\n        thumbnail.url = buildUrlFromTemplate(track, seq);\n        thumbnail.width = Math.floor(track.widthPerTile);\n        thumbnail.height = Math.floor(track.heightPerTile);\n        thumbnail.x = Math.floor(thumbIndex % track.tilesHor) * track.widthPerTile;\n        thumbnail.y = Math.floor(thumbIndex / track.tilesHor) * track.heightPerTile;\n\n        return thumbnail;\n    }\n\n    function buildUrlFromTemplate(track, seq) {\n        const seqIdx = seq + track.startNumber;\n        let url = replaceTokenForTemplate(track.templateUrl, 'Number', seqIdx);\n        url = replaceTokenForTemplate(url, 'Time', (seqIdx - 1) * track.segmentDuration);\n        url = replaceTokenForTemplate(url, 'Bandwidth', track.bandwidth);\n        return unescapeDollarsInTemplate(url);\n    }\n\n    function setTrackByIndex(index) {\n        thumbnailTracks.setTrackByIndex(index);\n    }\n\n    function getCurrentTrackIndex() {\n        return thumbnailTracks.getCurrentTrackIndex();\n    }\n\n    function getBitrateList() {\n        const tracks = thumbnailTracks.getTracks();\n        if (!tracks || tracks.length === 0) {\n            return [];\n        }\n\n        let i = 0;\n        return tracks.map((t) => {\n            const bitrateInfo = new BitrateInfo();\n            bitrateInfo.mediaType = Constants.IMAGE;\n            bitrateInfo.qualityIndex = i++;\n            bitrateInfo.bitrate = t.bitrate;\n            bitrateInfo.width = t.width;\n            bitrateInfo.height = t.height;\n            return bitrateInfo;\n        });\n    }\n\n    function reset() {\n        if (thumbnailTracks) {\n            thumbnailTracks.reset();\n        }\n    }\n\n    instance = {\n        get: getThumbnail,\n        setTrackByIndex: setTrackByIndex,\n        getCurrentTrackIndex: getCurrentTrackIndex,\n        getBitrateList: getBitrateList,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nThumbnailController.__dashjs_factory_name = 'ThumbnailController';\nexport default FactoryMaker.getClassFactory(ThumbnailController);"]}