{"version":3,"sources":["../../../../../src/streaming/utils/Capabilities.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;8LA8ByB,yBAAyB,mEAElD,SAAS,YAAY,EAAG,CAEpB,IAAI,QAAQ,UAAA,CACR,uBAAuB,UAAA,CAAC,AAE5B,SAAS,KAAK,EAAG,CACb,uBAAuB,GAAG,KAAK,CAAC,CACnC,AAED,SAAS,mBAAmB,EAAG,CAC3B,IAAI,SAAS,EAAI,mBAAmB,IAAI,MAAM,CAAA,AAAC,CAAC,AAChD,IAAI,cAAc,EAAI,aAAa,IAAI,MAAM,CAAA,AAAC,CAAC,AAE/C,OAAQ,SAAS,IAAI,cAAc,CAAE,CACxC;;;;;OAQD,SAAS,sBAAsB,EAAG,CAC9B,OAAO,uBAAuB,CAAC,CAClC,AAED,SAAS,0BAA0B,CAAC,KAAK,CAAE,CACvC,uBAAuB,GAAG,KAAK,CAAC,CACnC,AAED,SAAS,aAAa,CAAC,KAAK,CAAE,CAC1B,GAAI,aAAa,IAAI,MAAM,IAAI,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAE,CAC/D,OAAO,IAAI,CAAC,CACf,AAED,GAAI,mBAAmB,IAAI,MAAM,IAAI,iBAAiB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAE,CAC3E,OAAO,IAAI,CAAC,CACf,AAED,OAAO,KAAK,CAAC,CAChB,AAED,QAAQ,GAAG,CACP,mBAAmB,CAAE,mBAAmB,CACxC,sBAAsB,CAAE,sBAAsB,CAC9C,aAAa,CAAE,aAAa,CAC5B,0BAA0B,CAAE,0BAA0B,CACzD,CAAC,AAEF,KAAK,EAAE,CAAC,AAER,OAAO,QAAQ,CAAC,CACnB,AACD,YAAY,CAAC,qBAAqB,GAAG,cAAc,CAAC,qBACrC,8BAAa,mBAAmB,CAAC,YAAY,CAAC","file":"Capabilities.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction Capabilities() {\n\n    let instance,\n        encryptedMediaSupported;\n\n    function setup() {\n        encryptedMediaSupported = false;\n    }\n\n    function supportsMediaSource() {\n        let hasWebKit = ('WebKitMediaSource' in window);\n        let hasMediaSource = ('MediaSource' in window);\n\n        return (hasWebKit || hasMediaSource);\n    }\n\n    /**\n     * Returns whether Encrypted Media Extensions are supported on this\n     * user agent\n     *\n     * @return {boolean} true if EME is supported, false otherwise\n     */\n    function supportsEncryptedMedia() {\n        return encryptedMediaSupported;\n    }\n\n    function setEncryptedMediaSupported(value) {\n        encryptedMediaSupported = value;\n    }\n\n    function supportsCodec(codec) {\n        if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    instance = {\n        supportsMediaSource: supportsMediaSource,\n        supportsEncryptedMedia: supportsEncryptedMedia,\n        supportsCodec: supportsCodec,\n        setEncryptedMediaSupported: setEncryptedMediaSupported\n    };\n\n    setup();\n\n    return instance;\n}\nCapabilities.__dashjs_factory_name = 'Capabilities';\nexport default FactoryMaker.getSingletonFactory(Capabilities);"]}