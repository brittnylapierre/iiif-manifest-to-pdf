{"version":3,"sources":["../../../../../src/streaming/utils/IsoFile.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;sLA+BmB,cAAc,iFACR,yBAAyB,mEAElD,SAAS,OAAO,EAAG,CAEf,IAAI,QAAQ,UAAA,CACR,aAAa,UAAA,CAAC;;;;MAOlB,SAAS,MAAM,CAAC,IAAI,CAAE,CAClB,GAAI,CAAC,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,KAAK,IAAK,aAAa,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,AAAC,IAAI,OAAO,aAAa,CAAC,KAAK,KAAK,UAAU,CAAE,OAAO,IAAI,CAAC,AAEpJ,OAAO,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CACzD;;;;MAOD,SAAS,QAAQ,CAAC,IAAI,CAAE,CACpB,IAAI,KAAK,CAAG,EAAE,CAAC,AAEf,GAAI,CAAC,IAAI,IAAI,CAAC,aAAa,IAAI,OAAO,aAAa,CAAC,QAAQ,KAAK,UAAU,CAAE,CACzE,OAAO,KAAK,CAAC,CAChB,AAED,IAAI,OAAO,CAAG,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,AAC3C,IAAI,GAAG,UAAA,CAAC,AAER,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,EAAE,CAAG,OAAO,CAAC,MAAM,CAAE,CAAC,GAAG,EAAE,CAAE,CAAC,EAAE,EAAE,CAC9C,GAAG,GAAG,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,AAEtC,GAAI,GAAG,CAAE,CACL,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CACnB,CACJ,AAED,OAAO,KAAK,CAAC,CAChB;;;MAMD,SAAS,OAAO,CAAC,KAAK,CAAE,CACpB,aAAa,GAAG,KAAK,CAAC,CACzB;;;MAMD,SAAS,UAAU,EAAG,CAClB,GAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAE,OAAO,IAAI,CAAC,AAEvF,IAAI,IAAI,CAAG,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,AACpE,IAAI,KAAK,CAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,AAE3B,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,CAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAG,IAAI,CAAC,CAC5D,AAED,SAAS,mBAAmB,CAAC,OAAO,CAAE,CAClC,GAAI,CAAC,OAAO,CAAE,OAAO,IAAI,CAAC,AAE1B,IAAI,GAAG,CAAG,0BAAW,OAAO,CAAC,CAAC,AAE9B,GAAI,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,CAAE,CACvC,GAAG,CAAC,UAAU,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CACzC,AAED,OAAO,GAAG,CAAC,CACd,AAED,QAAQ,GAAG,CACP,MAAM,CAAE,MAAM,CACd,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,OAAO,CAChB,UAAU,CAAE,UAAU,CACzB,CAAC,AAEF,OAAO,QAAQ,CAAC,CACnB,AACD,OAAO,CAAC,qBAAqB,GAAG,SAAS,CAAC,qBAC3B,8BAAa,eAAe,CAAC,OAAO,CAAC","file":"IsoFile.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport IsoBox from '../vo/IsoBox';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction IsoFile() {\n\n    let instance,\n        parsedIsoFile;\n\n    /**\n    * @param {string} type\n    * @returns {IsoBox|null}\n    * @memberof IsoFile#\n    */\n    function getBox(type) {\n        if (!type || !parsedIsoFile || !parsedIsoFile.boxes || (parsedIsoFile.boxes.length === 0) || typeof parsedIsoFile.fetch !== 'function') return null;\n\n        return convertToDashIsoBox(parsedIsoFile.fetch(type));\n    }\n\n    /**\n    * @param {string} type\n    * @returns {Array|null} array of {@link IsoBox}\n    * @memberof IsoFile#\n    */\n    function getBoxes(type) {\n        let boxes = [];\n\n        if (!type || !parsedIsoFile || typeof parsedIsoFile.fetchAll !== 'function') {\n            return boxes;\n        }\n\n        let boxData = parsedIsoFile.fetchAll(type);\n        let box;\n\n        for (let i = 0, ln = boxData.length; i < ln; i++) {\n            box = convertToDashIsoBox(boxData[i]);\n\n            if (box) {\n                boxes.push(box);\n            }\n        }\n\n        return boxes;\n    }\n\n    /**\n    * @param {string} value\n    * @memberof IsoFile#\n    */\n    function setData(value) {\n        parsedIsoFile = value;\n    }\n\n    /**\n    * @returns {IsoBox|null}\n    * @memberof IsoFile#\n    */\n    function getLastBox() {\n        if (!parsedIsoFile || !parsedIsoFile.boxes || !parsedIsoFile.boxes.length) return null;\n\n        let type = parsedIsoFile.boxes[parsedIsoFile.boxes.length - 1].type;\n        let boxes = getBoxes(type);\n\n        return boxes.length > 0 ? boxes[boxes.length - 1] : null;\n    }\n\n    function convertToDashIsoBox(boxData) {\n        if (!boxData) return null;\n\n        let box = new IsoBox(boxData);\n\n        if (boxData.hasOwnProperty('_incomplete')) {\n            box.isComplete = !boxData._incomplete;\n        }\n\n        return box;\n    }\n\n    instance = {\n        getBox: getBox,\n        getBoxes: getBoxes,\n        setData: setData,\n        getLastBox: getLastBox\n    };\n\n    return instance;\n}\nIsoFile.__dashjs_factory_name = 'IsoFile';\nexport default FactoryMaker.getClassFactory(IsoFile);\n"]}