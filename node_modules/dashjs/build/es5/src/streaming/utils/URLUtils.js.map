{"version":3,"sources":["../../../../../src/streaming/utils/URLUtils.js"],"names":[],"mappings":"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","file":"URLUtils.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @module URLUtils\n * @description Provides utility functions for operating on URLs.\n * Initially this is simply a method to determine the Base URL of a URL, but\n * should probably include other things provided all over the place such as\n * determining whether a URL is relative/absolute, resolving two paths etc.\n */\nfunction URLUtils() {\n\n    let resolveFunction;\n\n    const schemeRegex = /^[a-z][a-z0-9+\\-.]*:/i;\n    const httpUrlRegex = /^https?:\\/\\//i;\n    const httpsUrlRegex = /^https:\\/\\//i;\n    const originRegex = /^([a-z][a-z0-9+\\-.]*:\\/\\/[^\\/]+)\\/?/i;\n\n    /**\n     * Resolves a url given an optional base url\n     * Uses window.URL to do the resolution.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     * @private\n     */\n    const nativeURLResolver = (url, baseUrl) => {\n        try {\n            // this will throw if baseurl is undefined, invalid etc\n            return new window.URL(url, baseUrl).toString();\n        } catch (e) {\n            return url;\n        }\n    };\n\n    /**\n     * Resolves a url given an optional base url\n     * Does not resolve ./, ../ etc but will do enough to construct something\n     * which will satisfy XHR etc when window.URL is not available ie\n     * IE11/node etc.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     * @private\n     */\n    const dumbURLResolver = (url, baseUrl) => {\n        let baseUrlParseFunc = parseBaseUrl;\n\n        if (!baseUrl) {\n            return url;\n        }\n\n        if (!isRelative(url)) {\n            return url;\n        }\n\n        if (isPathAbsolute(url)) {\n            baseUrlParseFunc = parseOrigin;\n        }\n\n        if (isSchemeRelative(url)) {\n            baseUrlParseFunc = parseScheme;\n        }\n\n        const base = baseUrlParseFunc(baseUrl);\n        const joinChar =\n              base.charAt(base.length - 1) !== '/' &&\n              url.charAt(0) !== '/' ?\n              '/' : '';\n\n        return [base, url].join(joinChar);\n    };\n\n    function setup() {\n        try {\n            const u = new window.URL('x', 'http://y'); //jshint ignore:line\n            resolveFunction = nativeURLResolver;\n        } catch (e) {\n            // must be IE11/Node etc\n        } finally {\n            resolveFunction = resolveFunction || dumbURLResolver;\n        }\n    }\n\n    /**\n     * Returns a string that contains the Base URL of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseBaseUrl(url) {\n        const slashIndex = url.indexOf('/');\n        const lastSlashIndex = url.lastIndexOf('/');\n\n        if (slashIndex !== -1) {\n            // if there is only '//'\n            if (lastSlashIndex === slashIndex + 1) {\n                return url;\n            }\n\n            if (url.indexOf('?') !== -1) {\n                url = url.substring(0, url.indexOf('?'));\n            }\n\n            return url.substring(0, lastSlashIndex + 1);\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the scheme and origin of a URL,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseOrigin(url) {\n        const matches = url.match(originRegex);\n\n        if (matches) {\n            return matches[1];\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the scheme of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseScheme(url) {\n        const matches = url.match(schemeRegex);\n\n        if (matches) {\n            return matches[0];\n        }\n\n        return '';\n    }\n\n    /**\n     * Determines whether the url is relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isRelative(url) {\n        return !schemeRegex.test(url);\n    }\n\n    /**\n     * Determines whether the url is path-absolute.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isPathAbsolute(url) {\n        return isRelative(url) && url.charAt(0) === '/';\n    }\n\n    /**\n     * Determines whether the url is scheme-relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isSchemeRelative(url) {\n        return url.indexOf('//') === 0;\n    }\n\n    /**\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPURL(url) {\n        return httpUrlRegex.test(url);\n    }\n\n    /**\n     * Determines whether the supplied url has https scheme\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPS(url) {\n        return httpsUrlRegex.test(url);\n    }\n\n    /**\n     * Resolves a url given an optional base url\n     * @return {string}\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function resolve(url, baseUrl) {\n        return resolveFunction(url, baseUrl);\n    }\n\n    setup();\n\n    const instance = {\n        parseBaseUrl:       parseBaseUrl,\n        parseOrigin:        parseOrigin,\n        parseScheme:        parseScheme,\n        isRelative:         isRelative,\n        isPathAbsolute:     isPathAbsolute,\n        isSchemeRelative:   isSchemeRelative,\n        isHTTPURL:          isHTTPURL,\n        isHTTPS:            isHTTPS,\n        resolve:            resolve\n    };\n\n    return instance;\n}\n\nURLUtils.__dashjs_factory_name = 'URLUtils';\nexport default FactoryMaker.getSingletonFactory(URLUtils);\n"]}