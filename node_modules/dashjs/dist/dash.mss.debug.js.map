{
  "version": 3,
  "sources": [
    "../node_modules/browser-pack/_prelude.js",
    "core/events/EventsBase.js",
    "mss/MssEvents.js",
    "mss/MssFragmentInfoController.js",
    "mss/MssFragmentMoofProcessor.js",
    "mss/MssFragmentMoovProcessor.js",
    "mss/MssFragmentProcessor.js",
    "mss/MssHandler.js",
    "mss/index.js",
    "mss/parser/MssParser.js",
    "streaming/vo/DataChunk.js",
    "streaming/vo/FragmentRequest.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n\nclass MssEvents extends EventsBase {\n\n    constructor() {\n        super();\n\n        this.FRAGMENT_INFO_LOADING_COMPLETED = 'fragmentInfoLoadingCompleted';\n    }\n}\n\nlet mssEvents = new MssEvents();\nexport default mssEvents;\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssEvents from './MssEvents';\nimport MSSFragmentMoofProcessor from './MssFragmentMoofProcessor';\n\nfunction MssFragmentInfoController(config) {\n\n    config = config || {};\n    let context = this.context;\n\n    let instance;\n    let fragmentModel;\n    let indexHandler;\n    let started;\n    let type;\n    let bufferTimeout;\n    let _fragmentInfoTime;\n    let startFragmentInfoDate;\n    let startTimeStampValue;\n    let deltaTime;\n    let segmentDuration;\n\n    let streamProcessor = config.streamProcessor;\n    let eventBus = config.eventBus;\n    let metricsModel = config.metricsModel;\n    let playbackController = config.playbackController;\n    const ISOBoxer = config.ISOBoxer;\n    const log = config.log;\n\n    const controllerType = 'MssFragmentInfoController';\n\n    function setup() {\n    }\n\n    function initialize() {\n        started = false;\n\n        startFragmentInfoDate = null;\n        startTimeStampValue = null;\n        deltaTime = 0;\n        segmentDuration = NaN;\n\n        // register to stream processor as external controller\n        streamProcessor.registerExternalController(instance);\n        type = streamProcessor.getType();\n        fragmentModel = streamProcessor.getFragmentModel();\n        indexHandler = streamProcessor.getIndexHandler();\n    }\n\n    function getCurrentRepresentation() {\n        let representationController = streamProcessor.getRepresentationController();\n        let representation = representationController.getCurrentRepresentation();\n\n        return representation;\n    }\n\n    function sendRequest(request) {\n        fragmentModel.executeRequest(request);\n    }\n\n    function asFragmentInfoRequest(request) {\n        if (request && request.url) {\n            request.url = request.url.replace('Fragments', 'FragmentInfo');\n            request.type = 'FragmentInfoSegment';\n        }\n\n        return request;\n    }\n\n    function onFragmentRequest(request) {\n\n        // Check if current request signals end of stream\n        if ((request !== null) && (request.action === request.ACTION_COMPLETE)) {\n            doStop();\n            return;\n        }\n\n        if (request !== null) {\n            _fragmentInfoTime = request.startTime + request.duration;\n            request = asFragmentInfoRequest(request);\n\n            if (streamProcessor.getFragmentModel().isFragmentLoadedOrPending(request)) {\n                request = indexHandler.getNextSegmentRequest(getCurrentRepresentation());\n                onFragmentRequest(request);\n                return;\n            }\n\n            log('[FragmentInfoController][' + type + '] onFragmentRequest ' + request.url);\n\n            // Download the fragment info segment\n            sendRequest(request);\n        } else {\n            // No more fragment in current list\n            log('[FragmentInfoController][' + type + '] bufferFragmentInfo failed');\n        }\n    }\n\n    function bufferFragmentInfo() {\n        var segmentTime;\n\n        // Check if running state\n        if (!started) {\n            return;\n        }\n\n        log('[FragmentInfoController][' + type + '] Start buffering process...');\n\n        // Get next segment time\n        segmentTime = _fragmentInfoTime;\n\n        log('[FragmentInfoController][' + type + '] loadNextFragment for time: ' + segmentTime);\n\n        let representation = getCurrentRepresentation();\n        let request = indexHandler.getSegmentRequestForTime(representation, segmentTime);\n        onFragmentRequest(request);\n    }\n\n    function delayLoadNextFragmentInfo(delay) {\n        var delayMs = Math.round(Math.min((delay * 1000), 2000));\n\n        log('[FragmentInfoController][' + type + '] Check buffer delta = ' + delayMs + ' ms');\n\n        clearTimeout(bufferTimeout);\n        bufferTimeout = setTimeout(function () {\n            bufferTimeout = null;\n            bufferFragmentInfo();\n        }, delayMs);\n    }\n\n    function onFragmentInfoLoadedCompleted(e) {\n        if (e.streamProcessor !== streamProcessor) {\n            return;\n        }\n\n        let request = e.fragmentInfo.request;\n        let deltaDate,\n            deltaTimeStamp;\n\n\n        if (!e.fragmentInfo.response) {\n            log('[FragmentInfoController][' + type + '] ERROR loading ', request.url);\n            return;\n        }\n\n        segmentDuration = request.duration;\n        log('[FragmentInfoController][' + type + '] FragmentInfo loaded ', request.url);\n        try {\n\n            // update segment list\n            let mssFragmentMoofProcessor = MSSFragmentMoofProcessor(context).create({\n                metricsModel: metricsModel,\n                playbackController: playbackController,\n                ISOBoxer: ISOBoxer,\n                log: log\n            });\n            mssFragmentMoofProcessor.updateSegmentList(e.fragmentInfo, streamProcessor);\n\n            deltaDate = (new Date().getTime() - startFragmentInfoDate) / 1000;\n            deltaTimeStamp = (_fragmentInfoTime + segmentDuration) - startTimeStampValue;\n            deltaTime = (deltaTimeStamp - deltaDate) > 0 ? (deltaTimeStamp - deltaDate) : 0;\n            delayLoadNextFragmentInfo(deltaTime);\n        } catch (e) {\n            log('[FragmentInfoController][' + type + '] ERROR - Internal error while processing fragment info segment ');\n        }\n    }\n\n    function startPlayback() {\n        if (!started) {\n            return;\n        }\n\n        startFragmentInfoDate = new Date().getTime();\n        startTimeStampValue = _fragmentInfoTime;\n\n        log('[FragmentInfoController][' + type + '] startPlayback');\n\n        // Start buffering process\n        bufferFragmentInfo.call(this);\n    }\n\n    function doStart() {\n\n        let segments;\n\n        if (started === true) {\n            return;\n        }\n\n        eventBus.on(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, onFragmentInfoLoadedCompleted, instance);\n\n        started = true;\n        log('[FragmentInfoController][' + type + '] START');\n\n        let representation = getCurrentRepresentation();\n        segments = representation.segments;\n\n        if (segments && segments.length > 0) {\n            _fragmentInfoTime = segments[segments.length - 1].presentationStartTime - segments[segments.length - 1].duration;\n\n            startPlayback();\n        } else {\n            indexHandler.updateSegmentList(representation);\n            segments = representation.segments;\n            if (segments && segments.length > 0) {\n                _fragmentInfoTime = segments[segments.length - 1].presentationStartTime - segments[segments.length - 1].duration;\n            }\n\n            startPlayback();\n        }\n    }\n\n    function doStop() {\n        if (!started) {\n            return;\n        }\n        log('[FragmentInfoController][' + type + '] STOP');\n\n        eventBus.off(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, onFragmentInfoLoadedCompleted, instance);\n\n        // Stop buffering process\n        clearTimeout(bufferTimeout);\n        started = false;\n\n        startFragmentInfoDate = null;\n        startTimeStampValue = null;\n    }\n\n    function reset() {\n        doStop();\n        streamProcessor.unregisterExternalController(instance);\n    }\n\n    instance = {\n        initialize: initialize,\n        controllerType: controllerType,\n        start: doStart,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentInfoController.__dashjs_factory_name = 'MssFragmentInfoController';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentInfoController); /* jshint ignore:line */\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @module MssFragmentMoovProcessor\n * @param {Object} config object\n */\nfunction MssFragmentMoofProcessor(config) {\n\n    config = config || {};\n    let instance;\n    let metricsModel = config.metricsModel;\n    let playbackController = config.playbackController;\n    const ISOBoxer = config.ISOBoxer;\n    const log = config.log;\n\n    function setup() {\n    }\n\n    function processTfrf(request, tfrf, tfdt, streamProcessor) {\n        let representationController = streamProcessor.getRepresentationController();\n        let representation = representationController.getCurrentRepresentation();\n        let indexHandler = streamProcessor.getIndexHandler();\n\n        let manifest = representation.adaptation.period.mpd.manifest;\n        let adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n\n        // Get adaptation's segment timeline (always a SegmentTimeline in Smooth Streaming use case)\n        let segments = adaptation.SegmentTemplate.SegmentTimeline.S;\n        let entries = tfrf.entry;\n        let entry,\n            segmentTime;\n        let segment = null;\n        let type = adaptation.contentType;\n        let t = 0;\n        let availabilityStartTime = null;\n        let range;\n\n        if (manifest.type !== 'dynamic') {\n            return;\n        }\n\n        if (entries.length === 0) {\n            return;\n        }\n\n        // Consider only first tfrf entry (to avoid pre-condition failure on fragment info requests)\n        entry = entries[0];\n\n        // Get last segment time\n        segmentTime = segments[segments.length - 1].tManifest ? parseFloat(segments[segments.length - 1].tManifest) : segments[segments.length - 1].t;\n\n        // Check if we have to append new segment to timeline\n        if (entry.fragment_absolute_time <= segmentTime) {\n\n            // Update DVR window range\n            // => set range end to end time of current segment\n            range = {\n                start: segments[0].t / adaptation.SegmentTemplate.timescale,\n                end: (tfdt.baseMediaDecodeTime / adaptation.SegmentTemplate.timescale) + request.duration\n            };\n\n            updateDVR(request.mediaType, range, streamProcessor.getStreamInfo().manifestInfo);\n            return;\n        }\n\n        log('[MssFragmentMoofProcessor][', type,'] Add new segment - t = ', (entry.fragment_absolute_time /  10000000.0));\n        segment = {};\n        segment.t = entry.fragment_absolute_time;\n        segment.d = entry.fragment_duration;\n        segments.push(segment);\n\n        //\n        if (manifest.timeShiftBufferDepth && manifest.timeShiftBufferDepth > 0) {\n            // Get timestamp of the last segment\n            segment = segments[segments.length - 1];\n            t = segment.t;\n\n            // Determine the segments' availability start time\n            availabilityStartTime = t - (manifest.timeShiftBufferDepth * 10000000);\n\n            // Remove segments prior to availability start time\n            segment = segments[0];\n            while (segment.t < availabilityStartTime) {\n                log('[MssFragmentMoofProcessor]Remove segment  - t = ' + (segment.t / 10000000.0));\n                segments.splice(0, 1);\n                segment = segments[0];\n            }\n\n            // Update DVR window range\n            // => set range end to end time of current segment\n            range = {\n                start: segments[0].t / adaptation.SegmentTemplate.timescale,\n                end: (tfdt.baseMediaDecodeTime / adaptation.SegmentTemplate.timescale) + request.duration\n            };\n\n            updateDVR(request.mediaType, range, streamProcessor.getStreamInfo().manifestInfo);\n        }\n\n        indexHandler.updateSegmentList(representation);\n    }\n\n    function updateDVR(type, range, manifestInfo) {\n        let dvrInfos = metricsModel.getMetricsFor(type).DVRInfo;\n        if (dvrInfos) {\n            if (dvrInfos.length === 0 || (dvrInfos.length > 0 && range.end > dvrInfos[dvrInfos.length - 1].range.end)) {\n                log('[MssFragmentMoofProcessor][', type, '] Update DVR Infos [' + range.start + ' - ' + range.end + ']');\n                metricsModel.addDVRInfo(type, playbackController.getTime(), manifestInfo, range);\n            }\n        }\n    }\n\n    // This function returns the offset of the 1st byte of a child box within a container box\n    function getBoxOffset(parent, type) {\n        let offset = 8;\n        let i = 0;\n\n        for (i = 0; i < parent.boxes.length; i++) {\n            if (parent.boxes[i].type === type) {\n                return offset;\n            }\n            offset += parent.boxes[i].size;\n        }\n        return offset;\n    }\n\n    function convertFragment(e, sp) {\n\n        let i;\n\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        if (!e.response) {\n            return;\n        }\n        let isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        let tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        let traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        let trun = isoFile.fetch('trun');\n\n        // Process tfxd boxes\n        // This box provide absolute timestamp but we take the segment start time for tfdt\n        let tfxd = isoFile.fetch('tfxd');\n        if (tfxd) {\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\n            tfxd = null;\n        }\n        let tfrf = isoFile.fetch('tfrf');\n        if (tfrf) {\n            processTfrf(e.request, tfrf, tfdt, sp);\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\n        // => convert sepiff box it into a senc box\n        // => create saio and saiz boxes (if not already present)\n        let sepiff = isoFile.fetch('sepiff');\n        if (sepiff !== null) {\n            sepiff.type = 'senc';\n            sepiff.usertype = undefined;\n\n            let saio = isoFile.fetch('saio');\n            if (saio === null) {\n                // Create Sample Auxiliary Information Offsets Box box (saio)\n                saio = ISOBoxer.createFullBox('saio', traf);\n                saio.version = 0;\n                saio.flags = 0;\n                saio.entry_count = 1;\n                saio.offset = [0];\n\n                let saiz = ISOBoxer.createFullBox('saiz', traf);\n                saiz.version = 0;\n                saiz.flags = 0;\n                saiz.sample_count = sepiff.sample_count;\n                saiz.default_sample_info_size = 0;\n                saiz.sample_info_size = [];\n\n                if (sepiff.flags & 0x02) {\n                    // Sub-sample encryption => set sample_info_size for each sample\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\n                    }\n                } else {\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\n                    saiz.default_sample_info_size = 8;\n                }\n            }\n        }\n\n        tfhd.flags &= 0xFFFFFE; // set tfhd.base-data-offset-present to false\n        tfhd.flags |= 0x020000; // set tfhd.default-base-is-moof to true\n        trun.flags |= 0x000001; // set trun.data-offset-present to true\n\n        // Update trun.data_offset field that corresponds to first data byte (inside mdat box)\n        let moof = isoFile.fetch('moof');\n        let length = moof.getLength();\n        trun.data_offset = length + 8;\n\n        // Update saio box offset field according to new senc box offset\n        let saio = isoFile.fetch('saio');\n        if (saio !== null) {\n            let trafPosInMoof = getBoxOffset(moof, 'traf');\n            let sencPosInTraf = getBoxOffset(traf, 'senc');\n            // Set offset from begin fragment to the first IV field in senc box\n            saio.offset[0] = trafPosInMoof + sencPosInTraf + 16; // 16 = box header (12) + sample_count field size (4)\n        }\n\n        // Write transformed/processed fragment into request reponse data\n        e.response = isoFile.write();\n    }\n\n    function updateSegmentList(e, sp) {\n\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        if (!e.response) {\n            return;\n        }\n\n        let isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        let tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        let traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        let tfrf = isoFile.fetch('tfrf');\n        if (tfrf) {\n            processTfrf(e.request, tfrf, tfdt, sp);\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n    }\n\n    instance = {\n        convertFragment: convertFragment,\n        updateSegmentList: updateSegmentList\n    };\n\n    setup();\n    return instance;\n}\n\nMssFragmentMoofProcessor.__dashjs_factory_name = 'MssFragmentMoofProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoofProcessor); /* jshint ignore:line */\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @module MssFragmentMoovProcessor\n * @param {Object} config object\n */\nfunction MssFragmentMoovProcessor(config) {\n    config = config || {};\n    const TIME_SCALE = 10000000;\n    const NALUTYPE_SPS = 7;\n    const NALUTYPE_PPS = 8;\n    const constants = config.constants;\n    const ISOBoxer = config.ISOBoxer;\n\n    let protectionController = config.protectionController;\n    let instance,\n        period,\n        adaptationSet,\n        representation,\n        contentProtection,\n        trackId;\n\n    function createFtypBox(isoFile) {\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\n        ftyp.major_brand = 'iso6';\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\n\n        return ftyp;\n    }\n\n    function createMoovBox(isoFile) {\n\n        // moov box\n        let moov = ISOBoxer.createBox('moov', isoFile);\n\n        // moov/mvhd\n        createMvhdBox(moov);\n\n        // moov/trak\n        let trak = ISOBoxer.createBox('trak', moov);\n\n        // moov/trak/tkhd\n        createTkhdBox(trak);\n\n        // moov/trak/mdia\n        let mdia = ISOBoxer.createBox('mdia', trak);\n\n        // moov/trak/mdia/mdhd\n        createMdhdBox(mdia);\n\n        // moov/trak/mdia/hdlr\n        createHdlrBox(mdia);\n\n        // moov/trak/mdia/minf\n        let minf = ISOBoxer.createBox('minf', mdia);\n\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                // moov/trak/mdia/minf/vmhd\n                createVmhdBox(minf);\n                break;\n            case constants.AUDIO:\n                // moov/trak/mdia/minf/smhd\n                createSmhdBox(minf);\n                break;\n            default:\n                break;\n        }\n\n        // moov/trak/mdia/minf/dinf\n        let dinf = ISOBoxer.createBox('dinf', minf);\n\n        // moov/trak/mdia/minf/dinf/dref\n        createDrefBox(dinf);\n\n        // moov/trak/mdia/minf/stbl\n        let stbl = ISOBoxer.createBox('stbl', minf);\n\n        // Create empty stts, stsc, stco and stsz boxes\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\n\n        // moov/trak/mdia/minf/stbl/stts\n        let stts = ISOBoxer.createFullBox('stts', stbl);\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsc\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stco\n        let stco = ISOBoxer.createFullBox('stco', stbl);\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsz\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsd\n        createStsdBox(stbl);\n\n        // moov/mvex\n        let mvex = ISOBoxer.createBox('mvex', moov);\n\n        // moov/mvex/trex\n        createTrexBox(mvex);\n\n        if (contentProtection && protectionController) {\n            let supportedKS = protectionController.getSupportedKeySystemsFromContentProtection(contentProtection);\n            createProtectionSystemSpecificHeaderBox(moov, supportedKS);\n        }\n    }\n\n    function createMvhdBox(moov) {\n\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\n\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mvhd.timescale = TIME_SCALE; // the time-scale for the entire presentation => 10000000 for MSS\n        mvhd.duration = Math.round(period.duration * TIME_SCALE); // the length of the presentation (in the indicated timescale) =>  take duration of period\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\n        mvhd.reserved1 = 0;\n        mvhd.reserved2 = [0x0, 0x0];\n        mvhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\n\n        return mvhd;\n    }\n\n    function createTkhdBox(trak) {\n\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\n\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\n\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\n        tkhd.reserved1 = 0;\n        tkhd.duration = Math.round(period.duration * TIME_SCALE); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\n        tkhd.reserved2 = [0x0, 0x0];\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\n        tkhd.volume = 1.0; // '1.0' = full volume\n        tkhd.reserved3 = 0;\n        tkhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        tkhd.width = representation.width; // visual presentation width\n        tkhd.height = representation.height; // visual presentation height\n\n        return tkhd;\n    }\n\n    function createMdhdBox(mdia) {\n\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\n\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mdhd.timescale = TIME_SCALE; // the time-scale for the entire presentation\n        mdhd.duration = Math.round(period.duration * TIME_SCALE); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media (see getLanguageCode())\n        mdhd.pre_defined = 0;\n\n        return mdhd;\n    }\n\n    function createHdlrBox(mdia) {\n\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\n\n        hdlr.pre_defined = 0;\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                hdlr.handler_type = 'vide';\n                break;\n            case constants.AUDIO:\n                hdlr.handler_type = 'soun';\n                break;\n            default:\n                hdlr.handler_type = 'meta';\n                break;\n        }\n        hdlr.name = representation.id;\n        hdlr.reserved = [0, 0, 0];\n\n        return hdlr;\n    }\n\n    function createVmhdBox(minf) {\n\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\n\n        vmhd.flags = 1;\n\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\n\n        return vmhd;\n    }\n\n    function createSmhdBox(minf) {\n\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\n\n        smhd.flags = 1;\n\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\n        smhd.reserved = 0;\n\n        return smhd;\n    }\n\n    function createDrefBox(dinf) {\n\n        let dref = ISOBoxer.createFullBox('dref', dinf);\n\n        dref.entry_count = 1;\n        dref.entries = [];\n\n        let url = ISOBoxer.createFullBox('url ', dref, false);\n        url.location = '';\n        url.flags = 1;\n\n        dref.entries.push(url);\n\n        return dref;\n    }\n\n    function createStsdBox(stbl) {\n\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\n\n        stsd.entries = [];\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n            case constants.AUDIO:\n                stsd.entries.push(createSampleEntry(stsd));\n                break;\n            default:\n                break;\n        }\n\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\n        return stsd;\n    }\n\n    function createSampleEntry(stsd) {\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\n\n        switch (codec) {\n            case 'avc1':\n                return createAVCVisualSampleEntry(stsd, codec);\n            case 'mp4a':\n                return createMP4AudioSampleEntry(stsd, codec);\n            default:\n                throw {\n                    name: 'Unsupported codec',\n                    message: 'Unsupported codec',\n                    data: {\n                        codec: codec\n                    }\n                };\n        }\n    }\n\n    function createAVCVisualSampleEntry(stsd, codec) {\n        let avc1;\n\n        if (contentProtection) {\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\n        } else {\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\n        }\n\n        // SampleEntry fields\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        avc1.data_reference_index = 1;\n\n        // VisualSampleEntry fields\n        avc1.pre_defined1 = 0;\n        avc1.reserved2 = 0;\n        avc1.pre_defined2 = [0, 0, 0];\n        avc1.height = representation.height;\n        avc1.width = representation.width;\n        avc1.horizresolution = 72; // 72 dpi\n        avc1.vertresolution = 72; // 72 dpi\n        avc1.reserved3 = 0;\n        avc1.frame_count = 1; // 1 compressed video frame per sample\n        avc1.compressorname = [\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n        ];\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\n        avc1.pre_defined3 = 65535;\n        avc1.config = createAVC1ConfigurationRecord();\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', avc1);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return avc1;\n    }\n\n    function createAVC1ConfigurationRecord() {\n\n        let avcC = null;\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\n\n        // First get all SPS and PPS from codecPrivateData\n        let sps = [];\n        let pps = [];\n        let AVCProfileIndication = 0;\n        let AVCLevelIndication = 0;\n        let profile_compatibility = 0;\n\n\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\n        let naluBytes, naluType;\n\n        for (let i = 0; i < nalus.length; i++) {\n            naluBytes = hexStringtoBuffer(nalus[i]);\n\n            naluType = naluBytes[0] & 0x1F;\n\n            switch (naluType) {\n                case NALUTYPE_SPS:\n                    sps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\n                    break;\n                case NALUTYPE_PPS:\n                    pps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Get profile and level from SPS\n        if (sps.length > 0) {\n            AVCProfileIndication = sps[0][1];\n            profile_compatibility = sps[0][2];\n            AVCLevelIndication = sps[0][3];\n        }\n\n        // Generate avcC buffer\n        avcC = new Uint8Array(avcCLength);\n\n        let i = 0;\n        // length\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\n        avcC[i++] = (avcCLength & 0x000000FF);\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\n        i += 4;\n        avcC[i++] = 1; // configurationVersion = 1\n        avcC[i++] = AVCProfileIndication;\n        avcC[i++] = profile_compatibility;\n        avcC[i++] = AVCLevelIndication;\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\n        for (let n = 0; n < sps.length; n++) {\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (sps[n].length & 0x00FF);\n            avcC.set(sps[n], i);\n            i += sps[n].length;\n        }\n        avcC[i++] = pps.length; // numOfPictureParameterSets\n        for (let n = 0; n < pps.length; n++) {\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (pps[n].length & 0x00FF);\n            avcC.set(pps[n], i);\n            i += pps[n].length;\n        }\n\n        return avcC;\n    }\n\n    function createMP4AudioSampleEntry(stsd, codec) {\n        let mp4a;\n\n        if (contentProtection) {\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\n        } else {\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\n        }\n\n        // SampleEntry fields\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        mp4a.data_reference_index = 1;\n\n        // AudioSampleEntry fields\n        mp4a.reserved2 = [0x0, 0x0];\n        mp4a.channelcount = representation.audioChannels;\n        mp4a.samplesize = 16;\n        mp4a.pre_defined = 0;\n        mp4a.reserved_3 = 0;\n        mp4a.samplerate = representation.audioSamplingRate << 16;\n\n        mp4a.esds = createMPEG4AACESDescriptor();\n\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return mp4a;\n    }\n\n    function createMPEG4AACESDescriptor() {\n\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\n\n        // ESDS length = esds box header length (= 12) +\n        //               ES_Descriptor header length (= 5) +\n        //               DecoderConfigDescriptor header length (= 15) +\n        //               decoderSpecificInfo header length (= 2) +\n        //               AudioSpecificConfig length (= codecPrivateData length)\n        let esdsLength = 34 + audioSpecificConfig.length;\n        let esds = new Uint8Array(esdsLength);\n\n        let i = 0;\n        // esds box\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\n        esds[i++] = (esdsLength & 0x000000FF); // ''\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\n        i += 4;\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\n        i += 4;\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\n        esds[i++] = 20 + audioSpecificConfig.length; // size\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\n        esds[i++] = (trackId & 0x00FF); // ''\n        esds[i++] = 0; // flags and streamPriority\n\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\n        esds[i++] = 15 + audioSpecificConfig.length; // size\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\n        esds[i] |= 0 << 1; // upStream = 0\n        esds[i++] |= 1; // reserved = 1\n        esds[i++] = 0xFF; // buffersizeDB = undefined\n        esds[i++] = 0xFF; // ''\n        esds[i++] = 0xFF; // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\n        esds[i++] = audioSpecificConfig.length; // size\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\n\n        return esds;\n    }\n\n    function createOriginalFormatBox(sinf, codec) {\n        let frma = ISOBoxer.createBox('frma', sinf);\n        frma.data_format = stringToCharCode(codec);\n    }\n\n    function createSchemeTypeBox(sinf) {\n        let schm = ISOBoxer.createFullBox('schm', sinf);\n\n        schm.flags = 0;\n        schm.version = 0;\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\n    }\n\n    function createSchemeInformationBox(sinf) {\n        let schi = ISOBoxer.createBox('schi', sinf);\n\n        // Create and add Track Encryption Box\n        createTrackEncryptionBox(schi);\n    }\n\n    function createProtectionSystemSpecificHeaderBox(moov, keySystems) {\n        let pssh_bytes;\n        let pssh;\n        let i;\n        let parsedBuffer;\n\n        for (i = 0; i < keySystems.length; i += 1) {\n            pssh_bytes = keySystems[i].initData;\n            parsedBuffer = ISOBoxer.parseBuffer(pssh_bytes);\n            pssh = parsedBuffer.fetch('pssh');\n            if (pssh) {\n                ISOBoxer.Utils.appendBox(moov, pssh);\n            }\n        }\n    }\n\n    function createTrackEncryptionBox(schi) {\n        let tenc = ISOBoxer.createFullBox('tenc', schi);\n\n        tenc.flags = 0;\n        tenc.version = 0;\n\n        tenc.default_IsEncrypted = 0x1;\n        tenc.default_IV_size = 8;\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\n            contentProtection[0]['cenc:default_KID'] : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n    }\n\n    function createTrexBox(moov) {\n\n        let trex = ISOBoxer.createFullBox('trex', moov);\n\n        trex.track_ID = trackId;\n        trex.default_sample_description_index = 1;\n        trex.default_sample_duration = 0;\n        trex.default_sample_size = 0;\n        trex.default_sample_flags = 0;\n\n        return trex;\n    }\n\n    function hexStringtoBuffer(str) {\n        let buf = new Uint8Array(str.length / 2);\n        let i;\n\n        for (i = 0; i < str.length / 2; i += 1) {\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\n        }\n        return buf;\n    }\n\n    function stringToCharCode(str) {\n        let code = 0;\n        let i;\n\n        for (i = 0; i < str.length; i += 1) {\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\n        }\n        return code;\n    }\n\n    function generateMoov(rep) {\n        if (!rep || !rep.adaptation) {\n            return;\n        }\n\n        let isoFile,\n            arrayBuffer;\n\n        representation = rep;\n        adaptationSet = representation.adaptation;\n\n        period = adaptationSet.period;\n        trackId = adaptationSet.index + 1;\n        contentProtection = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;\n\n        isoFile = ISOBoxer.createFile();\n        createFtypBox(isoFile);\n        createMoovBox(isoFile);\n\n        arrayBuffer = isoFile.write();\n\n        return arrayBuffer;\n    }\n\n    instance = {\n        generateMoov: generateMoov\n    };\n\n    return instance;\n}\n\nMssFragmentMoovProcessor.__dashjs_factory_name = 'MssFragmentMoovProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoovProcessor); /* jshint ignore:line */",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MSSFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport MSSFragmentMoovProcessor from './MssFragmentMoovProcessor';\nimport MssEvents from './MssEvents';\n\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nfunction MssFragmentProcessor(config) {\n\n    config = config || {};\n    let context = this.context;\n    let metricsModel = config.metricsModel;\n    let playbackController = config.playbackController;\n    let eventBus = config.eventBus;\n    let protectionController = config.protectionController;\n    const ISOBoxer = config.ISOBoxer;\n    const log = config.log;\n    let instance;\n\n    function setup() {\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\n    }\n\n    function generateMoov(rep) {\n        let mssFragmentMoovProcessor = MSSFragmentMoovProcessor(context).create({protectionController: protectionController, constants: config.constants, ISOBoxer: config.ISOBoxer});\n        return mssFragmentMoovProcessor.generateMoov(rep);\n    }\n\n    function processFragment(e, sp) {\n        if (!e) {\n            return;\n        }\n\n        let request = e.request;\n\n        if (!request) {\n            return;\n        }\n\n        if (request.type === 'MediaSegment') {\n\n            // it's a MediaSegment, let's convert fragment\n            let mssFragmentMoofProcessor = MSSFragmentMoofProcessor(context).create({\n                metricsModel: metricsModel,\n                playbackController: playbackController,\n                ISOBoxer: ISOBoxer,\n                log: log\n            });\n            mssFragmentMoofProcessor.convertFragment(e, sp);\n\n        } else if (request.type === 'FragmentInfoSegment') {\n\n            // it's a FragmentInfo, ask relative fragment info controller to handle it\n            eventBus.trigger(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, {\n                fragmentInfo: e,\n                streamProcessor: sp\n            });\n\n            // Change the sender value to stop event to be propagated (fragment info must not be added to buffer)\n            e.sender = null;\n        }\n    }\n\n    instance = {\n        generateMoov: generateMoov,\n        processFragment: processFragment\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DataChunk from '../streaming/vo/DataChunk';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport MssFragmentInfoController from './MssFragmentInfoController';\nimport MssFragmentProcessor from './MssFragmentProcessor';\nimport MssParser from './parser/MssParser';\n\nfunction MssHandler(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = config.eventBus;\n    const events = config.events;\n    const constants = config.constants;\n    const initSegmentType = config.initSegmentType;\n    let metricsModel = config.metricsModel;\n    let playbackController = config.playbackController;\n    let protectionController = config.protectionController;\n    let mssFragmentProcessor = MssFragmentProcessor(context).create({\n        metricsModel: metricsModel,\n        playbackController: playbackController,\n        protectionController: protectionController,\n        eventBus: eventBus,\n        constants: constants,\n        ISOBoxer: config.ISOBoxer,\n        log: config.log\n    });\n    let mssParser;\n\n    let instance;\n\n    function setup() {}\n\n    function onInitializationRequested(e) {\n        let streamProcessor = e.sender.getStreamProcessor();\n        let request = new FragmentRequest();\n        let representationController = streamProcessor.getRepresentationController();\n        let representation = representationController.getCurrentRepresentation();\n        let period,\n            presentationStartTime;\n\n        period = representation.adaptation.period;\n\n        request.mediaType = representation.adaptation.type;\n        request.type = initSegmentType;\n        request.range = representation.range;\n        presentationStartTime = period.start;\n        //request.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationStartTime, representation.adaptation.period.mpd, isDynamic);\n        //request.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationStartTime + period.duration, period.mpd, isDynamic);\n        request.quality = representation.index;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n        request.representationId = representation.id;\n\n        const chunk = createDataChunk(request, streamProcessor.getStreamInfo().id);\n\n        // Generate initialization segment (moov)\n        chunk.bytes = mssFragmentProcessor.generateMoov(representation);\n\n        eventBus.trigger(events.INIT_FRAGMENT_LOADED, {\n            chunk: chunk,\n            fragmentModel: streamProcessor.getFragmentModel()\n        });\n\n        // Change the sender value to stop event to be propagated\n        e.sender = null;\n    }\n\n    function createDataChunk(request, streamId) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.mediaInfo = request.mediaInfo;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n        chunk.representationId = request.representationId;\n\n        return chunk;\n    }\n\n    function onSegmentMediaLoaded(e) {\n        // Process moof to transcode it from MSS to DASH\n        let streamProcessor = e.sender.getStreamProcessor();\n        mssFragmentProcessor.processFragment(e, streamProcessor);\n    }\n\n    function onPlaybackSeekAsked() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n\n            //create fragment info controllers for each stream processors of active stream (only for audio, video or fragmentedText)\n            let streamController = playbackController.getStreamController();\n            if (streamController) {\n                let processors = streamController.getActiveStreamProcessors();\n                processors.forEach(function (processor) {\n                    if (processor.getType() === constants.VIDEO ||\n                        processor.getType() === constants.AUDIO ||\n                        processor.getType() === constants.FRAGMENTED_TEXT) {\n\n                        // check that there is no fragment info controller registered to processor\n                        let i;\n                        let alreadyRegistered = false;\n                        let externalControllers = processor.getExternalControllers();\n                        for (i = 0; i < externalControllers.length; i++) {\n                            if (externalControllers[i].controllerType &&\n                                externalControllers[i].controllerType === 'MssFragmentInfoController') {\n                                alreadyRegistered = true;\n                            }\n                        }\n\n                        if (!alreadyRegistered) {\n                            let fragmentInfoController = MssFragmentInfoController(context).create({\n                                streamProcessor: processor,\n                                eventBus: eventBus,\n                                metricsModel: metricsModel,\n                                playbackController: playbackController,\n                                ISOBoxer: config.ISOBoxer,\n                                log: config.log\n                            });\n                            fragmentInfoController.initialize();\n                            fragmentInfoController.start();\n                        }\n                    }\n                });\n            }\n        }\n    }\n\n    function registerEvents() {\n        eventBus.on(events.INIT_REQUESTED, onInitializationRequested, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\n    }\n\n    function reset() {\n        eventBus.off(events.INIT_REQUESTED, onInitializationRequested, this);\n        eventBus.off(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, this);\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, this);\n    }\n\n    function createMssParser() {\n        mssParser = MssParser(context).create(config);\n        return mssParser;\n    }\n\n    instance = {\n        reset: reset,\n        createMssParser: createMssParser,\n        registerEvents: registerEvents\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssHandler.__dashjs_factory_name = 'MssHandler';\nexport default dashjs.FactoryMaker.getClassFactory(MssHandler); /* jshint ignore:line */\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssHandler from './MssHandler';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar dashjs = context.dashjs;\nif (!dashjs) {\n    dashjs = context.dashjs = {};\n}\n\ndashjs.MssHandler = MssHandler;\n\nexport default dashjs;\nexport { MssHandler };\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @module MssParser\n * @param {Object} config object\n */\nfunction MssParser(config) {\n    config = config || {};\n    const BASE64 = config.BASE64;\n    const log = config.log;\n    const errorHandler = config.errHandler;\n    const constants = config.constants;\n\n    const TIME_SCALE_100_NANOSECOND_UNIT = 10000000.0;\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AVC1', 'H264', 'TTML', 'DFXP'];\n    const samplingFrequencyIndex = {\n        96000: 0x0,\n        88200: 0x1,\n        64000: 0x2,\n        48000: 0x3,\n        44100: 0x4,\n        32000: 0x5,\n        24000: 0x6,\n        22050: 0x7,\n        16000: 0x8,\n        12000: 0x9,\n        11025: 0xA,\n        8000: 0xB,\n        7350: 0xC\n    };\n    const mimeTypeMap = {\n        'video': 'video/mp4',\n        'audio': 'audio/mp4',\n        'text': 'application/mp4'\n    };\n\n    let instance,\n        mediaPlayerModel;\n\n\n    function setup() {\n        mediaPlayerModel = config.mediaPlayerModel;\n    }\n\n    function mapPeriod(smoothStreamingMedia) {\n        let period = {};\n        let streams,\n            adaptation;\n\n        period.duration = (parseFloat(smoothStreamingMedia.getAttribute('Duration')) === 0) ? Infinity : parseFloat(smoothStreamingMedia.getAttribute('Duration')) / TIME_SCALE_100_NANOSECOND_UNIT;\n\n        // For each StreamIndex node, create an AdaptationSet element\n        period.AdaptationSet_asArray = [];\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\n        for (let i = 0; i < streams.length; i++) {\n            adaptation = mapAdaptationSet(streams[i]);\n            if (adaptation !== null) {\n                period.AdaptationSet_asArray.push(adaptation);\n            }\n        }\n\n        if (period.AdaptationSet_asArray.length > 0) {\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\n        }\n\n        return period;\n    }\n\n    function mapAdaptationSet(streamIndex) {\n\n        let adaptationSet = {};\n        let representations = [];\n        let segmentTemplate = {};\n        let qualityLevels,\n            representation,\n            segments,\n            range,\n            i;\n\n        adaptationSet.id = streamIndex.getAttribute('Name') ? streamIndex.getAttribute('Name') : streamIndex.getAttribute('Type');\n        adaptationSet.contentType = streamIndex.getAttribute('Type');\n        adaptationSet.lang = streamIndex.getAttribute('Language') || 'und';\n        adaptationSet.mimeType = mimeTypeMap[adaptationSet.contentType];\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\n\n        // Create a SegmentTemplate with a SegmentTimeline\n        segmentTemplate = mapSegmentTemplate(streamIndex);\n\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\n        // For each QualityLevel node, create a Representation element\n        for (i = 0; i < qualityLevels.length; i++) {\n            // Propagate BaseURL and mimeType\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\n\n            // Set quality level id\n            qualityLevels[i].Id = adaptationSet.id + '_' + qualityLevels[i].getAttribute('Index');\n\n            // Map Representation to QualityLevel\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\n\n            if (representation !== null) {\n                // Copy SegmentTemplate into Representation\n                representation.SegmentTemplate = segmentTemplate;\n\n                representations.push(representation);\n            }\n        }\n\n        if (representations.length === 0) {\n            return null;\n        }\n\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\n        adaptationSet.Representation_asArray = representations;\n\n        // Set SegmentTemplate\n        adaptationSet.SegmentTemplate = segmentTemplate;\n\n        segments = segmentTemplate.SegmentTimeline.S_asArray;\n\n        range = {\n            start: segments[0].t / segmentTemplate.timescale,\n            end: (segments[segments.length - 1].t + segments[segments.length - 1].d) / segmentTemplate.timescale\n        };\n\n        return adaptationSet;\n    }\n\n    function mapRepresentation(qualityLevel, streamIndex) {\n\n        let representation = {};\n        let fourCCValue = null;\n        let type = streamIndex.getAttribute('Type');\n\n        representation.id = qualityLevel.Id;\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\n        representation.mimeType = qualityLevel.mimeType;\n        representation.width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\n        representation.height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\n\n        fourCCValue = qualityLevel.getAttribute('FourCC');\n\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\n        if (fourCCValue === null || fourCCValue === '') {\n            fourCCValue = streamIndex.getAttribute('FourCC');\n        }\n\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\n        // then we consider the stream is an audio AAC stream\n        if (fourCCValue === null || fourCCValue === '') {\n            if (type === 'audio') {\n                fourCCValue = 'AAC';\n            } else if (type === 'video') {\n                log('[MssParser] FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\n                return null;\n            }\n        }\n\n        // Check if codec is supported\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\n            // Do not send warning\n            //this.errHandler.sendWarning(MediaPlayer.dependencies.ErrorHandler.prototype.MEDIA_ERR_CODEC_UNSUPPORTED, 'Codec not supported', {codec: fourCCValue});\n            log('[MssParser] Codec not supported: ' + fourCCValue);\n            return null;\n        }\n\n        // Get codecs value according to FourCC field\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\n            representation.codecs = getH264Codec(qualityLevel);\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\n            representation.codecs = constants.STPP;\n        }\n\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\n        representation.BaseURL = qualityLevel.BaseURL;\n\n        return representation;\n    }\n\n    function getH264Codec(qualityLevel) {\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let nalHeader,\n            avcoti;\n\n\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\n        // three bytes in the sequence parameter set NAL unit.\n        // => Find the SPS nal header\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\n\n        return 'avc1.' + avcoti;\n    }\n\n    function getAACCodec(qualityLevel, fourCCValue) {\n        let objectType = 0;\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n        let codecPrivateDataHex,\n            arr16,\n            indexFreq,\n            extensionSamplingFrequencyIndex;\n\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\n        //set objectType to 5 => strange, it should be 2\n        if (fourCCValue === 'AACH') {\n            objectType = 0x05;\n        }\n        //if codecPrivateData is empty, build it :\n        if (codecPrivateData === undefined || codecPrivateData === '') {\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\n            indexFreq = samplingFrequencyIndex[samplingRate];\n            if (fourCCValue === 'AACH') {\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\n                codecPrivateData = new Uint8Array(4);\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\n                // equals to SamplingRate*2\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\n                codecPrivateData[3] = 0x0; //alignment bits\n\n                arr16 = new Uint16Array(2);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\n\n            } else {\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\n                codecPrivateData = new Uint8Array(2);\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\n                // put the 2 bytes in an 16 bits array\n                arr16 = new Uint16Array(1);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n            }\n\n            codecPrivateData = '' + codecPrivateDataHex;\n            codecPrivateData = codecPrivateData.toUpperCase();\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\n        } else if (objectType === 0) {\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\n        }\n\n        return 'mp4a.40.' + objectType;\n    }\n\n    function mapSegmentTemplate(streamIndex) {\n\n        let segmentTemplate = {};\n        let mediaUrl;\n\n        mediaUrl = streamIndex.getAttribute('Url').replace('{bitrate}', '$Bandwidth$');\n        mediaUrl = mediaUrl.replace('{start time}', '$Time$');\n\n        segmentTemplate.media = mediaUrl;\n        segmentTemplate.timescale = TIME_SCALE_100_NANOSECOND_UNIT;\n\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex);\n\n        return segmentTemplate;\n    }\n\n    function mapSegmentTimeline(streamIndex) {\n\n        let segmentTimeline = {};\n        let chunks = streamIndex.getElementsByTagName('c');\n        let segments = [];\n        let segment;\n        let prevSegment;\n        let tManifest;\n        let i;\n        let duration = 0;\n\n        for (i = 0; i < chunks.length; i++) {\n            segment = {};\n\n            // Get time 't' attribute value\n            tManifest = chunks[i].getAttribute('t');\n\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\n            segment.tManifest = parseFloat(tManifest);\n            segment.t = parseFloat(tManifest);\n\n            // Get duration 'd' attribute value\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\n\n            // If 't' not defined for first segment then t=0\n            if ((i === 0) && !segment.t) {\n                segment.t = 0;\n            }\n\n            if (i > 0) {\n                prevSegment = segments[segments.length - 1];\n                // Update previous segment duration if not defined\n                if (!prevSegment.d) {\n                    if (prevSegment.tManifest) {\n                        prevSegment.d = parseFloat(tManifest) - parseFloat(prevSegment.tManifest);\n                    } else {\n                        prevSegment.d = segment.t - prevSegment.t;\n                    }\n                }\n                // Set segment absolute timestamp if not set in manifest\n                if (!segment.t) {\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = parseFloat(prevSegment.tManifest) + prevSegment.d;\n                        segment.t = parseFloat(segment.tManifest);\n                    } else {\n                        segment.t = prevSegment.t + prevSegment.d;\n                    }\n                }\n            }\n\n            duration += segment.d;\n\n            // Create new segment\n            segments.push(segment);\n        }\n\n        segmentTimeline.S = segments;\n        segmentTimeline.S_asArray = segments;\n        segmentTimeline.duration = duration / TIME_SCALE_100_NANOSECOND_UNIT;\n\n        return segmentTimeline;\n    }\n\n    function getKIDFromProtectionHeader(protectionHeader) {\n        let prHeader,\n            wrmHeader,\n            xmlReader,\n            KID;\n\n        // Get PlayReady header as byte array (base64 decoded)\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\n\n        // Get Right Management header (WRMHEADER) from PlayReady header\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\n\n        // Convert from multi-byte to unicode\n        wrmHeader = new Uint16Array(wrmHeader.buffer);\n\n        // Convert to string\n        wrmHeader = String.fromCharCode.apply(null, wrmHeader);\n\n        // Parse <WRMHeader> to get KID field value\n        xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\n        KID = xmlReader.querySelector('KID').textContent;\n\n        // Get KID (base64 decoded) as byte array\n        KID = BASE64.decodeArray(KID);\n\n        // Convert UUID from little-endian to big-endian\n        convertUuidEndianness(KID);\n\n        return KID;\n    }\n\n    function getWRMHeaderFromPRHeader(prHeader) {\n        let length,\n            recordCount,\n            recordType,\n            recordLength,\n            recordValue;\n        let i = 0;\n\n        // Parse PlayReady header\n\n        // Length - 32 bits (LE format)\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i];\n        i += 4;\n\n        // Record count - 16 bits (LE format)\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i];\n        i += 2;\n\n        // Parse records\n        while (i < prHeader.length) {\n            // Record type - 16 bits (LE format)\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\n            i += 2;\n\n            // Check if Rights Management header (record type = 0x01)\n            if (recordType === 0x01) {\n\n                // Record length - 16 bits (LE format)\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\n                i += 2;\n\n                // Record value => contains <WRMHEADER>\n                recordValue = new Uint8Array(recordLength);\n                recordValue.set(prHeader.subarray(i, i + recordLength));\n                return recordValue;\n            }\n        }\n\n        return null;\n    }\n\n    function convertUuidEndianness(uuid) {\n        swapBytes(uuid, 0, 3);\n        swapBytes(uuid, 1, 2);\n        swapBytes(uuid, 4, 5);\n        swapBytes(uuid, 6, 7);\n    }\n\n    function swapBytes(bytes, pos1, pos2) {\n        let temp = bytes[pos1];\n        bytes[pos1] = bytes[pos2];\n        bytes[pos2] = temp;\n    }\n\n\n    function createPRContentProtection(protectionHeader) {\n        let pro = {\n            __text: protectionHeader.firstChild.data,\n            __prefix: 'mspr'\n        };\n        return {\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\n            value: 'com.microsoft.playready',\n            pro: pro,\n            pro_asArray: pro\n        };\n    }\n\n    function createWidevineContentProtection(protectionHeader, KID) {\n        // Create Widevine CENC header (Protocol Buffer) with KID value\n        let wvCencHeader = new Uint8Array(2 + KID.length);\n        wvCencHeader[0] = 0x12;\n        wvCencHeader[1] = 0x10;\n        wvCencHeader.set(KID, 2);\n\n        // Create a pssh box\n        let length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\n        let pssh = new Uint8Array(length);\n        let i = 0;\n\n        // Set box length value\n        pssh[i++] = (length & 0xFF000000) >> 24;\n        pssh[i++] = (length & 0x00FF0000) >> 16;\n        pssh[i++] = (length & 0x0000FF00) >> 8;\n        pssh[i++] = (length & 0x000000FF);\n\n        // Set type ('pssh'), version (0) and flags (0)\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\n        i += 8;\n\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\n        pssh.set([0xed, 0xef, 0x8b, 0xa9,  0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\n        i += 16;\n\n        // Set data length value\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\n\n        // Copy Widevine CENC header\n        pssh.set(wvCencHeader, i);\n\n        // Convert to BASE64 string\n        pssh = String.fromCharCode.apply(null, pssh);\n        pssh = BASE64.encodeASCII(pssh);\n\n        return {\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n            value: 'com.widevine.alpha',\n            pssh: {\n                __text: pssh\n            }\n        };\n    }\n\n    function processManifest(xmlDoc, manifestLoadedTime) {\n        let manifest = {};\n        let contentProtections = [];\n        let smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\n        let protection = xmlDoc.getElementsByTagName('Protection')[0];\n        let protectionHeader = null;\n        let period,\n            adaptations,\n            contentProtection,\n            KID,\n            timestampOffset,\n            startTime,\n            segments,\n            i, j;\n\n        // Set manifest node properties\n        manifest.protocol = 'MSS';\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\n        manifest.type = smoothStreamingMedia.getAttribute('IsLive') === 'TRUE' ? 'dynamic' : 'static';\n        manifest.timeShiftBufferDepth = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength')) / TIME_SCALE_100_NANOSECOND_UNIT;\n        manifest.mediaPresentationDuration = (parseFloat(smoothStreamingMedia.getAttribute('Duration')) === 0) ? Infinity : parseFloat(smoothStreamingMedia.getAttribute('Duration')) / TIME_SCALE_100_NANOSECOND_UNIT;\n        manifest.minBufferTime = mediaPlayerModel.getStableBufferTime();\n        manifest.ttmlTimeIsRelative = true;\n\n        // In case of live streams, set availabilityStartTime property according to DVRWindowLength\n        if (manifest.type === 'dynamic') {\n            manifest.availabilityStartTime = new Date(manifestLoadedTime.getTime() - (manifest.timeShiftBufferDepth * 1000));\n            manifest.refreshManifestOnSwitchTrack = true;\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // done by Mss fragment processor\n            manifest.ignorePostponeTimePeriod = true; // in Mss, manifest is never updated\n        }\n\n        // Map period node to manifest root node\n        manifest.Period = mapPeriod(smoothStreamingMedia);\n        manifest.Period_asArray = [manifest.Period];\n\n        // Initialize period start time\n        period = manifest.Period;\n        period.start = 0;\n\n        // ContentProtection node\n        if (protection !== undefined) {\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\n\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\n\n            // Get KID (in CENC format) from protection header\n            KID = getKIDFromProtectionHeader(protectionHeader);\n\n            // Create ContentProtection for PlayReady\n            contentProtection = createPRContentProtection(protectionHeader);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            // Create ContentProtection for Widevine (as a CENC protection)\n            contentProtection = createWidevineContentProtection(protectionHeader, KID);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            manifest.ContentProtection = contentProtections;\n            manifest.ContentProtection_asArray = contentProtections;\n        }\n\n        adaptations = period.AdaptationSet_asArray;\n\n        for (i = 0; i < adaptations.length; i += 1) {\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n            // Propagate content protection information into each adaptation\n            if (manifest.ContentProtection !== undefined) {\n                adaptations[i].ContentProtection = manifest.ContentProtection;\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\n            }\n\n            if (manifest.type === 'dynamic') {\n                // Match timeShiftBufferDepth to video segment timeline duration\n                if (manifest.timeShiftBufferDepth > 0 &&\n                    adaptations[i].contentType === 'video' &&\n                    manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\n                    manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\n                }\n            }\n        }\n\n        if (manifest.timeShiftBufferDepth < manifest.minBufferTime) {\n            manifest.minBufferTime = manifest.timeShiftBufferDepth;\n        }\n\n        // Delete Content Protection under root manifest node\n        delete manifest.ContentProtection;\n        delete manifest.ContentProtection_asArray;\n\n        // In case of VOD streams, check if start time is greater than 0\n        // Then determine timestamp offset according to higher audio/video start time\n        // (use case = live stream delinearization)\n        if (manifest.type === 'static') {\n            for (i = 0; i < adaptations.length; i++) {\n                if (adaptations[i].contentType === 'audio' || adaptations[i].contentType === 'video') {\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                    startTime = segments[0].t;\n                    if (timestampOffset === undefined) {\n                        timestampOffset = startTime;\n                    }\n                    timestampOffset = Math.min(timestampOffset, startTime);\n                    // Correct content duration according to minimum adaptation's segments duration\n                    // in order to force <video> element sending 'ended' event\n                    manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, ((segments[segments.length - 1].t + segments[segments.length - 1].d) / TIME_SCALE_100_NANOSECOND_UNIT).toFixed(3));\n                }\n            }\n\n            // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\n            if (timestampOffset > 0) {\n                for (i = 0; i < adaptations.length; i++) {\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                    for (j = 0; j < segments.length; j++) {\n                        if (!segments[j].tManifest) {\n                            segments[j].tManifest = segments[j].t;\n                        }\n                        segments[j].t -= timestampOffset;\n                    }\n                    if (adaptations[i].contentType === 'audio' || adaptations[i].contentType === 'video') {\n                        period.start = Math.max(segments[0].t, period.start);\n                    }\n                }\n                period.start /= TIME_SCALE_100_NANOSECOND_UNIT;\n            }\n        }\n\n        period.duration = manifest.mediaPresentationDuration;\n\n        return manifest;\n    }\n\n    function parseDOM(data) {\n\n        let xmlDoc = null;\n\n        if (window.DOMParser) {\n            try {\n                let parser = new window.DOMParser();\n\n                xmlDoc = parser.parseFromString(data, 'text/xml');\n                if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\n                    throw new Error('Error parsing XML');\n                }\n            } catch (e) {\n                errorHandler.manifestError('parsing the manifest failed', 'parse', data, e);\n                xmlDoc = null;\n            }\n        }\n\n        return xmlDoc;\n    }\n\n    function getMatchers() {\n        return null;\n    }\n\n    function getIron() {\n        return null;\n    }\n\n    function internalParse(data) {\n        let xmlDoc = null;\n        let manifest = null;\n\n        const startTime = window.performance.now();\n\n        // Parse the MSS XML manifest\n        xmlDoc = parseDOM(data);\n\n        const xmlParseTime = window.performance.now();\n\n        if (xmlDoc === null) {\n            return null;\n        }\n\n        // Convert MSS manifest into DASH manifest\n        manifest = processManifest(xmlDoc, new Date());\n\n        const mss2dashTime = window.performance.now();\n\n        log('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        return manifest;\n    }\n\n    instance = {\n        parse: internalParse,\n        getMatchers: getMatchers,\n        getIron: getIron\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssParser.__dashjs_factory_name = 'MssParser';\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\n",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.mediaInfo = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n        this.representationId = null;\n    }\n}\n\nexport default DataChunk;",
    "/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor() {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n        this.representationId = null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n"
  ]
}