"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlideAtlasCenterPanel = void 0;
var $ = require("jquery");
var BaseEvents_1 = require("../uv-shared-module/BaseEvents");
var CenterPanel_1 = require("../uv-shared-module/CenterPanel");
var Utils_1 = require("../../Utils");
var SlideAtlasCenterPanel = /** @class */ (function (_super) {
    __extends(SlideAtlasCenterPanel, _super);
    function SlideAtlasCenterPanel($element) {
        return _super.call(this, $element) || this;
    }
    SlideAtlasCenterPanel.prototype.create = function () {
        return __awaiter(this, void 0, void 0, function () {
            var that;
            return __generator(this, function (_a) {
                this.setConfig("slideAtlasCenterPanel");
                _super.prototype.create.call(this);
                this.$title.hide();
                that = this;
                this.extensionHost.subscribe(BaseEvents_1.BaseEvents.OPEN_EXTERNAL_RESOURCE, function (resources) {
                    that.openMedia(resources);
                });
                return [2 /*return*/];
            });
        });
    };
    SlideAtlasCenterPanel.prototype.loadTilesource = function (id) {
        return __awaiter(this, void 0, void 0, function () {
            var tileDescriptor;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, (0, Utils_1.loadCSS)(["https://unpkg.com/slideatlas-viewer@4.4.1/dist/sa.css"])];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, (0, Utils_1.loadScripts)([
                                "https://unpkg.com/slideatlas-viewer@4.4.1/dist/sa-lib.js",
                                "https://unpkg.com/slideatlas-viewer@4.4.1/dist/sa.max.js"
                            ])];
                    case 2:
                        _a.sent();
                        tileDescriptor = id;
                        if (!tileDescriptor.endsWith("/")) {
                            tileDescriptor += "/";
                        }
                        tileDescriptor += "tiles";
                        if (id.endsWith("/")) {
                            id = id.substr(0, id.length - 1);
                        }
                        fetch(tileDescriptor)
                            .then(function (response) { return response.json(); })
                            .then(function (info) {
                            var tileSource = {
                                height: info.sizeY,
                                width: info.sizeX,
                                tileWidth: info.tileWidth,
                                tileHeight: info.tileHeight,
                                minLevel: 0,
                                maxLevel: info.levels - 1,
                                units: "mm",
                                spacing: [info.mm_x, info.mm_y],
                                getTileUrl: function (level, x, y, query) {
                                    var url = tileDescriptor + "/zxy/" + level + "/" + x + "/" + y;
                                    if (query) {
                                        url += "?" + $.param(query);
                                    }
                                    return url;
                                }
                            };
                            if (!info.mm_x) {
                                tileSource.units = "pixels";
                                tileSource.spacing = [1, 1];
                            }
                            SA.SAViewer(_this.$content, {
                                zoomWidget: true,
                                drawWidget: true,
                                navigationWidget: true,
                                prefixUrl: "https://unpkg.com/slideatlas-viewer@4.4.1/dist/img/",
                                tileSource: tileSource
                            });
                            // Create the annotation GUI
                            // new SAM.LayerPanel(viewer, this.itemId);
                            // this.$content.css({position: 'relative'});
                            SA.SAFullScreenButton(_this.$content).css({
                                position: "absolute",
                                left: "2px",
                                top: "2px"
                            });
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    SlideAtlasCenterPanel.prototype.openMedia = function (resources) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                this.extension.getExternalResources(resources).then(function () {
                    var canvas = _this.extension.helper.getCurrentCanvas();
                    var annotations = canvas.getContent();
                    if (annotations.length) {
                        var annotation = annotations[0];
                        var body = annotation.getBody();
                        if (body.length) {
                            var services = body[0].getServices();
                            for (var i = 0; i < services.length; i++) {
                                var service = services[i];
                                _this.loadTilesource(service.id);
                                break;
                            }
                        }
                    }
                    _this.extensionHost.publish(BaseEvents_1.BaseEvents.EXTERNAL_RESOURCE_OPENED);
                    _this.extensionHost.publish(BaseEvents_1.BaseEvents.LOAD);
                });
                return [2 /*return*/];
            });
        });
    };
    SlideAtlasCenterPanel.prototype.resize = function () {
        _super.prototype.resize.call(this);
    };
    return SlideAtlasCenterPanel;
}(CenterPanel_1.CenterPanel));
exports.SlideAtlasCenterPanel = SlideAtlasCenterPanel;
//# sourceMappingURL=SlideAtlasCenterPanel.js.map